Imports System.Windows
Imports System.Drawing
Imports System.Web.UI.DataVisualization.Charting
Imports System.Threading
Imports System.ComponentModel
Imports System.Xml
Imports Telerik.Web.UI
Imports System.Net.Mail
Imports System.IO
Imports System.Net

Partial Public Class DRAFCNRFQ1
    Inherits FinIQAppMain

    Private Const sSelfPath As String = "FinIQWebApp/ELN_DealEntry1/DRAFCNRFQ1.aspx.vb"
    Dim oWEBADMIN As WEB_ADMINISTRATOR.LSSAdministrator
    Dim oWEBMarketData As Web_FinIQ_MarketData.FINIQ_WEBSRV_MarketData
    Private oWebCustomerProfile As Web_CustomerProfile.CustomerProfile
    '<Changed By Mohit Lalwani>
    Private Const sPoolRedirectionPath As String = "../ELN_OrderPool/ELN_OrderPool.aspx?menustr=EQ%20Sales%20-%20ELN%20Order%20Pool&Mode=&token="
    '   Private Const sPoolRedirectionPath As String = "../ELN_OrderPool/ELN_OrderPool.aspx"
    '</Changed By Mohit Lalwani>
    Dim objELNRFQ As Web_ELNRFQ.ELN_RFQ
    Dim strBestStrike As String = String.Empty   ''<Nikhil M. on 17-Sep-2016: Added  >
    Dim ObjCommanData As Web_CommonFunction.CommonFunction '' Added By Nikhil M 08Aug16 For Booking Brach DropDown EQSCB-16
    Dim generateDocument As Web_DocumentGeneration.GenerateDocumentsForWeb
    Private Enum prdTab
        ELN
        FCN
        DRA
        Acc
        Dec
        EQO
    End Enum
#Region "Variables"
    'Private udtStructured_Product_Tranche As Structured_Product_Tranche_ELN
    Dim _DockingLocation As System.Web.UI.DataVisualization.Charting.Docking = DataVisualization.Charting.Docking.Right
    Dim _ChartBackGradientStyle As System.Web.UI.DataVisualization.Charting.GradientStyle = DataVisualization.Charting.GradientStyle.None
    Dim _ChartBorderlineDashStyle As System.Web.UI.DataVisualization.Charting.ChartDashStyle = DataVisualization.Charting.ChartDashStyle.NotSet
    Dim _ChartBorderSkinStyle As System.Web.UI.DataVisualization.Charting.BorderSkinStyle = DataVisualization.Charting.BorderSkinStyle.None
    '<AvinashG. on 09-Aug-2016: Unused variables>
    'Dim strBaseCcy As String
    'Dim strShare As String
    'Dim strBarrier As String
    'Dim strStrike As String
    'Dim strGetDate As String
    'Dim strTenor As String
    'Dim strJPMId As String
    'Dim strQuantoCcy As String
    'Dim strHSBCPrice As String
    'Dim strCSPrice As String
    'Dim strAmount As String
    'Dim strXMLNote_RFQ As String
    'Dim strEntityId As String
    'Public flag1 As Boolean = False
    'Dim strcount As String
    'Dim strJPMPrice As String
    'Dim StrnoteRFQXML As String
    'Dim templateCode As String
    'Dim strHardTenor As String
    'Dim strPPID As String
    'Dim EP_ID As String
    'Dim ER_ID As String
    'Dim EP_ER_QuoteRequestId As String
    'Dim ER_QuoteRequestId As String
    'Dim Tenor As Integer = 0
    'Public arr(3) As String
    '</AvinashG. on 09-Aug-2016: Unused variables>

    Dim interval As String '  Added by Chitralekha 11-Sept-16

    Dim flag As String

    Dim JPM_ID As String
    Dim UBS_ID As String
    Dim HSBC_ID As String
    Dim BNPP_ID As String
    Dim BAML_ID As String
    Dim DBIB_ID As String
    Dim OCBC_ID As String
    Dim CITI_ID As String
    Dim LEONTEQ_ID As String
    Dim COMMERZ_ID As String

    Dim CS_ID As String

    Dim SchemeName As String

    Dim Quote_ID As String
    Dim PP_CODE As String
    Public Const ChartFont As String = "Arial"
    Public Const ChartTitleSize As Double = 7.0F
    Dim numberdiv As Double = 0

    Dim strUPDOWN As String = ""
    Dim tabIndex As Integer
    Dim getAllId As Hashtable
    Dim getPPId As Hashtable
    Dim WebServicePath As String
    Dim sEQC_DealerLoginGroups As String
    ''--
    Public Structure ChartColors
        Dim JPM As Color
        Dim CS As Color
        Dim UBS As Color
        Dim HSBC As Color
        Dim FINIQ As Color
        Dim BAML As Color
        Dim BNPP As Color
        Dim DBIB As Color
        Dim OCBC As Color
        Dim CITI As Color
        Dim LEONTEQ As Color
        Dim COMMERZ As Color
    End Structure
    Public Shared structChartColors As ChartColors

    'Public Structure Structured_Product_Tranche_ELN
    '    Public strExchange As String
    '    Public strEntityName As String
    '    Public strTemplateName As String
    '    Public lngTemplateId As String
    '    Public strTradeDate As String
    '    Public strValueDate As String
    '    Public strFxingdate As String
    '    Public strMaturityDate As String
    '    Public strCurrency As String
    '    Public strAsset As String
    '    Public strELNType As String
    '    Public strTenorType As String
    '    Public dblStrike1 As Double
    '    Public dblStrike2 As Double
    '    Public strPrice As Double
    '    Public strPrice1 As Double
    '    Public dblBarrier As String
    '    Public strRemark As String
    '    Public dblNominalAmount As Double
    '    Public inttenor As Integer
    '    Public strIssuer_Date_Offset As String
    '    Public strBranchName As String
    '    Public strSecurityDesc As String
    '    Public strOrderQty As String
    '    Public strSolveFor As String
    '    Public strAssetclass As String
    '    Public strRFQRMName As String
    '    Public strEmailId As String
    '    Public strBranch As String
    '    Public strDRAFCNTenorType As String
    '    Public strUnderlyingCode As String
    '    Public strExchangeDRA As String
    '    Public strCurrencyDRA As String
    '    Public inttenorDRA As Integer
    '    Public strGuaranteedDuration As String
    '    Public strGuaranteedDurationType As String
    '    Public strKIType As String
    '    Public strKILevel As Double
    '    Public strKIObsFreq As String
    '    Public strCoupon As Double
    '    Public strCoupon1 As Double
    '    Public strKOType As String
    '    Public strKOLevel As Double
    '    Public strOTCYN As String
    '    Public dblStrikePrice As Double
    '    Public strAccumTenorType As String
    '    Public strExchangeAccum As String
    '    Public strKoPerc As String
    '    Public strUpfront As Double
    '    Public strUpfront1 As Double
    '    Public inttenorAccum As Integer
    '    Public strLeverageratio As String
    '    Public strFrequency As String
    '    Public strAQDQCcy As String
    '    Public dblRMMargin As Double
    'End Structure
    ''--
    Dim hitCount As Integer = 0
    Dim orderValidityTimer As Integer = 0
#End Region

#Region "Enum"


    Enum grdDRAFCNEnum
        RFQ_ID
        CreatePool
        RFQ_Details '<Mohit Lalwani on 20-Jan-2015: Added for BoS>
        GenerateDoc '<Mohit Lalwani>
        Solve_For
        Provider_Name
        Price_Per
        Type
        Share
        Strike_Per
        Coupon_Per
        Tenor
        RFQTenor
        Currency
        Order_Quantity
        KI_Type
        KI_Level
        GU_Period
        KI_Frequency
        KO_Type
        KO_Level
        Exchange
        OTC
        Remark
        External_RFQ_ID
        Quoted_At
        ClubbingRFQId
        Quote_Status
        Upfront
        Client_Price
        Client_Yield
        ER_Created_By
        BestPrice_YN

    End Enum
   
    '<AvinashG. on 27-Nov-2015, FA-1190>
    Enum grdOrderEnum
        ER_QuoteRequestId
        Order_ID
        EP_InternalOrderID
        Order_Details
        GenerateDoc
        ER_RMName
        PP_CODE
        Order_Status
        ELN_Order_Type
        LimitPrice1
        LimitPrice2
        LimitPrice3
        EP_Execution_Price1
        EP_Execution_Price2
        EP_Execution_Price3
        EP_AveragePrice
        Ordered_Qty
        Filled_Qty
        ER_Tenor
        ER_UnderlyingCode
        ER_CashCurrency
        ER_LeverageRatio
        ER_GuaranteedDuration
        EP_StrikePercentage
        EP_KO
        EP_CouponPercentage
        EP_OfferPrice
        EP_RM_Margin
        EP_Upfront
        EP_Client_Price
        EP_Client_Yield
        EP_Notional_Amount1
        EP_Order_Remark1
        EP_ExternalQuoteId
        EP_Deal_Booking_Branch
        ER_TransactionTime
        EP_HedgedFor
        EP_HedgingOrderId
        ER_Type
        ER_KI_Type
        ER_KI_Level
        ER_KI_ObservationFrequency
        ER_Created_By
        ER_KO_Type
        EP_OrderComment
    End Enum
    Enum enumPoolDetails
        Exchange
        Share
        SolveFor
        StrikePercentage
        PricePercentage
        Upfront
        PoolMinimum
        PoolMaximum
        MinOrderSize
        MinIncrement
        Tenor
        TenorType
        ELNType
        SettlementWeeks
        SettlementDays
        Currency
        BarrierPercentage
        BarrierType
        TradeDate
        SettlementDate
        ExpiryDate
        MaturityDate
        RecommendedFlag
        Notional
        PPCODE
        RFQID
        PPID
        LockVal
        EOP_OrderPoolCode
        BookingCenter '<RiddhiS. on 10-Nov-2016>


    End Enum
    Enum RedirectOrderDetails
        Exchange
        Share
        SolveFor
        StrikePercentage
        PricePercentage
        Upfront
        Tenor
        TenorType
        ELNType
        SettlementWeeks
        SettlementDays
        Currency
        Notional
        BarrierPercentage
        BarrierType
        TradeDate
        SettlementDate
        ExpiryDate
        MaturityDate
    End Enum

    ''<Rushikesh on 20Sept16>
    Enum grdRMDataEnum
        chkAll
        RM_Name
        Account_Number
        Notional
        OrderId
    End Enum

#End Region

#Region "Page Load"

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        Dim dtPersonalSettings As DataTable
        Dim blnShowEstimatedNotional As Boolean
        Dim dtExchange As DataTable
        Dim dtExchange2 As DataTable
        Dim dtExchange3 As DataTable
        Try
           
            '</RiddhiS.>
            WebServicePath = String.Empty
            WebServicePath = ConfigurationManager.AppSettings("EQSP_WebServiceLocation").ToString
            WebServicePath = Request.Url.Scheme & Uri.SchemeDelimiter & WebServicePath
            objELNRFQ = New Web_ELNRFQ.ELN_RFQ
            objELNRFQ.Url = WebServicePath & "/FinIQWeb_WebService/WebELN_DealEntry/ELN_RFQ.asmx"
            ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value

            '<AvinashG. on 21-Oct-2016:EQSCB-79 - URL schema binding on Share search>
            ddlShareDRA.WebServiceSettings.Path = WebServicePath & "/FinIQWeb_WebService/WebELN_DealEntry/ELN_RFQ.asmx" ''objELNRFQ.Url
            ddlShareDRA.WebServiceSettings.Method = "GetSharesNames"
            ddlShareDRA2.WebServiceSettings.Path = WebServicePath & "/FinIQWeb_WebService/WebELN_DealEntry/ELN_RFQ.asmx" ''objELNRFQ.Url
            ddlShareDRA2.WebServiceSettings.Method = "GetSharesNames"
            ddlShareDRA3.WebServiceSettings.Path = WebServicePath & "/FinIQWeb_WebService/WebELN_DealEntry/ELN_RFQ.asmx" ''objELNRFQ.Url
            ddlShareDRA3.WebServiceSettings.Method = "GetSharesNames"
            'ddlShareDRA.WebServiceSettings.Path = "/FinIQWeb_WebService/WebELN_DealEntry/ELN_RFQ.asmx" ''objELNRFQ.Url
            'ddlShareDRA.WebServiceSettings.Method = "GetSharesNames"
            'ddlShareDRA2.WebServiceSettings.Path = "/FinIQWeb_WebService/WebELN_DealEntry/ELN_RFQ.asmx" ''objELNRFQ.Url
            'ddlShareDRA2.WebServiceSettings.Method = "GetSharesNames"
            'ddlShareDRA3.WebServiceSettings.Path = "/FinIQWeb_WebService/WebELN_DealEntry/ELN_RFQ.asmx" ''objELNRFQ.Url
            'ddlShareDRA3.WebServiceSettings.Method = "GetSharesNames"
            '</AvinashG. on 21-Oct-2016:EQSCB-79 - URL schema binding on Share search>

            '<AvinashG. on 02-Feb-2016:  FA-1286 - Display User Limit and mail to dealer desk(email id based on config)>


            generateDocument = New Web_DocumentGeneration.GenerateDocumentsForWeb
            generateDocument.Url = LoginInfoGV.Login_Info.WebServicePath & "/DocumentGeneration/DocumentGeneration.asmx"
            generateDocument.Credentials = System.Net.CredentialCache.DefaultCredentials

            oWEBADMIN = New WEB_ADMINISTRATOR.LSSAdministrator()
            oWEBADMIN.Url = LoginInfoGV.Login_Info.WebServicePath & "/LSSAdministrator/LSSAdministrator.asmx"

            oWEBMarketData = New Web_FinIQ_MarketData.FINIQ_WEBSRV_MarketData()
            oWEBMarketData.Url = LoginInfoGV.Login_Info.WebServicePath & "/WebELN_DealEntry/FINIQ_WEBSRV_MarketData.asmx"

            ''<Nikhil M. on 22-Sep-2016: Added>
            ObjCommanData = New Web_CommonFunction.CommonFunction
            ObjCommanData.Url = LoginInfoGV.Login_Info.WebServicePath & "/CommonFunction/CommonFunction.asmx"


            oWebCustomerProfile = New Web_CustomerProfile.CustomerProfile()
            oWebCustomerProfile.Url = LoginInfoGV.Login_Info.WebServicePath & "/Customer_Profile/CustomerProfile.asmx"



            hitCount = CInt(objReadConfig.ReadConfig(dsConfig, "FINIQ_DRAFCN_RFQ", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "30"))
            System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "pollingTimeJS", "var pollingMilliSec = " + hitCount.ToString + ";", True)
            orderValidityTimer = CInt(objReadConfig.ReadConfig(dsConfig, "EQConnect_Order_Validity_Timer", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "30"))
            System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "orderValidityTimeJS", "var orderValiditySec = " + orderValidityTimer.ToString + ";", True)


            'Mohit Lalwani on 27-Sept-2016
            For Each row As GridViewRow In grdRMData.Rows
                Dim FindCustomer As FinIQ_Fast_Find_Customer
                FindCustomer = CType(row.FindControl("FindCustomer"), FinIQ_Fast_Find_Customer)
                FindCustomer.CA_Filter = Fast_ICustomer_Search.EN_Customer_Or_Account_Filter.Account
                FindCustomer.UnVerified = FinIQApp_Web_Const.EN_ActivationFilter.Exclude
                FindCustomer.Customer_Filter = Fast_ICustomer_Search.EN_Customer_Filter.ENTITY_LRC_SELECTED_RM  'Mohit Lalwani on 22-Oct-2016
                FindCustomer.Entity_ID = LoginInfoGV.Login_Info.EntityID
                FindCustomer.Login_Id = LoginInfoGV.Login_Info.LoginId
                FindCustomer.WebCustomerProfile = oWebCustomerProfile
                FindCustomer.SSICheck = False
                FindCustomer.SetItemIndex = row.RowIndex

                ''FindCustomer.RM_ID = row.Cells(grdRMDataEnum.RM_Name).Controls.OfType(Of Label)().FirstOrDefault().Text
                FindCustomer.RM_ID = (CType(row.Cells(grdRMDataEnum.RM_Name).FindControl("ddlRMName"), RadDropDownList)).SelectedItem().Text


                '<RiddhiS. on 10-Nov-2016: Pass booking center as filter to customer find control>
                FindCustomer.CustomerBookingCenter = ddlBookingBranchPopUpValue.SelectedValue

            Next
            '/Mohit Lalwani on 27-Sept-2016



            If Page.IsPostBack = False AndAlso Request.HttpMethod = "GET" Then
                '<RiddhiS. on 28-Oct-2016: Clear session>
                Session.Remove("Scheme_DRAFCN")
                Session.Remove("Template_Code_DRAFCN")

                Session.Remove("dtDRAFCNPreTradeAllocation")
                Session.Remove("dtCustomerCodes")
                Dim ApplicationID As String

                If Not IsNothing(Request.QueryString("PrdToLoad")) Then
                    If UCase(Request.QueryString("PrdToLoad")) = "DRA" Then
                        ApplicationID = "DRA_DealEntry"
                    Else
                        ApplicationID = "FCN_DealEntry"
                    End If
                Else
                    ApplicationID = "FCN_DealEntry"
                End If

                'Mohit Lalwani on 7-Sept-2016 for Personal Settings
                dtPersonalSettings = New DataTable("Personal Settings")
                'ObjCommanData = New Web_CommonFunction.CommonFunction
                Select Case ObjCommanData.Web_Get_DefaultPersonalSettingsInfo(LoginInfoGV.Login_Info.EntityID, LoginInfoGV.Login_Info.LoginId, ApplicationID, dtPersonalSettings)
                    Case Web_CommonFunction.Database_Transaction_Response.Db_Successful
                        Session.Add("dtPersonalSettings", dtPersonalSettings)
                    Case Web_CommonFunction.Database_Transaction_Response.Db_No_Data
                        Session.Add("dtPersonalSettings", dtPersonalSettings)
                    Case Web_CommonFunction.Database_Transaction_Response.DB_Unsuccessful
                        Session.Add("dtPersonalSettings", dtPersonalSettings)
                End Select
                '/Mohit Lalwani on 7-Sept-2016 for Personal Settings
                'Added by Mohit Lalwani on 15-Jan-2015
                hdnConfig_EQC_Allow_ALL_AsExchangeOption.Value = objReadConfig.ReadConfig(dsConfig, "EQC_Allow_ALL_AsExchangeOption", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                '/Added by Mohit Lalwani on 15-Jan-2015
                System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "ColorGrayedOut", " $('#ctl00_MainContent_tabContainer_tabPanelELN_txtTradeDate_txtDate').css('background-color', '#D3D3D3');", True)

                'Mohit Lalwani on 1-July-2016
                Select Case objReadConfig.ReadConfig(dsConfig, "EQO_ShowEQOTab", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper
                    Case "Y", "YES"
                        'sEQC_DealerLoginGroups = objReadConfig.ReadConfig(dsConfig, "EQC_DealerLoginGroups", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NONE")
                        'Dim sLoginGrp As String
                        'sLoginGrp = LoginInfoGV.Login_Info.LoginGroup
                        'If sEQC_DealerLoginGroups.Split(CChar(",")).ToList().IndexOf(sLoginGrp) > -1 Then
                        If UCase(Request.QueryString("Mode")) = "ALL" Then
                            ''User is Dealer
                            tabContainer.Tabs(prdTab.EQO).Visible = True
                        Else
                            Select Case objReadConfig.ReadConfig(dsConfig, "EQO_ShowEQOTabToRM", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                                Case "Y", "YES"
                                    tabContainer.Tabs(prdTab.EQO).Visible = True
                                Case "N", "NO"
                                    tabContainer.Tabs(prdTab.EQO).Visible = False
                            End Select
                        End If
                    Case "N", "NO"
                        tabContainer.Tabs(prdTab.EQO).Visible = False
                End Select
                'Select Case objReadConfig.ReadConfig(dsConfig, "EQO_ShowEQOTab", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper
                '    Case "Y", "YES"
                '        tabContainer.Tabs(prdTab.EQO).Visible = True
                '    Case "N", "NO"
                '        tabContainer.Tabs(prdTab.EQO).Visible = False
                'End Select
                '/Mohit Lalwani on 1-July-2016
                '<MohitL. on 15-Apr-2016:Set Default notional size and daily no. of shares to 0 on main pricer screen JIRA ID: EQBOSDEV-321>
                Select Case objReadConfig.ReadConfig(dsConfig, "EQC_SetZeroNotional_MainPricer", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper
                    Case "Y", "YES"
                        txtOrderDRAFCN.Text = "0"
                    Case "N", "NO"
                        ' txtOrderDRAFCN.Text = "1,000,000"
                End Select
                '</MohitL. on 15-Apr-2016:Set Default notional size and daily no. of shares to 0 on main pricer screen JIRA ID: EQBOSDEV-321>

                Select Case objReadConfig.ReadConfig(dsConfig, "EQC_Allowed_QuoteMailing", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                    Case "Y", "YES"
                    Case "N", "NO"
                        ''btnMail.Visible = False
                End Select


                If ((objReadConfig.ReadConfig(dsConfig, "EQC_ShowTRShareInfo", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper = "NO" Or _
                     objReadConfig.ReadConfig(dsConfig, "EQC_ShowTRShareInfo", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper = "N") And _
                     (objReadConfig.ReadConfig(dsConfig, "EQC_DisplayGraph", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper = "NO" Or _
                     objReadConfig.ReadConfig(dsConfig, "EQC_DisplayGraph", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper = "N")) Then

                Else
                    Dim count As Integer = 0
                    Select Case objReadConfig.ReadConfig(dsConfig, "EQC_ShowTRShareInfo", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                        Case "Y", "YES"
                            count = count + 1
                        Case "N", "NO"
                            rblShareData.SelectedValue = "GRAPHDATA"
                            rowShareData.Visible = False
                            rowGraphData.Visible = True
                            rblShareData.Items.FindByValue("SHAREDATA").Attributes.Add("style", "display:none")
                    End Select
                    Select Case objReadConfig.ReadConfig(dsConfig, "EQC_DisplayGraph", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper
                        Case "Y", "YES"
                            count = count + 1
                        Case "N", "NO"
                            rblShareData.SelectedValue = "SHAREDATA"
                            rowGraphData.Visible = False
                            rblShareData.Items.FindByValue("GRAPHDATA").Attributes.Add("style", "display:none")
                    End Select



                    If count = 2 Then
                        rblShareData.Visible = True
                        tdrblShareData.Visible = True '<Added By Mohit Lalwnai on 1-Apr-2016 FA-1384>
                    Else
                        rblShareData.Visible = False
                        tdrblShareData.Visible = False '<Added By Mohit Lalwnai on 1-Apr-2016 FA-1384>
                    End If

                End If
                Select Case objReadConfig.ReadConfig(dsConfig, "EQC_Allow_ALL_AsExchangeOption", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                    Case "Y", "YES"
                        lblSelectionExchangeDRAFCNHeader.Visible = False
                        lblDisplayExchangeDRAFCNHeader.Visible = True
                        lblExchangeDRAFCN.Visible = True
                        lblExchangeDRAFCN2.Visible = True
                        lblExchangeDRAFCN3.Visible = True
                        ddlExchangeDRAFCN.Visible = False
                        ddlExchangeDRAFCN2.Visible = False
                        ddlExchangeDRAFCN3.Visible = False
                        lblPRRVal.Visible = True
                        lblPRRVal2.Visible = True
                        lblPRRVal3.Visible = True
                    Case "N", "NO"
                        lblSelectionExchangeDRAFCNHeader.Visible = True
                        lblDisplayExchangeDRAFCNHeader.Visible = False
                        lblExchangeDRAFCN.Visible = False
                        lblExchangeDRAFCN2.Visible = False
                        lblExchangeDRAFCN3.Visible = False
                        lblPRRVal.Visible = False
                        lblPRRVal2.Visible = False
                        lblPRRVal3.Visible = False
                End Select

                Select Case objReadConfig.ReadConfig(dsConfig, "EQC_AllowPoolCreation_From_Pricer", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper()
                    Case "Y", "YES"
                        'sEQC_DealerLoginGroups = objReadConfig.ReadConfig(dsConfig, "EQC_DealerLoginGroups", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NONE")
                        'Dim sLoginGrp As String
                        'sLoginGrp = LoginInfoGV.Login_Info.LoginGroup

                        'If sEQC_DealerLoginGroups.Split(CChar(",")).ToList().IndexOf(sLoginGrp) > -1 Then
                        If UCase(Request.QueryString("Mode")) = "ALL" Then
                            ''User is Dealer
                            grdDRAFCN.Columns(grdDRAFCNEnum.CreatePool).Visible = True
                        Else

                            grdDRAFCN.Columns(grdDRAFCNEnum.CreatePool).Visible = False
                        End If
                    Case "N", "NO"

                        grdDRAFCN.Columns(grdDRAFCNEnum.CreatePool).Visible = False
                End Select

                'Added by Mohit Lalwani on 20-Jan-2015
                Select Case objReadConfig.ReadConfig(dsConfig, "EQC_ShowRFQandOrderDetails", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper()
                    Case "Y", "YES"
                        grdDRAFCN.Columns(grdDRAFCNEnum.RFQ_Details).Visible = True
                    Case "N", "NO"
                        grdDRAFCN.Columns(grdDRAFCNEnum.RFQ_Details).Visible = False
                End Select

                Select Case objReadConfig.ReadConfig(dsConfig, "EQC_ShowRFQandOrderDetails", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper()
                    Case "Y", "YES"
                        grdOrder.Columns(grdOrderEnum.Order_Details).Visible = True
                    Case "N", "NO"
                        grdOrder.Columns(grdOrderEnum.Order_Details).Visible = False
                End Select
                '/Added by Mohit Lalwani on 20-Jan-2015

                ''<Added by Rushikesh D. on 26-May-16 JIRAID:EQBOSDEV-385>
                Select Case objReadConfig.ReadConfig(dsConfig, "EQC_CaptureOrderComment", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper
                    Case "Y", "YES"
                        grdOrder.Columns(grdOrderEnum.EP_OrderComment).Visible = True
                    Case "N", "NO"
                        grdOrder.Columns(grdOrderEnum.EP_OrderComment).Visible = False
                End Select
                ''</Added by Rushikesh D. on 26-May-16 JIRAID:EQBOSDEV-385>



                Dim sEQC_DealerRedirection_OnPricer As String = objReadConfig.ReadConfig(dsConfig, "EQC_DealerRedirection_OnPricer", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO")


                Select Case sEQC_DealerRedirection_OnPricer.ToUpper
                    Case "Y", "YES"
                        'sEQC_DealerLoginGroups = objReadConfig.ReadConfig(dsConfig, "EQC_DealerLoginGroups", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NONE")
                        'Dim sLoginGrp As String
                        'sLoginGrp = LoginInfoGV.Login_Info.LoginGroup

                        'If sEQC_DealerLoginGroups.Split(CChar(",")).ToList().IndexOf(sLoginGrp) > -1 Then
                        If UCase(Request.QueryString("Mode")) = "ALL" Then
                            ''User is Dealer
                            grdOrder.Columns(grdOrderEnum.EP_HedgedFor).Visible = True
                            grdOrder.Columns(grdOrderEnum.EP_HedgingOrderId).Visible = False
                        Else
                            '<Added By Mohit Lalwnai on 1-Apr-2016 FA-1384>
                            div_RM_Limit.Visible = True
                            setRMLimit()
                            '</Added By Mohit Lalwnai on 1-Apr-2016>
                            grdOrder.Columns(grdOrderEnum.EP_HedgedFor).Visible = True
                            grdOrder.Columns(grdOrderEnum.EP_HedgingOrderId).Visible = True
                        End If
                    Case "N", "NO"
                        grdOrder.Columns(grdOrderEnum.EP_HedgedFor).Visible = False
                        grdOrder.Columns(grdOrderEnum.EP_HedgingOrderId).Visible = False
                End Select
                btnCancelReq.Text = objReadConfig.ReadConfig(dsConfig, "EQC_ResetButtonText", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "Reset").Trim

                txtLimitPricePopUpValue.Text = "0"
                txtLimitPricePopUpValue.Enabled = False
                tabPanelDRA.Visible = True

                lblMsgPriceProvider.Text = ""
                lblerror.Text = ""
                lblJPMPrice.Text = ""
                lblComentry1.Visible = True
                txttrade.Value = FinIQApp_Date.FinIQDate(Now.ToShortDateString)
                Fill_Entity()
                fill_RMList()
                fill_RFQRMList()
                fill_All_EntityBooks()
                chk_Login_For_PP()
                Get_Price_Provider()
                fill_All_Exchange()
                ''fill_All_Shares()  ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                setKeyPressValidations()
                ''Dilkhush 02Feb2016 Code commented becoz code was at down 
                ''Select Case objReadConfig.ReadConfig(dsConfig, "EQC_ShowOrderOnMainPricerPageLoad", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper
                ''    Case "Y", "YES"
                ''        rbHistory.SelectedValue = "Order History"
                ''        fill_OrderGrid()
                ''        ColumnVisibility()
                ''    Case "N", "NO"
                ''        rbHistory.SelectedValue = "Quote History"
                ''        fill_DRA_FCN_Grid()
                ''End Select
                SetTemplateDetails(SchemeName)
                SetChartColors()
                btnBNPPDeal.Visible = False
                btnUBSDeal.Visible = False
                btnCSDeal.Visible = False
                btnHSBCDeal.Visible = False
                btnBAMLDeal.Visible = False
                btnJPMDeal.Visible = False
                btnDBIBDeal.Visible = False
                btnOCBCDeal.Visible = False
                btnCITIDeal.Visible = False
                btnLEONTEQDeal.Visible = False
                btnCOMMERZDeal.Visible = False
                fillNoteCurrency()
                '<AvinashG. on 25-Jan-2016: EQBOSDEV-233 ELN/DRA/FCN/ACCU/DECU in separate tabs >
                'ddlDRAType.SelectedValue = "FCN"
                'ddlDRAType_SelectedIndexChanged(Nothing, Nothing)
                '</AvinashG. on 25-Jan-2016: EQBOSDEV-233 ELN/DRA/FCN/ACCU/DECU in separate tabs >

                ''ddlShareDRA_SelectedIndexChanged(Nothing, Nothing) ''Commented by Rushikesh to avoid select valide share message on load
                lblSolveForType.Text = "Strike / Acc (%)"
                lblClientYieldCaption.Text = "Upfront (%)"
                chkKO.Checked = True
                chkKO_CheckedChanged(Nothing, Nothing)
                lblKOLevelSameAsCoupon.Text = "Monthly"
                '<Added by Mohit Lalwnai on 25-Nov-2015 EQBOSDEV-137>


                'Mohit Lalwani on 19-Sept-2016
                'txtKOLevel.Text = objReadConfig.ReadConfig(dsConfig, "EQC_DRAFCN_DefaultKO", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "100.00").ToString
                'txtKOLevel.Text = SetNumberFormat(txtKOLevel.Text, 2)
                'txtDRAPrice.Text = objReadConfig.ReadConfig(dsConfig, "EQC_DRAFCN_DefaultIBPrice", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "99.50").ToString
                'txtDRAPrice.Text = SetNumberFormat(txtDRAPrice.Text, 2)
                '/Mohit Lalwani on 19-Sept-2016

                Select Case objReadConfig.ReadConfig(dsConfig, "EQC_Follow_AtPar_Lock", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper
                    Case "Y", "YES"
                        If ddlSolveForDRA.SelectedValue.ToUpper <> "PRICE" Then

                            txtUpfrontDRA.Text = SetNumberFormat((100 - Convert.ToDouble(txtDRAPrice.Text)).ToString, 2) ''Rushikesh 27Nov2015: Formating
                        Else
                            ''<Rushikesh D. on 15-May16 EQBOSDEV-360>
                            txtUpfrontDRA.Enabled = False
                            txtUpfrontDRA.Text = "0.00"
                            ''</Rushikesh D. on 15-May16 EQBOSDEV-360>
                        End If
                    Case "N", "NO"
                        txtUpfrontDRA.Text = "0.50" '<Added by Mohit Lalwnai on 02-Dec-2015 Jira:FA-1210 >
                End Select
                '</Added by Mohit Lalwnai on 25-Nov-2015  EQBOSDEV-137>
                ''Commented
                ''chk_Login_For_PP()
                If Not IsNothing(Request.QueryString("PrdToLoad")) Then
                    If UCase(Request.QueryString("PrdToLoad")) = "DRA" Then
                        tabContainer.ActiveTabIndex = prdTab.DRA
                        ddlDRAType.SelectedValue = "DRA"
                        ddlDRAType_SelectedIndexChanged(Nothing, Nothing)
                    Else
                        tabContainer.ActiveTabIndex = prdTab.FCN
                        ddlDRAType.SelectedValue = "FCN"
                        ddlDRAType_SelectedIndexChanged(Nothing, Nothing)
                    End If
                Else
                    ''ddlDRAType.SelectedItem.Value = "FCN" ''Dilkhush 1Feb2016 commented and changed to selected value
                    ddlDRAType.SelectedValue = "FCN"
                    ddlDRAType_SelectedIndexChanged(Nothing, Nothing)
                End If

                Select Case objReadConfig.ReadConfig(dsConfig, "EQC_ShowOrderOnMainPricerPageLoad", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper
                    Case "Y", "YES"
                        rbHistory.SelectedValue = "Order History"
                        fill_OrderGrid()
                        makeThisGridVisible(grdOrder)
                        ColumnVisibility()
                    Case "N", "NO"
                        rbHistory.SelectedValue = "Quote History"
                        fill_DRA_FCN_Grid()
                        makeThisGridVisible(grdDRAFCN)
                End Select

                If Not IsNothing(Request.QueryString("EXTLOD")) Then
                    If UCase(Request.QueryString("EXTLOD")) = "1" Then
                        If Request.QueryString("Prd").ToString.Trim.ToUpper = "DRA" Or Request.QueryString("Prd").ToString.Trim.ToUpper = "FCN" Then

                            If Request.QueryString("Prd").ToString.Trim.ToUpper = "FCN" Then
                                tabContainer.ActiveTabIndex = prdTab.FCN '<Added by RushikeshD. on 29-Jan-2015 Jira:EQBOSDEV-233 >
                                ddlDRAType.SelectedValue = "FCN"
                                ddlDRAType_SelectedIndexChanged(Nothing, Nothing)
                            Else
                                tabContainer.ActiveTabIndex = prdTab.DRA '<Added by RushikeshD. on 29-Jan-2015 Jira:EQBOSDEV-233 >
                                ddlDRAType.SelectedValue = "DRA"
                                ddlDRAType_SelectedIndexChanged(Nothing, Nothing)
                                If Not IsNothing(Request.QueryString("Gu")) Then
                                    txtGuPeriod.Text = Request.QueryString("Gu")
                                    txtGuPeriod_TextChanged(Nothing, Nothing)

                                Else
                                    '     txtGuPeriod.Text = ""
                                End If
                            End If



                            If Request.QueryString("SolveFor").ToString.Trim.ToUpper = "CONVERSION_STRIKE" OrElse Request.QueryString("SolveFor").ToString.Trim.ToUpper = "STRIKE(%)" Then     'When Solve for is for Strike
                                ddlSolveForDRA.SelectedValue = "CONVERSION_STRIKE"                                  'Set Selected Value
                                ddlSolveForDRA_SelectedIndexChanged(Nothing, Nothing)                               'Index Changed
                                txtDRAPrice.Text = Request.QueryString("Price").ToString                            'Set Price
                                txtDRAPrice_TextChanged(Nothing, Nothing)
                                txtCoupon.Text = Request.QueryString("Coupon").ToString                             'Set Coupon
                                txtCoupon_TextChanged(Nothing, Nothing)

                            ElseIf Request.QueryString("SolveFor").ToString.Trim.ToUpper = "COUPON" OrElse Request.QueryString("SolveFor").ToString.Trim.ToUpper = "COUPON(%)" Then            'When Solve for is for Coupon
                                ddlSolveForDRA.SelectedValue = "COUPON"                                             'Set Selected Value
                                ddlSolveForDRA_SelectedIndexChanged(Nothing, Nothing)                                  'Index Change
                                txtDRAPrice.Text = Request.QueryString("Price").ToString                            'Set Price
                                txtDRAPrice_TextChanged(Nothing, Nothing)
                                txtStrikeDRAFCN.Text = Request.QueryString("Strike").ToString                       'Set coupon
                                txtStrikeDRAFCN_TextChanged(Nothing, Nothing)

                            Else
                                ddlSolveForDRA.SelectedValue = "PRICE"                                              'When Solve for is for Coupon
                                ddlSolveForDRA_SelectedIndexChanged(Nothing, Nothing)                                  'Set Selected Value
                                txtCoupon.Text = Request.QueryString("Coupon").ToString                             'Set Selected Value
                                txtCoupon_TextChanged(Nothing, Nothing)
                                txtStrikeDRAFCN.Text = Request.QueryString("Strike").ToString                       'Set Selected Value
                                txtStrikeDRAFCN_TextChanged(Nothing, Nothing)
                            End If

                            Dim strTenorTypeDRAFCN, strTenorValDRAFCN As String
                            If Not IsNothing(Request.QueryString("Tenor")) Then                                     'Condition for Tenor
                                If Request.QueryString("Tenor").ToString.ToUpper.Contains("M") Then                 'If Tenor id in Month
                                    strTenorTypeDRAFCN = "MONTH"                                                            'Set tenor type As Month to Variable
                                    strTenorValDRAFCN = Request.QueryString("Tenor").ToString.ToUpper.Replace("M", "")      'Set tenor Val to Variable
                                ElseIf Request.QueryString("Tenor").ToString.ToUpper.Contains("W") Then
                                    strTenorTypeDRAFCN = "WEEK"
                                    strTenorValDRAFCN = Request.QueryString("Tenor").ToString.ToUpper.Replace("W", "")
                                ElseIf Request.QueryString("Tenor").ToString.ToUpper.Contains("Y") Then
                                    strTenorTypeDRAFCN = "YEAR"
                                    strTenorValDRAFCN = Request.QueryString("Tenor").ToString.ToUpper.Replace("Y", "")
                                Else
                                    ''DoNothing
                                End If
                            Else
                                '  strTenorTypeDRAFCN = "MONTH"                                                        
                            End If
                            ddlTenorTypeDRA.SelectedValue = strTenorTypeDRAFCN                                  'Set tenor type As Month to Variable
                            txtTenorDRA.Text = strTenorValDRAFCN                                                'Set tenor Val to Variable
                            txtTenorDRA_TextChanged(Nothing, Nothing)
                            If Not IsNothing(Request.QueryString("Share1")) Then                                'Filling Share 1 DropDown   
                                ''</Mohit/Dilkhush:-14Jan2016 for share set>
                                Dim strshare As String = Request.QueryString("Share1").ToString
                                dtExchange = New DataTable("Dummy")
                                Select Case objELNRFQ.DB_GetExchange(strshare, dtExchange)
                                    Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                                        ddlExchangeDRAFCN.SelectedValue = dtExchange.Rows(0)(0).ToString
                                        ddlExchangeDRAFCN_SelectedIndexChanged(Nothing, Nothing)
                                    Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data

                                    Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                                End Select
                                setShare1(ddlExchangeDRAFCN.SelectedValue.ToString, strshare)
                                ddlShareDRA_SelectedIndexChanged(Nothing, Nothing)
                                'Select Case objReadConfig.ReadConfig(dsConfig, "EQC_Allow_ALL_AsExchangeOption", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                                '    Case "Y", "YES"
                                '        Dim strshare As String = Request.QueryString("Share1").ToString
                                '        ddlShareDRA.SelectedIndex = ddlShareDRA.Items.IndexOf(ddlShareDRA.Items.FindItemByValue(strshare.Trim))
                                '        ddlShareDRA_SelectedIndexChanged(Nothing, Nothing)
                                '    Case "N", "NO"
                                '        dtExchange = New DataTable("Dummy")
                                '        Select Case objELNRFQ.DB_GetExchange(Request.QueryString("Share1").Trim, dtExchange)

                                '            Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                                '                ddlExchangeDRAFCN.SelectedValue = dtExchange.Rows(0)(0).ToString
                                '                ddlExchangeDRAFCN_SelectedIndexChanged(Nothing, Nothing)
                                '            Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data

                                '            Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful

                                '        End Select
                                '        Dim strshare As String = Request.QueryString("Share1").ToString
                                '        ddlShareDRA.SelectedIndex = ddlShareDRA.Items.IndexOf(ddlShareDRA.Items.FindItemByValue(strshare.Trim))
                                '        ddlShareDRA_SelectedIndexChanged(Nothing, Nothing)
                                'End Select
                                ''</Mohit/Dilkhush:-14Jan2016 for share set>
                            Else
                                ''do nothing
                            End If

                            If Not IsNothing(Request.QueryString("Share2")) Then
                                ''</Mohit/Dilkhush:-14Jan2016 for share set>
                                Dim strshare As String = Request.QueryString("Share2").ToString
                                dtExchange = New DataTable("Dummy")
                                If Not strshare = "" Then
                                    chkAddShare2.Checked = True
                                    chkAddShare2_CheckedChanged(Nothing, Nothing)
                                    Select Case objELNRFQ.DB_GetExchange(strshare, dtExchange)
                                        Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                                            ddlExchangeDRAFCN2.SelectedValue = dtExchange.Rows(0)(0).ToString
                                            ddlExchangeDRAFCN2_SelectedIndexChanged(Nothing, Nothing)
                                        Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data

                                        Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                                    End Select
                                    setShare2(ddlExchangeDRAFCN2.SelectedValue.ToString, strshare)
                                    ddlShareDRA2_SelectedIndexChanged(Nothing, Nothing)
                                End If
                                ''Select Case objReadConfig.ReadConfig(dsConfig, "EQC_Allow_ALL_AsExchangeOption", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                                ''    Case "Y", "YES"
                                ''        If Not Request.QueryString("Share2") = "" Then
                                ''            chkAddShare2.Checked = True
                                ''            chkAddShare2_CheckedChanged(Nothing, Nothing)
                                ''            Dim strshare As String = Request.QueryString("Share2").ToString
                                ''            ddlShareDRA2.SelectedIndex = ddlShareDRA2.Items.IndexOf(ddlShareDRA2.Items.FindItemByValue(strshare.Trim))
                                ''            ddlShareDRA2_SelectedIndexChanged(Nothing, Nothing)
                                ''        End If
                                ''    Case "N", "NO"
                                ''        If Not Request.QueryString("Share2") = "" Then
                                ''            chkAddShare2.Checked = True
                                ''            chkAddShare2_CheckedChanged(Nothing, Nothing)
                                ''            dtExchange2 = New DataTable("Dummy")
                                ''            Select Case objELNRFQ.DB_GetExchange(Request.QueryString("Share2").Trim, dtExchange2)

                                ''                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                                ''                    ddlExchangeDRAFCN2.SelectedValue = dtExchange2.Rows(0)(0).ToString
                                ''                    ddlExchangeDRAFCN2_SelectedIndexChanged(Nothing, Nothing)
                                ''                Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data

                                ''                Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful

                                ''            End Select
                                ''            Dim strshare As String = Request.QueryString("Share2").ToString
                                ''            ddlShareDRA2.SelectedIndex = ddlShareDRA2.Items.IndexOf(ddlShareDRA2.Items.FindItemByValue(strshare.Trim))
                                ''            ddlShareDRA2_SelectedIndexChanged(Nothing, Nothing)
                                ''        End If
                                ''End Select
                                ''</Mohit/Dilkhush:-14Jan2016 for share set>
                            Else
                                ''do nothing
                            End If

                            If Not IsNothing(Request.QueryString("Share3")) Then                        'Filling Share 3
                                ''</Mohit/Dilkhush:-14Jan2016 for share set>
                                Dim strshare As String = Request.QueryString("Share3").ToString
                                dtExchange = New DataTable("Dummy")
                                If Not strshare = "" Then
                                    chkAddShare3.Checked = True
                                    chkAddShare3_CheckedChanged(Nothing, Nothing)
                                    Select Case objELNRFQ.DB_GetExchange(strshare, dtExchange)
                                        Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                                            ddlExchangeDRAFCN3.SelectedValue = dtExchange.Rows(0)(0).ToString
                                            ddlExchangeDRAFCN3_SelectedIndexChanged(Nothing, Nothing)
                                        Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data

                                        Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                                    End Select
                                    setShare3(ddlExchangeDRAFCN3.SelectedValue.ToString, strshare)
                                    ddlShareDRA3_SelectedIndexChanged(Nothing, Nothing)
                                End If
                                ''Select Case objReadConfig.ReadConfig(dsConfig, "EQC_Allow_ALL_AsExchangeOption", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                                ''    Case "Y", "YES"
                                ''        If Not Request.QueryString("Share3") = "" Then
                                ''            chkAddShare3.Checked = True
                                ''            chkAddShare3_CheckedChanged(Nothing, Nothing)
                                ''            Dim strshare As String = Request.QueryString("Share3").ToString
                                ''            ddlShareDRA3.SelectedIndex = ddlShareDRA3.Items.IndexOf(ddlShareDRA3.Items.FindItemByValue(strshare.Trim))
                                ''            ddlShareDRA3_SelectedIndexChanged(Nothing, Nothing)
                                ''        End If
                                ''    Case "N", "NO"
                                ''        If Not Request.QueryString("Share3") = "" Then
                                ''            chkAddShare3.Checked = True
                                ''            chkAddShare3_CheckedChanged(Nothing, Nothing)
                                ''            dtExchange3 = New DataTable("Dummy")
                                ''            Select Case objELNRFQ.DB_GetExchange(Request.QueryString("Share3").Trim, dtExchange)
                                ''                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                                ''                    ddlExchangeDRAFCN3.SelectedValue = dtExchange.Rows(0)(0).ToString
                                ''                    ddlExchangeDRAFCN3_SelectedIndexChanged(Nothing, Nothing)
                                ''                Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data

                                ''                Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                                ''            End Select
                                ''            Dim strshare As String = Request.QueryString("Share3").ToString
                                ''            ddlShareDRA3.SelectedIndex = ddlShareDRA3.Items.IndexOf(ddlShareDRA3.Items.FindItemByValue(strshare.Trim))
                                ''            ddlShareDRA3_SelectedIndexChanged(Nothing, Nothing)
                                ''        End If
                                ''End Select
                                ''</Mohit/Dilkhush:-14Jan2016 for share set>
                            Else
                            End If
                            If Not IsNothing(Request.QueryString("KILevel").ToString) Then
                                If Not Request.QueryString("KILevel").ToString = "" Then
                                    chkKI.Checked = True                                                                    'Checking KI Check Box
                                    chkKI_CheckedChanged(Nothing, Nothing)

                                    txtKILevel.Text = Request.QueryString("KILevel").ToString()                             'Setting KI level
                                    txtKILevel_TextChanged(Nothing, Nothing)
                                    ddlKIType.SelectedValue = Request.QueryString("KiType").ToString                        'Setting KI Type
                                    ddlKIType_SelectedIndexChanged(Nothing, Nothing)


                                End If
                            Else

                            End If

                            If Not IsNothing(Request.QueryString("Upfront")) Then                                       'txtUpfrontDRA
                                ''<Rushikesh D. on 15-May16 EQBOSDEV-360>
                                Select Case objReadConfig.ReadConfig(dsConfig, "EQC_Follow_AtPar_Lock", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper
                                    Case "Y", "YES"
                                        If ddlSolveForDRA.SelectedValue.ToUpper = "PRICE" Then
                                            txtUpfrontDRA.Enabled = False
                                            txtUpfrontDRA.Text = "0.00"
                                        Else
                                            txtUpfrontDRA.Text = Request.QueryString("Upfront")
                                        End If
                                    Case "N", "NO"

                                End Select
                                ''txtUpfrontDRA.Text = Request.QueryString("Upfront")
                                ''</Rushikesh D. on 15-May16 EQBOSDEV-360>
                                txtUpfrontDRA_TextChanged(Nothing, Nothing)
                            Else
                                '     txtUpfrontDRA.Text = ""
                            End If


                            If Not IsNothing(Request.QueryString("KIFrequency")) Then                                   'Setting up  Frequency
                                ddlKIFrequency.SelectedValue = Request.QueryString("KIFrequency").ToString
                                ddlKIFrequency_SelectedIndexChanged(Nothing, Nothing)
                            Else

                            End If

                            If Not IsNothing(Request.QueryString("KOLevel")) Then
                                txtKOLevel.Text = Request.QueryString("KOLevel")       'Set KO Level 
                                txtKOLevel_TextChanged(Nothing, Nothing)
                            Else
                                ' txtKOLevel.Text = ""
                            End If

                            '<AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
                            Select Case objReadConfig.ReadConfig(dsConfig, "EQC_SetDefaultNotional", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                                Case "Y", "YES"
                                    If Not IsNothing(Request.QueryString("Notional")) Then
                                        If Request.QueryString("Notional").ToString <> "" Then
                                            txtOrderDRAFCN.Text = Request.QueryString("Notional")
                                        Else
                                            txtOrderDRAFCN.Text = "0"
                                        End If
                                    Else
                                        txtOrderDRAFCN.Text = "0"
                                    End If
                                Case "N", "NO"
                                    txtOrderDRAFCN.Text = "0"
                            End Select
                            ' ''<Mohit L 27aug2015: for redirection>
                            'If Not IsNothing(Request.QueryString("Notional")) Then
                            ' txtOrderDRAFCN.Text = Request.QueryString("Notional") 'Set Notional Level
                            ' txtOrderDRAFCN_TextChanged(Nothing, Nothing)
                            'Else
                            'End If
                            ' ''</Mohit L 27aug2015: for redirection>
                            '</Changed By Mohit Lalwani on 17_Dec‐2015>
                            txtOrderDRAFCN_TextChanged(Nothing, Nothing)
                            '</AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
                            If Not IsNothing(Request.QueryString("ccy")) Then
                                ddlNoteCcy.SelectedValue = Request.QueryString("ccy").ToString
                                ddlNoteCcy_SelectedIndexChanged(Nothing, Nothing)
                            Else
                                getCurrency(ddlShareDRA.SelectedValue)
                            End If

                            If Not IsNothing(Request.QueryString("KO_Type")) Then
                                ddlKOType.SelectedValue = Request.QueryString("KO_Type").ToString
                            End If

                            ResetAll()   'Added by Mohit Lalwani on 18-Apr-2016 FA-1405 - Issuer not disabled when redirected from multi-stock pricer 


                            '<AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer> 
                            'Call getRange()
                            '</AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
                        End If
                    ElseIf UCase(Request.QueryString("EXTLOD")) = "REPRICEPOOL" Then
                        Session.Remove("Share_Value")
                        If Request.QueryString("PRD").Trim = "" Then
                            lblerror.Text = "Error: Failed while trying to load pool data."
                        Else
                            setDRAFCNPoolData()
                        End If
                        btnSolveAll.Enabled = False
                    ElseIf UCase(Request.QueryString("EXTLOD")) = "HEDGE" Then
                        Session.Remove("Share_Value")
                        If Request.QueryString("PRD").Trim = "" Then
                            lblerror.Text = "Error: Failed while trying to load pool data."
                        Else
                            setDRAFCNPoolData()
                        End If
                        btnSolveAll.Enabled = False
                    ElseIf Request.QueryString("EXTLOD").ToString.Trim.ToUpper() = "REDIRECTEDHEDGE" Then
                        Session.Remove("Share_Value")
                        If Request.QueryString("PRD").Trim = "" Then
                            lblerror.Text = "Error: Failed while trying to load order data."
                        Else
                            setRedirectedDRAFCNPoolData()
                        End If
                    Else
                        '    txtStrikeDRAFCN.Text = "0.00"
                        SetPersonalSetting()
                    End If
                    ''<Start | Nikhil M. on 04-Oct-2016: For Hide/Show  Allocation>
                    If IsNothing(Request.QueryString("PoolID")) Then
                        grdRMData.Visible = True
                        btnAddAllocation.Visible = True
                    Else
                        If Request.QueryString("PoolID").ToString = "" Then
                            grdRMData.Visible = True
                            btnAddAllocation.Visible = True
                            tblRw1.Visible = True ''<Nikhil M. on 17-Oct-2016: Added for hidning the COntrol on hedge>
                            tblRw2.Visible = True
                            tblRw3.Visible = True
                        Else
                            grdRMData.Visible = False
                            btnAddAllocation.Visible = False
                            tblRw1.Visible = False
                            tblRw2.Visible = False
                            tblRw3.Visible = False ''<Nikhil M. on 17-Oct-2016: Added for hidning the COntrol on hedge>

                        End If
                    End If
                    ''<End | Nikhil M. on 04-Oct-2016: For Hide/Show Allocation>
                Else
                    SetPersonalSetting()

                End If


                'Mohit Lalwani on 12-Oct-2016
                If Not IsNothing(Request.QueryString("Mode")) Then
                    If UCase(Request.QueryString("Mode")) = "DEFSETUP" Then
                        'Mohit Lalwani on 26-Oct-2016
                        tdpnlReprice.Visible = False
                        '   pnlReprice.Visible = False
                        '/Mohit Lalwani on 26-Oct-2016
                        upnlGrid.Visible = False

                        tdCommentry.Visible = False
                        tdgrphShareData.Visible = False
                        trSaveSetting.Visible = True
                        tdShareGraphData.Visible = False

                    Else
                        trSaveSetting.Visible = False
                    End If
                Else
                    trSaveSetting.Visible = False
                End If
                '/Mohit Lalwani on 12-Oct-2016
            End If

            If rblShareData.SelectedValue = "GRAPHDATA" Then
                Fill_All_Charts()
            Else
                Call manageShareReportShowHide()
            End If

            If Not IsNothing(Request.QueryString("EXTLOD")) Then
                ''Dilkhush 01Feb2016 To show email button
                System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "ShowhideDRAFCNEmailbtn", "try{ showEmail(); } catch(e){ }", True) 'Added by Mohit Lalwani on 17-Oct-2016
            End If
            ''Dilkhush/Rushi/Mohit 02Feb2016 hide GU priod on fcn tab
            If tabContainer.ActiveTabIndex = prdTab.FCN Then
                grdDRAFCN.Columns(grdDRAFCNEnum.GU_Period).Visible = False
            Else
                grdDRAFCN.Columns(grdDRAFCNEnum.GU_Period).Visible = True
            End If
            hideShowRBLShareData()
            chkPPmaillist.Visible = False
            '<shekhar 26-Nov-2015>
            System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "CP_Dragable", "CP_Dragable();", True)
            '</shekhar 26-Nov-2015>

            '<Mohit Lalwani on 26-May-2016>
            ScriptManager.RegisterStartupScript(Page, Page.GetType, "setResolution", "setResolution();", True)
            '</Mohit Lalwani on 26-May-2016>

            'ScriptManager.RegisterStartupScript(Page, Page.GetType, "hideLPBoxes", "hideLPBoxes();", True)''<Nikhil M. on 19-Sep-2016: Commented>

        Catch ex As Exception
            lblerror.Text = "Error occurred on Page Load event."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "Page_Load", ErrorLevel.High)
        End Try
    End Sub

    'Added by Mohit Lalwani on 16-Sept-2016
    Public Sub SetPersonalSetting()
        Try
            Dim dtExchange As DataTable
            If ddlDRAType.SelectedValue = "DRA" Then
                txtGuPeriod.Text = getControlPersonalSetting("Guarantee", "1")
                txtGuPeriod_TextChanged(Nothing, Nothing)
            End If


            ddlSolveForDRA.SelectedValue = getControlPersonalSetting("Solve For", "CONVERSION_STRIKE")                                 'Set Selected Value
            ddlSolveForDRA_SelectedIndexChanged(Nothing, Nothing)                               'Index Changed
            txtDRAPrice.Text = getControlPersonalSetting("IB Price", objReadConfig.ReadConfig(dsConfig, "EQC_DRAFCN_DefaultIBPrice", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "99.00").ToString)                                                 'Set Price
            txtDRAPrice_TextChanged(Nothing, Nothing)
            txtCoupon.Text = getControlPersonalSetting("Coupon", "10.00")                               'Set Coupon
            txtCoupon_TextChanged(Nothing, Nothing)
            txtStrikeDRAFCN.Text = getControlPersonalSetting("Strike", "0.00")
            txtStrikeDRAFCN_TextChanged(Nothing, Nothing)

            ddlTenorTypeDRA.SelectedValue = getControlPersonalSetting("Tenor Type", "MONTH")                       'Set tenor type As Month to Variable
            txtTenorDRA.Text = getControlPersonalSetting("Tenor", "4")                                           'Set tenor Val to Variable
            txtTenorDRA_TextChanged(Nothing, Nothing)

            Dim strshare1 As String = getControlPersonalSetting("Share 1", "")
            dtExchange = New DataTable("Dummy")
            If strshare1 <> "" Then
                Select Case objELNRFQ.DB_GetExchange(strshare1, dtExchange)
                    Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                        ddlExchangeDRAFCN.SelectedValue = dtExchange.Rows(0)(0).ToString
                        ddlExchangeDRAFCN_SelectedIndexChanged(Nothing, Nothing)
                    Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data

                    Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                End Select
                setShare1(ddlExchangeDRAFCN.SelectedValue.ToString, strshare1)
                ddlShareDRA_SelectedIndexChanged(Nothing, Nothing)
            End If

            Dim strshare2 As String = getControlPersonalSetting("Share 2", "")
            dtExchange = New DataTable("Dummy")
            If strshare2 <> "" Then
                If Not strshare2 = "" Then
                    chkAddShare2.Checked = True
                    chkAddShare2_CheckedChanged(Nothing, Nothing)
                    Select Case objELNRFQ.DB_GetExchange(strshare2, dtExchange)
                        Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                            ddlExchangeDRAFCN2.SelectedValue = dtExchange.Rows(0)(0).ToString
                            ddlExchangeDRAFCN2_SelectedIndexChanged(Nothing, Nothing)
                        Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data

                        Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                    End Select
                    setShare2(ddlExchangeDRAFCN2.SelectedValue.ToString, strshare2)
                    ddlShareDRA2_SelectedIndexChanged(Nothing, Nothing)
                End If
            End If
            Dim strshare3 As String = getControlPersonalSetting("Share 3", "")
            dtExchange = New DataTable("Dummy")
            If strshare3 <> "" Then
                If Not strshare3 = "" Then
                    chkAddShare3.Checked = True
                    chkAddShare3_CheckedChanged(Nothing, Nothing)
                    Select Case objELNRFQ.DB_GetExchange(strshare3, dtExchange)
                        Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                            ddlExchangeDRAFCN3.SelectedValue = dtExchange.Rows(0)(0).ToString
                            ddlExchangeDRAFCN3_SelectedIndexChanged(Nothing, Nothing)
                        Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data

                        Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                    End Select
                    setShare3(ddlExchangeDRAFCN3.SelectedValue.ToString, strshare3)
                    ddlShareDRA3_SelectedIndexChanged(Nothing, Nothing)
                End If
            End If

            chkKI.Checked = CBool(getControlPersonalSetting("IS KI", "FALSE"))
            chkKI_CheckedChanged(Nothing, Nothing)
	    
	    'Added by Mohit Lalwani on 17-Oct-2016
            If chkKI.Checked Then
                txtKILevel.Text = getControlPersonalSetting("KI", "90.00")                       'Setting KI level
                txtKILevel_TextChanged(Nothing, Nothing)
            End If



            ddlKIType.SelectedValue = getControlPersonalSetting("KI TYPE", "AMERICAN")                        'Setting KI Type
            ddlKIType_SelectedIndexChanged(Nothing, Nothing)

            Select Case objReadConfig.ReadConfig(dsConfig, "EQC_Follow_AtPar_Lock", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper
                Case "Y", "YES"
                    If ddlSolveForDRA.SelectedValue.ToUpper = "PRICE" Then
                        txtUpfrontDRA.Enabled = False
                        txtUpfrontDRA.Text = "0.00"
                    Else
                        '         txtUpfrontDRA.Text = getControlPersonalSetting("Upfront", "0.5")
                    End If
                Case "N", "NO"
                    txtUpfrontDRA.Text = getControlPersonalSetting("Upfront", "0.5")
            End Select

            txtUpfrontDRA_TextChanged(Nothing, Nothing)

            ddlKIFrequency.SelectedValue = getControlPersonalSetting("Coupon Frq.", "MONTHLY")
            ddlKIFrequency_SelectedIndexChanged(Nothing, Nothing)

            ddlKOType.SelectedValue = getControlPersonalSetting("KO Type", "DAILYCLOSE")

            '   ddlKOType_SelectedIndexChanged(Nothing, Nothing)

            txtKOLevel.Text = getControlPersonalSetting("KO", objReadConfig.ReadConfig(dsConfig, "EQC_DRAFCN_DefaultKO", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "100.00").ToString)       'Set KO Level 
            txtKOLevel_TextChanged(Nothing, Nothing)

            'Changed by Mohit Lalwani on 21-Oct-2016 
            '  Select Case objReadConfig.ReadConfig(dsConfig, "EQC_SetDefaultNotional", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
            Select Case objReadConfig.ReadConfig(dsConfig, "EQC_SetDefaultNotional", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                '/Changed by Mohit Lalwani on 21-Oct-2016 
                Case "Y", "YES"
                    txtOrderDRAFCN.Text = getControlPersonalSetting("Notional", "300,000")
                Case "N", "NO"
                    txtOrderDRAFCN.Text = "0"
            End Select
            txtOrderDRAFCN_TextChanged(Nothing, Nothing)

            ddlNoteCcy.SelectedValue = getControlPersonalSetting("Note Ccy", "AUD")
            ddlNoteCcy_SelectedIndexChanged(Nothing, Nothing)

        Catch ex As Exception
            lblerror.Text = "Error occurred in binding personal settings.Please contact admin."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "SetPersonalSetting", ErrorLevel.High)
            Throw ex
        End Try
    End Sub
'Added by Mohit Lalwani on 17-Oct-2016
    Public Function Write_PersonalSettings_TOXML(ByRef o_strXMLNote_DefaultValues As String) As Boolean
        Dim strXMLRFQ As StringBuilder
        Dim dtQuote As New DataTable
        Try
            strXMLRFQ = New StringBuilder

            strXMLRFQ.Append("<SettingDetails>")
            strXMLRFQ.Append("<Default>")


            strXMLRFQ.Append("<Guarantee>" & txtGuPeriod.Text & "</Guarantee>")


            strXMLRFQ.Append("<Solve_For>" & ddlSolveForDRA.SelectedValue & "</Solve_For>")
            strXMLRFQ.Append("<IB_Price>" & txtDRAPrice.Text & "</IB_Price>")
            strXMLRFQ.Append("<Coupon>" & txtCoupon.Text & "</Coupon>")
            strXMLRFQ.Append("<Strike>" & txtStrikeDRAFCN.Text & "</Strike>")


            strXMLRFQ.Append("<Tenor_Type>" & ddlTenorTypeDRA.SelectedValue & "</Tenor_Type>")
            strXMLRFQ.Append("<Tenor>" & txtTenorDRA.Text & "</Tenor>")
            strXMLRFQ.Append("<Share_1>" & ddlShareDRA.SelectedValue & "</Share_1>")
            strXMLRFQ.Append("<Share_2>" & ddlShareDRA2.SelectedValue & "</Share_2>")
            strXMLRFQ.Append("<Share_3>" & ddlShareDRA3.SelectedValue & "</Share_3>")

            strXMLRFQ.Append("<IS_KI>" & chkKI.Checked & "</IS_KI>")
            strXMLRFQ.Append("<KI>" & txtKILevel.Text & "</KI>")
            strXMLRFQ.Append("<KI_TYPE>" & ddlKIType.SelectedValue & "</KI_TYPE>")

            strXMLRFQ.Append("<Upfront>" & txtUpfrontDRA.Text & "</Upfront>")
            strXMLRFQ.Append("<KO_Type>" & ddlKOType.SelectedValue & "</KO_Type>")

            strXMLRFQ.Append("<KO>" & txtKOLevel.Text & "</KO>")

            strXMLRFQ.Append("<Notional>" & txtOrderDRAFCN.Text & "</Notional>")

            strXMLRFQ.Append("<Note_Ccy>" & txtGuPeriod.Text & "</Note_Ccy>")

            strXMLRFQ.Append("</Default>")
            strXMLRFQ.Append("</SettingDetails>")

            o_strXMLNote_DefaultValues = strXMLRFQ.ToString
            Write_PersonalSettings_TOXML = True
        Catch ex As Exception
            lblerror.Text = "Write_DefaultSettings_TOXML:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "Write_DefaultSettings_TOXML", ErrorLevel.High)
            Throw ex
        End Try
    End Function
    '/Added by Mohit Lalwani on 17-Oct-2016
    '/Added by Mohit Lalwani on 16-Sept-2016


    Public Sub SetChartColors()
        Try
        structChartColors = New ChartColors
        With Me.structChartColors
            .CS = System.Drawing.Color.FromArgb(140, 174, 212)
            .FINIQ = Color.LightGray
                .BNPP = Color.Aqua
            .HSBC = Color.Red
            .JPM = System.Drawing.Color.FromArgb(37, 53, 131)
                .BAML = Color.Gray
                .UBS = Color.DarkOrange
                .DBIB = Color.Magenta
                .OCBC = Color.BlanchedAlmond
                .CITI = Color.DarkOliveGreen
                .LEONTEQ = Color.Olive
                .COMMERZ = Color.CadetBlue
        End With
        Catch ex As Exception
            lblerror.Text = "SetChartColors:Error occurred in Processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "SetChartColors", ErrorLevel.High)
            Throw ex
        End Try
        
    End Sub

   

    Public Sub setKeyPressValidations()
        Try
            txtTotalRows.Attributes.Add("onkeypress", "AllowOnlyNumeric()")
            txtOrderDRAFCN.Attributes.Add("onkeypress", "KeysAllowedForNotional()")
            txtUpfrontDRA.Attributes.Add("onkeypress", "AllowNumericWithdecimal('" & txtUpfrontDRA.ClientID & "');")
            txtTenorDRA.Attributes.Add("onkeypress", "AllowOnlyNumeric()")
            txtGuPeriod.Attributes.Add("onkeypress", "AllowOnlyNumeric()")
            txtStrikeDRAFCN.Attributes.Add("onkeypress", "AllowNumericWithdecimal('" & txtStrikeDRAFCN.ClientID & "');")
            txtDRAPrice.Attributes.Add("onkeypress", "AllowNumericWithdecimal('" & txtDRAPrice.ClientID & "');")
            txtKOLevel.Attributes.Add("onkeypress", "AllowNumericWithdecimal('" & txtKOLevel.ClientID & "');")
            txtKILevel.Attributes.Add("onkeypress", "AllowNumericWithdecimal('" & txtKILevel.ClientID & "');")
            txtCoupon.Attributes.Add("onkeypress", "AllowNumericWithdecimal('" & txtCoupon.ClientID & "');")
            txtUpfrontPopUpValue.Attributes.Add("onkeypress", "AllowNumericWithdecimal('" & txtUpfrontPopUpValue.ClientID & "');")
            btnJPMprice.Attributes.Add("onclick", "StopTimer('" + lblTimer.ClientID + "','" + btnJPMDeal.ClientID + "');")
            ddlDRAType.Attributes.Add("onchange", "StopTimer('" + lblTimer.ClientID + "','" + btnJPMDeal.ClientID + "');")
            txtTenorDRA.Attributes.Add("onchange", "StopTimer('" + lblTimer.ClientID + "','" + btnJPMDeal.ClientID + "');")
            ddlExchangeDRAFCN.Attributes.Add("onchange", "StopTimer('" + lblTimer.ClientID + "','" + btnJPMDeal.ClientID + "');")
            ddlShareDRA.Attributes.Add("onchange", "StopTimer('" + lblTimer.ClientID + "','" + btnJPMDeal.ClientID + "');")
            txtGuPeriod.Attributes.Add("onchange", "StopTimer('" + lblTimer.ClientID + "','" + btnJPMDeal.ClientID + "');")
            txtOrderDRAFCN.Attributes.Add("onchange", "StopTimer('" + lblTimer.ClientID + "','" + btnJPMDeal.ClientID + "');")
            ddlKIType.Attributes.Add("onchange", "StopTimer('" + lblTimer.ClientID + "','" + btnJPMDeal.ClientID + "');")
            txtKILevel.Attributes.Add("onchange", "StopTimer('" + lblTimer.ClientID + "','" + btnJPMDeal.ClientID + "');")
            txtKOLevel.Attributes.Add("onchange", "StopTimer('" + lblTimer.ClientID + "','" + btnJPMDeal.ClientID + "');")
            ddlKIFrequency.Attributes.Add("onchange", "StopTimer('" + lblTimer.ClientID + "','" + btnJPMDeal.ClientID + "');")
            ddlSolveForDRA.Attributes.Add("onchange", "StopTimer('" + lblTimer.ClientID + "','" + btnJPMDeal.ClientID + "');")
            txtStrikeDRAFCN.Attributes.Add("onchange", "StopTimer('" + lblTimer.ClientID + "','" + btnJPMDeal.ClientID + "');")
            txtDRAPrice.Attributes.Add("onchange", "StopTimer('" + lblTimer.ClientID + "','" + btnJPMDeal.ClientID + "');")
            txtCoupon.Attributes.Add("onchange", "StopTimer('" + lblTimer.ClientID + "','" + btnJPMDeal.ClientID + "');")
            txtLimitPricePopUpValue.Attributes.Add("onkeypress", "AllowNumericWithdecimal('" & txtLimitPricePopUpValue.ClientID & "');")
            btnCSPrice.Attributes.Add("onclick", "StopTimer('" + lblTimerCS.ClientID + "','" + btnCSDeal.ClientID + "');")
            btnBNPPPrice.Attributes.Add("onclick", "StopTimer('" + lblTimerBNPP.ClientID + "','" + btnBNPPDeal.ClientID + "');")
            btnHSBCPrice.Attributes.Add("onclick", "StopTimer('" + lblTimerHSBC.ClientID + "','" + btnHSBCDeal.ClientID + "');")
            btnDBIBPrice.Attributes.Add("onclick", "StopTimer('" + lblTimerDBIB.ClientID + "','" + btnDBIBDeal.ClientID + "');")
            btnOCBCPrice.Attributes.Add("onclick", "StopTimer('" + lblTimerOCBC.ClientID + "','" + btnOCBCDeal.ClientID + "');")
            btnCITIPrice.Attributes.Add("onclick", "StopTimer('" + lblTimerCITI.ClientID + "','" + btnCITIDeal.ClientID + "');")
            btnLEONTEQPrice.Attributes.Add("onclick", "StopTimer('" + lblTimerLEONTEQ.ClientID + "','" + btnLEONTEQDeal.ClientID + "');")
            btnCOMMERZPrice.Attributes.Add("onclick", "StopTimer('" + lblTimerCOMMERZ.ClientID + "','" + btnCOMMERZDeal.ClientID + "');")

            btnJPMprice.Attributes.Add("onclick", "StopTimer('" + lblTimer.ClientID + "','" + btnJPMDeal.ClientID + "');")
            btnUBSPrice.Attributes.Add("onclick", "StopTimer('" + lblUBSTimer.ClientID + "','" + btnUBSDeal.ClientID + "');")
            btnBAMLPrice.Attributes.Add("onclick", "StopTimer('" + lblTimerBAML.ClientID + "','" + btnBAMLDeal.ClientID + "');")
            btnSolveAll.Attributes.Add("onclick", "StopTimer('" + lblTimer.ClientID + "','" + btnJPMDeal.ClientID + "');")
            btnSolveAll.Attributes.Add("onclick", "StopTimer('" + lblTimerCS.ClientID + "','" + btnCSDeal.ClientID + "');")
            btnSolveAll.Attributes.Add("onclick", "StopTimer('" + lblTimerHSBC.ClientID + "','" + btnHSBCDeal.ClientID + "');")
            btnSolveAll.Attributes.Add("onclick", "StopTimer('" + lblTimerBNPP.ClientID + "','" + btnBNPPDeal.ClientID + "');")
            btnSolveAll.Attributes.Add("onclick", "StopTimer('" + lblTimerBAML.ClientID + "','" + btnBAMLDeal.ClientID + "');")
            btnSolveAll.Attributes.Add("onclick", "StopTimer('" + lblTimerDBIB.ClientID + "','" + btnDBIBDeal.ClientID + "');")
            btnSolveAll.Attributes.Add("onclick", "StopTimer('" + lblTimerOCBC.ClientID + "','" + btnOCBCDeal.ClientID + "');")
            btnSolveAll.Attributes.Add("onclick", "StopTimer('" + lblTimerCITI.ClientID + "','" + btnCITIDeal.ClientID + "');")
            btnSolveAll.Attributes.Add("onclick", "StopTimer('" + lblTimerLEONTEQ.ClientID + "','" + btnLEONTEQDeal.ClientID + "');")
            btnSolveAll.Attributes.Add("onclick", "StopTimer('" + lblTimerCOMMERZ.ClientID + "','" + btnCOMMERZDeal.ClientID + "');")
            btnSolveAll.Attributes.Add("onclick", "StopTimer('" + lblUBSTimer.ClientID + "','" + btnUBSDeal.ClientID + "');")
        Catch ex As Exception
            lblerror.Text = "setKeyPressValidations:Error occurred in Processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "setKeyPressValidations", ErrorLevel.High)
            Throw ex
        End Try
    End Sub
#Region "ShareReport"
    ''' <summary>
    ''' Gets Data and fills the first set of share report
    ''' </summary>
    ''' <remarks></remarks>
    Public Sub setTDSSData(ByVal strShare As String)
        Dim dtDssData As DataTable
        Try
            Select Case objReadConfig.ReadConfig(dsConfig, "EQC_ShowTRShareInfo", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                Case "Y", "YES"
                    dtDssData = New DataTable("Share_data")
                    If (strShare.Trim <> "") Then
                        Select Case objELNRFQ.Web_GetTDSSData(strShare, dtDssData)
                            Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                                lblStock.Text = dtDssData.Rows(0)("RICCode").ToString
                                lblStockDesc.Text = dtDssData.Rows(0)("Description").ToString.ToUpper
                                '<AvinashG. on 01-Feb-2016:  FA-1283 - Capture stock spot price and update Stock Long name(Company Name) >
                                lblSpotDate.Text = If(dtDssData.Rows(0)("SpotLastUpdateDate").ToString.Trim = "", "", CDate(dtDssData.Rows(0)("SpotLastUpdateDate").ToString).ToString("dd-MMM-yy HH:mm"))
                                'lblSpotDate.Text = If(dtDssData.Rows(0)("SpotLastUpdateDate").ToString.Trim = "", "", FinIQApp_Date.FinIQDate(dtDssData.Rows(0)("SpotLastUpdateDate").ToString))
                                '</AvinashG. on 01-Feb-2016:  FA-1283 - Capture stock spot price and update Stock Long name(Company Name) >
                                lblSpotValue.Text = SetNumberFormat(dtDssData.Rows(0)("Spot").ToString, 2)
                                '<AvinashG. on 01-Feb-2016:  FA-1283 - Capture stock spot price and update Stock Long name(Company Name) >
                                lbl52WkHighDate.Text = If(dtDssData.Rows(0)("Last1YearHighDate").ToString.Trim = "", "", CDate(dtDssData.Rows(0)("Last1YearHighDate").ToString).ToString("dd-MMM-yy"))
                                'lbl52WkHighDate.Text = If(dtDssData.Rows(0)("Last1YearHighDate").ToString.Trim = "", "", FinIQApp_Date.FinIQDate(dtDssData.Rows(0)("Last1YearHighDate").ToString))
                                '</AvinashG. on 01-Feb-2016:  FA-1283 - Capture stock spot price and update Stock Long name(Company Name) >

                                lbl52WkHighValue.Text = SetNumberFormat(dtDssData.Rows(0)("Last1YearHighValue").ToString, 2)
                                '<AvinashG. on 01-Feb-2016:  FA-1283 - Capture stock spot price and update Stock Long name(Company Name) >
                                lbl52WkLowDate.Text = If(dtDssData.Rows(0)("SpotLastUpdateDate").ToString.Trim = "", "", CDate(dtDssData.Rows(0)("Last1YearLowDate").ToString).ToString("dd-MMM-yy"))
                                'lbl52WkLowDate.Text = If(dtDssData.Rows(0)("Last1YearLowDate").ToString.Trim = "", "", FinIQApp_Date.FinIQDate(dtDssData.Rows(0)("Last1YearLowDate").ToString))
                                '</AvinashG. on 01-Feb-2016:  FA-1283 - Capture stock spot price and update Stock Long name(Company Name) >
                                lbl52WkLowValue.Text = SetNumberFormat(dtDssData.Rows(0)("Last1YearLowValue").ToString, 2)
                                lblYTDChngValue.Text = SetNumberFormat(dtDssData.Rows(0)("YTDchngperc").ToString, 2)
                                lblMTDChngValue.Text = SetNumberFormat(dtDssData.Rows(0)("MTDchngperc").ToString, 2)
                                lbl1YearChngValue.Text = SetNumberFormat(dtDssData.Rows(0)("1yearchngperc").ToString, 2)
                                lbl20DHistVolCurr.Text = SetNumberFormat(dtDssData.Rows(0)("Last20DHistVolaCurr").ToString, 2)
                                lbl60DHistVolCurr.Text = SetNumberFormat(dtDssData.Rows(0)("Last60DHistVolaCurr").ToString, 2)
                                lbl250DHistVolCurr.Text = SetNumberFormat(dtDssData.Rows(0)("Last250DHistVolaCurr").ToString, 2)
                                lblTrailing12MPEValue.Text = SetNumberFormat(dtDssData.Rows(0)("Trailing12MPE").ToString, 2)
                                lblTrailing12MPBValue.Text = SetNumberFormat(dtDssData.Rows(0)("Trailing12MPB").ToString, 2)
                                lblMarketCapCcy.Text = dtDssData.Rows(0)("MarketCapCcy").ToString
                                lblMarketCapValue.Text = SetNumberFormat(CDbl(CDbl(Val(dtDssData.Rows(0)("MarketCapValue").ToString))) / (1000000), 2) & "M"
                                lblCashEquivCcy.Text = dtDssData.Rows(0)("CashAndEquivCcy").ToString
                                lblCashEquivValue.Text = SetNumberFormat(CDbl(CDbl(Val(dtDssData.Rows(0)("CashAndEquivValue").ToString))) / (1000000), 2) & "M"
                                lblTotalDebtCcy.Text = dtDssData.Rows(0)("TotalDebtCcy").ToString
                                lblTotalDebtValue.Text = SetNumberFormat(CDbl(CDbl(Val(dtDssData.Rows(0)("TotalDebtValue").ToString))) / (1000000), 2) & "M"
                                lbl12TDivValuefreq.Text = If(dtDssData.Rows(0)("DividendYield12MonthFreq").ToString.Trim = "", "", dtDssData.Rows(0)("DividendYield12MonthFreq").ToString.Substring(0, 1))
                                lbl12TDivYieldValue.Text = If(dtDssData.Rows(0)("DividendYield12MonthValue").ToString = "", "", SetNumberFormat(dtDssData.Rows(0)("DividendYield12MonthValue").ToString, 2) & "%")
                                lblNextDivDateValue.Text = If(dtDssData.Rows(0)("NextDividendDate").ToString.Trim = "", "", FinIQApp_Date.FinIQDate(dtDssData.Rows(0)("NextDividendDate").ToString))
                                lblPrevEarnFreq.Text = If(dtDssData.Rows(0)("PreviousEarnFreq").ToString.Trim = "", "", dtDssData.Rows(0)("PreviousEarnFreq").ToString.Substring(0, 1))
                                lblPrevEarnDateValue.Text = If(dtDssData.Rows(0)("PreviousEarnDate").ToString.Trim = "", "", FinIQApp_Date.FinIQDate(dtDssData.Rows(0)("PreviousEarnDate").ToString))
                                lblPrevEPSValue.Text = SetNumberFormat(dtDssData.Rows(0)("PreviousEPS").ToString, 4)
                                lblNextEarnFreq.Text = If(dtDssData.Rows(0)("NextEarnFreq").ToString.Trim = "", "", dtDssData.Rows(0)("NextEarnFreq").ToString.Substring(0, 1))
                                lblNextEarnDateValue.Text = If(dtDssData.Rows(0)("NextEarnDate").ToString.Trim = "", "", FinIQApp_Date.FinIQDate(dtDssData.Rows(0)("NextEarnDate").ToString))
                                '</AvinashG. on 02-Feb-2016: Consistent date format in one area>
                                lblAsOfValue.Text = If(dtDssData.Rows(0)("AsOfDate").ToString.Trim = "", "", CDate(dtDssData.Rows(0)("AsOfDate").ToString).ToString("dd-MMM-yy"))
                                '<AvinashG. on 02-Feb-2016: Consistent date format in one area>
                            Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                                lblStock.Text = strShare
                                Call clearTDSSData()
                            Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                                lblStock.Text = strShare
                                Call clearTDSSData()
                            Case Web_ELNRFQ.Database_Transaction_Response.Db_Error
                                lblStock.Text = strShare
                                Call clearTDSSData()
                        End Select
                    Else
                        lblStock.Text = strShare
                        Call clearTDSSData()
                    End If
                Case "N", "NO"
                    ''Do Nothing
            End Select
        Catch ex As Exception
            lblerror.Text = "setTDSSData:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "setTDSSData", ErrorLevel.High)
            Throw ex
        End Try
    End Sub

    ''' <summary>
    ''' Clears the third set of share report
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub clearTDSSData()
        Try
            lblStockDesc.Text = ""
            lblSpotDate.Text = ""
            lblSpotValue.Text = ""
            lbl52WkHighDate.Text = ""
            lbl52WkHighValue.Text = ""
            lbl52WkLowDate.Text = ""
            lbl52WkLowValue.Text = ""
            lblYTDChngValue.Text = ""
            lblMTDChngValue.Text = ""
            lbl1YearChngValue.Text = ""
            lbl20DHistVolCurr.Text = ""
            lbl60DHistVolCurr.Text = ""
            lbl250DHistVolCurr.Text = ""
            lblTrailing12MPEValue.Text = ""
            lblTrailing12MPBValue.Text = ""
            lblMarketCapCcy.Text = ""
            lblMarketCapValue.Text = ""
            lblCashEquivCcy.Text = ""
            lblCashEquivValue.Text = ""
            lblTotalDebtCcy.Text = ""
            lblTotalDebtValue.Text = ""
            lbl12TDivValuefreq.Text = ""
            lbl12TDivYieldValue.Text = ""
            lblNextDivDateValue.Text = ""
            lblPrevEarnFreq.Text = ""
            lblPrevEarnDateValue.Text = ""
            lblPrevEPSValue.Text = ""
            lblNextEarnFreq.Text = ""
            lblNextEarnDateValue.Text = ""
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    ''' <summary>
    ''' Gets Data and fills the second set of share report
    ''' </summary>
    ''' <remarks></remarks>
    Public Sub setTDSSData2(ByVal strShare As String)
        Dim dtDssData As DataTable
        Try
            Select Case objReadConfig.ReadConfig(dsConfig, "EQC_ShowTRShareInfo", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                Case "Y", "YES"
                    dtDssData = New DataTable("Share_data")
                    If strShare.Trim <> "" Then
                        Select Case objELNRFQ.Web_GetTDSSData(strShare, dtDssData)
                            Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                                lblStock2.Text = dtDssData.Rows(0)("RICCode").ToString
                                lblStockDesc2.Text = dtDssData.Rows(0)("Description").ToString.ToUpper
                                '<AvinashG. on 01-Feb-2016:  FA-1283 - Capture stock spot price and update Stock Long name(Company Name) >
                                lblSpotDate2.Text = If(dtDssData.Rows(0)("SpotLastUpdateDate").ToString.Trim = "", "", CDate(dtDssData.Rows(0)("SpotLastUpdateDate").ToString).ToString("dd-MMM-yy HH:mm"))
                                'lblSpotDate2.Text = If(dtDssData.Rows(0)("SpotLastUpdateDate").ToString.Trim = "", "", FinIQApp_Date.FinIQDate(dtDssData.Rows(0)("SpotLastUpdateDate").ToString))
                                '</AvinashG. on 01-Feb-2016:  FA-1283 - Capture stock spot price and update Stock Long name(Company Name) >
                                lblSpotValue2.Text = SetNumberFormat(dtDssData.Rows(0)("Spot").ToString, 2)
                                '<AvinashG. on 01-Feb-2016:  FA-1283 - Capture stock spot price and update Stock Long name(Company Name) >
                                lbl52WkHighDate2.Text = If(dtDssData.Rows(0)("Last1YearHighDate").ToString.Trim = "", "", CDate(dtDssData.Rows(0)("Last1YearHighDate").ToString).ToString("dd-MMM-yy"))
                                'lbl52WkHighDate2.Text = If(dtDssData.Rows(0)("Last1YearHighDate").ToString.Trim = "", "", FinIQApp_Date.FinIQDate(dtDssData.Rows(0)("Last1YearHighDate").ToString))
                                '</AvinashG. on 01-Feb-2016:  FA-1283 - Capture stock spot price and update Stock Long name(Company Name) >

                                lbl52WkHighValue2.Text = SetNumberFormat(dtDssData.Rows(0)("Last1YearHighValue").ToString, 2)
                                '<AvinashG. on 01-Feb-2016:  FA-1283 - Capture stock spot price and update Stock Long name(Company Name) >
                                lbl52WkLowDate2.Text = If(dtDssData.Rows(0)("SpotLastUpdateDate").ToString.Trim = "", "", CDate(dtDssData.Rows(0)("Last1YearLowDate").ToString).ToString("dd-MMM-yy"))
                                'lbl52WkLowDate2.Text = If(dtDssData.Rows(0)("Last1YearLowDate").ToString.Trim = "", "", FinIQApp_Date.FinIQDate(dtDssData.Rows(0)("Last1YearLowDate").ToString))
                                '</AvinashG. on 01-Feb-2016:  FA-1283 - Capture stock spot price and update Stock Long name(Company Name) >
                                lbl52WkLowValue2.Text = SetNumberFormat(dtDssData.Rows(0)("Last1YearLowValue").ToString, 2)
                                lblYTDChngValue2.Text = SetNumberFormat(dtDssData.Rows(0)("YTDchngperc").ToString, 2)
                                lblMTDChngValue2.Text = SetNumberFormat(dtDssData.Rows(0)("MTDchngperc").ToString, 2)
                                lbl1YearChngValue2.Text = SetNumberFormat(dtDssData.Rows(0)("1yearchngperc").ToString, 2)
                                lbl20DHistVolCurr2.Text = SetNumberFormat(dtDssData.Rows(0)("Last20DHistVolaCurr").ToString, 2)
                                lbl60DHistVolCurr2.Text = SetNumberFormat(dtDssData.Rows(0)("Last60DHistVolaCurr").ToString, 2)
                                lbl250DHistVolCurr2.Text = SetNumberFormat(dtDssData.Rows(0)("Last250DHistVolaCurr").ToString, 2)
                                lblTrailing12MPEValue2.Text = SetNumberFormat(dtDssData.Rows(0)("Trailing12MPE").ToString, 2)
                                lblTrailing12MPBValue2.Text = SetNumberFormat(dtDssData.Rows(0)("Trailing12MPB").ToString, 2)
                                lblMarketCapCcy2.Text = dtDssData.Rows(0)("MarketCapCcy").ToString
                                lblMarketCapValue2.Text = SetNumberFormat(CDbl(CDbl(Val(dtDssData.Rows(0)("MarketCapValue").ToString))) / (1000000), 2) & "M"
                                lblCashEquivCcy2.Text = dtDssData.Rows(0)("CashAndEquivCcy").ToString
                                lblCashEquivValue2.Text = SetNumberFormat(CDbl(CDbl(Val(dtDssData.Rows(0)("CashAndEquivValue").ToString))) / (1000000), 2) & "M"
                                lblTotalDebtCcy2.Text = dtDssData.Rows(0)("TotalDebtCcy").ToString
                                lblTotalDebtValue2.Text = SetNumberFormat(CDbl(CDbl(Val(dtDssData.Rows(0)("TotalDebtValue").ToString))) / (1000000), 2) & "M"
                                lbl12TDivValuefreq2.Text = If(dtDssData.Rows(0)("DividendYield12MonthFreq").ToString.Trim = "", "", dtDssData.Rows(0)("DividendYield12MonthFreq").ToString.Substring(0, 1))
                                lbl12TDivYieldValue2.Text = If(dtDssData.Rows(0)("DividendYield12MonthValue").ToString = "", "", SetNumberFormat(dtDssData.Rows(0)("DividendYield12MonthValue").ToString, 2) & "%")
                                lblNextDivDateValue2.Text = If(dtDssData.Rows(0)("NextDividendDate").ToString.Trim = "", "", FinIQApp_Date.FinIQDate(dtDssData.Rows(0)("NextDividendDate").ToString))
                                lblPrevEarnFreq2.Text = If(dtDssData.Rows(0)("PreviousEarnFreq").ToString.Trim = "", "", dtDssData.Rows(0)("PreviousEarnFreq").ToString.Substring(0, 1))
                                lblPrevEarnDateValue2.Text = If(dtDssData.Rows(0)("PreviousEarnDate").ToString.Trim = "", "", FinIQApp_Date.FinIQDate(dtDssData.Rows(0)("PreviousEarnDate").ToString))
                                lblPrevEPSValue2.Text = SetNumberFormat(dtDssData.Rows(0)("PreviousEPS").ToString, 4)
                                lblNextEarnFreq2.Text = If(dtDssData.Rows(0)("NextEarnFreq").ToString.Trim = "", "", dtDssData.Rows(0)("NextEarnFreq").ToString.Substring(0, 1))
                                lblNextEarnDateValue2.Text = If(dtDssData.Rows(0)("NextEarnDate").ToString.Trim = "", "", FinIQApp_Date.FinIQDate(dtDssData.Rows(0)("NextEarnDate").ToString))
                                '</AvinashG. on 02-Feb-2016: Consistent date format in one area>
                                lblAsOfValue2.Text = If(dtDssData.Rows(0)("AsOfDate").ToString.Trim = "", "", CDate(dtDssData.Rows(0)("AsOfDate").ToString).ToString("dd-MMM-yy"))
                                '<AvinashG. on 02-Feb-2016: Consistent date format in one area>
                            Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                                lblStock2.Text = strShare
                                Call clearTDSSData2()
                            Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                                lblStock2.Text = strShare
                                Call clearTDSSData2()
                            Case Web_ELNRFQ.Database_Transaction_Response.Db_Error
                                lblStock2.Text = strShare
                                Call clearTDSSData2()
                        End Select
                    Else
                        lblStock2.Text = strShare
                        Call clearTDSSData2()
                    End If
                Case "N", "NO"
                    ''Do Nothing
            End Select

        Catch ex As Exception
            lblerror.Text = "setTDSSData2:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "setTDSSData2", ErrorLevel.High)
            Throw ex
        End Try
    End Sub

    ''' <summary>
    ''' Clears the second set of share report
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub clearTDSSData2()
        Try
            lblStockDesc2.Text = ""
            lblSpotDate2.Text = ""
            lblSpotValue2.Text = ""
            lbl52WkHighDate2.Text = ""
            lbl52WkHighValue2.Text = ""
            lbl52WkLowDate2.Text = ""
            lbl52WkLowValue2.Text = ""
            lblYTDChngValue2.Text = ""
            lblMTDChngValue2.Text = ""
            lbl1YearChngValue2.Text = ""
            lbl20DHistVolCurr2.Text = ""
            lbl60DHistVolCurr2.Text = ""
            lbl250DHistVolCurr2.Text = ""
            lblTrailing12MPEValue2.Text = ""
            lblTrailing12MPBValue2.Text = ""
            lblMarketCapCcy2.Text = ""
            lblMarketCapValue2.Text = ""
            lblCashEquivCcy2.Text = ""
            lblCashEquivValue2.Text = ""
            lblTotalDebtCcy2.Text = ""
            lblTotalDebtValue2.Text = ""
            lbl12TDivValuefreq2.Text = ""
            lbl12TDivYieldValue2.Text = ""
            lblNextDivDateValue2.Text = ""
            lblPrevEarnFreq2.Text = ""
            lblPrevEarnDateValue2.Text = ""
            lblPrevEPSValue2.Text = ""
            lblNextEarnFreq2.Text = ""
            lblNextEarnDateValue2.Text = ""
            lblPrevEarnDateValue2.Text = ""
            lblPrevEPSValue2.Text = ""
            lblNextEarnFreq2.Text = ""
            lblNextEarnDateValue2.Text = ""
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    ''' <summary>
    ''' Gets Data and fills the third set of share report
    ''' </summary>
    ''' <remarks></remarks>
    Public Sub setTDSSData3(ByVal strShare As String)
        Dim dtDssData As DataTable
        Try
            Select Case objReadConfig.ReadConfig(dsConfig, "EQC_ShowTRShareInfo", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                Case "Y", "YES"
                    dtDssData = New DataTable("Share_data")
                    If (strShare.Trim <> "") Then
                        Select Case objELNRFQ.Web_GetTDSSData(strShare, dtDssData)
                            Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                                lblStock3.Text = dtDssData.Rows(0)("RICCode").ToString
                                lblStockDesc3.Text = dtDssData.Rows(0)("Description").ToString.ToUpper
                                '<AvinashG. on 01-Feb-2016:  FA-1283 - Capture stock spot price and update Stock Long name(Company Name) >
                                lblSpotDate3.Text = If(dtDssData.Rows(0)("SpotLastUpdateDate").ToString.Trim = "", "", CDate(dtDssData.Rows(0)("SpotLastUpdateDate").ToString).ToString("dd-MMM-yy HH:mm"))
                                'lblSpotDate3.Text = If(dtDssData.Rows(0)("SpotLastUpdateDate").ToString.Trim = "", "", FinIQApp_Date.FinIQDate(dtDssData.Rows(0)("SpotLastUpdateDate").ToString))
                                '</AvinashG. on 01-Feb-2016:  FA-1283 - Capture stock spot price and update Stock Long name(Company Name) >
                                lblSpotValue3.Text = SetNumberFormat(dtDssData.Rows(0)("Spot").ToString, 2)
                                '<AvinashG. on 01-Feb-2016:  FA-1283 - Capture stock spot price and update Stock Long name(Company Name) >
                                lbl52WkHighDate3.Text = If(dtDssData.Rows(0)("Last1YearHighDate").ToString.Trim = "", "", CDate(dtDssData.Rows(0)("Last1YearHighDate").ToString).ToString("dd-MMM-yy"))
                                'lbl52WkHighDate3.Text = If(dtDssData.Rows(0)("Last1YearHighDate").ToString.Trim = "", "", FinIQApp_Date.FinIQDate(dtDssData.Rows(0)("Last1YearHighDate").ToString))
                                '</AvinashG. on 01-Feb-2016:  FA-1283 - Capture stock spot price and update Stock Long name(Company Name) >

                                lbl52WkHighValue3.Text = SetNumberFormat(dtDssData.Rows(0)("Last1YearHighValue").ToString, 2)
                                '<AvinashG. on 01-Feb-2016:  FA-1283 - Capture stock spot price and update Stock Long name(Company Name) >
                                lbl52WkLowDate3.Text = If(dtDssData.Rows(0)("SpotLastUpdateDate").ToString.Trim = "", "", CDate(dtDssData.Rows(0)("Last1YearLowDate").ToString).ToString("dd-MMM-yy"))
                                'lbl52WkLowDate3.Text = If(dtDssData.Rows(0)("Last1YearLowDate").ToString.Trim = "", "", FinIQApp_Date.FinIQDate(dtDssData.Rows(0)("Last1YearLowDate").ToString))
                                '</AvinashG. on 01-Feb-2016:  FA-1283 - Capture stock spot price and update Stock Long name(Company Name) >
                                lbl52WkLowValue3.Text = SetNumberFormat(dtDssData.Rows(0)("Last1YearLowValue").ToString, 2)
                                lblYTDChngValue3.Text = SetNumberFormat(dtDssData.Rows(0)("YTDchngperc").ToString, 2)
                                lblMTDChngValue3.Text = SetNumberFormat(dtDssData.Rows(0)("MTDchngperc").ToString, 2)
                                lbl1YearChngValue3.Text = SetNumberFormat(dtDssData.Rows(0)("1yearchngperc").ToString, 2)
                                lbl20DHistVolCurr3.Text = SetNumberFormat(dtDssData.Rows(0)("Last20DHistVolaCurr").ToString, 2)
                                lbl60DHistVolCurr3.Text = SetNumberFormat(dtDssData.Rows(0)("Last60DHistVolaCurr").ToString, 2)
                                lbl250DHistVolCurr3.Text = SetNumberFormat(dtDssData.Rows(0)("Last250DHistVolaCurr").ToString, 2)
                                lblTrailing12MPEValue3.Text = SetNumberFormat(dtDssData.Rows(0)("Trailing12MPE").ToString, 2)
                                lblTrailing12MPBValue3.Text = SetNumberFormat(dtDssData.Rows(0)("Trailing12MPB").ToString, 2)
                                lblMarketCapCcy3.Text = dtDssData.Rows(0)("MarketCapCcy").ToString
                                lblMarketCapValue3.Text = SetNumberFormat(CDbl(CDbl(Val(dtDssData.Rows(0)("MarketCapValue").ToString))) / (1000000), 2) & "M"
                                lblCashEquivCcy3.Text = dtDssData.Rows(0)("CashAndEquivCcy").ToString
                                lblCashEquivValue3.Text = SetNumberFormat(CDbl(CDbl(Val(dtDssData.Rows(0)("CashAndEquivValue").ToString))) / (1000000), 2) & "M"
                                lblTotalDebtCcy3.Text = dtDssData.Rows(0)("TotalDebtCcy").ToString
                                lblTotalDebtValue3.Text = SetNumberFormat(CDbl(CDbl(Val(dtDssData.Rows(0)("TotalDebtValue").ToString))) / (1000000), 2) & "M"
                                lbl12TDivValuefreq3.Text = If(dtDssData.Rows(0)("DividendYield12MonthFreq").ToString.Trim = "", "", dtDssData.Rows(0)("DividendYield12MonthFreq").ToString.Substring(0, 1))
                                lbl12TDivYieldValue3.Text = If(dtDssData.Rows(0)("DividendYield12MonthValue").ToString = "", "", SetNumberFormat(dtDssData.Rows(0)("DividendYield12MonthValue").ToString, 2) & "%")
                                lblNextDivDateValue3.Text = If(dtDssData.Rows(0)("NextDividendDate").ToString.Trim = "", "", FinIQApp_Date.FinIQDate(dtDssData.Rows(0)("NextDividendDate").ToString))
                                lblPrevEarnFreq3.Text = If(dtDssData.Rows(0)("PreviousEarnFreq").ToString.Trim = "", "", dtDssData.Rows(0)("PreviousEarnFreq").ToString.Substring(0, 1))
                                lblPrevEarnDateValue3.Text = If(dtDssData.Rows(0)("PreviousEarnDate").ToString.Trim = "", "", FinIQApp_Date.FinIQDate(dtDssData.Rows(0)("PreviousEarnDate").ToString))
                                lblPrevEPSValue3.Text = SetNumberFormat(dtDssData.Rows(0)("PreviousEPS").ToString, 4)
                                lblNextEarnFreq3.Text = If(dtDssData.Rows(0)("NextEarnFreq").ToString.Trim = "", "", dtDssData.Rows(0)("NextEarnFreq").ToString.Substring(0, 1))
                                lblNextEarnDateValue3.Text = If(dtDssData.Rows(0)("NextEarnDate").ToString.Trim = "", "", FinIQApp_Date.FinIQDate(dtDssData.Rows(0)("NextEarnDate").ToString))
                                '<AvinashG. on 02-Feb-2016: Consistent date format in one area>
                                lblAsOfValue3.Text = If(dtDssData.Rows(0)("AsOfDate").ToString.Trim = "", "", CDate(dtDssData.Rows(0)("AsOfDate").ToString).ToString("dd-MMM-yy"))
                                '<AvinashG. on 02-Feb-2016: Consistent date format in one area>
                            Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                                lblStock3.Text = strShare
                                Call clearTDSSData3()
                            Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                                lblStock3.Text = strShare
                                Call clearTDSSData3()
                            Case Web_ELNRFQ.Database_Transaction_Response.Db_Error
                                lblStock3.Text = strShare
                                Call clearTDSSData3()
                        End Select
                    Else
                        lblStock3.Text = strShare
                        Call clearTDSSData3()
                    End If
                Case "N", "NO"
                    ''Do Nothing
            End Select


        Catch ex As Exception
            lblerror.Text = "setTDSSData3:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "setTDSSData3", ErrorLevel.High)
            Throw ex
        End Try
    End Sub

    ''' <summary>
    ''' Clears the third set of share report
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub clearTDSSData3()
        Try
            lblStockDesc3.Text = ""
            lblSpotDate3.Text = ""
            lblSpotValue3.Text = ""
            lbl52WkHighDate3.Text = ""
            lbl52WkHighValue3.Text = ""
            lbl52WkLowDate3.Text = ""
            lbl52WkLowValue3.Text = ""
            lblYTDChngValue3.Text = ""
            lblMTDChngValue3.Text = ""
            lbl1YearChngValue3.Text = ""
            lbl20DHistVolCurr3.Text = ""
            lbl60DHistVolCurr3.Text = ""
            lbl250DHistVolCurr3.Text = ""
            lblTrailing12MPEValue3.Text = ""
            lblTrailing12MPBValue3.Text = ""
            lblMarketCapCcy3.Text = ""
            lblMarketCapValue3.Text = ""
            lblCashEquivCcy3.Text = ""
            lblCashEquivValue3.Text = ""
            lblTotalDebtCcy3.Text = ""
            lblTotalDebtValue3.Text = ""
            lbl12TDivValuefreq3.Text = ""
            lbl12TDivYieldValue3.Text = ""
            lblNextDivDateValue3.Text = ""
            lblPrevEarnFreq3.Text = ""
            lblPrevEarnDateValue3.Text = ""
            lblPrevEPSValue3.Text = ""
            lblNextEarnFreq3.Text = ""
            lblNextEarnDateValue3.Text = ""
            lblPrevEarnDateValue3.Text = ""
            lblPrevEPSValue3.Text = ""
            lblNextEarnFreq3.Text = ""
            lblNextEarnDateValue3.Text = ""
        Catch ex As Exception
            Throw ex
        End Try
    End Sub
    Private Sub manageShareReportShowHide()
        Try
            Select Case objReadConfig.ReadConfig(dsConfig, "EQC_ShowTRShareInfo", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                Case "Y", "YES"
                    clearTDSSData()
                    clearTDSSData2()
                    clearTDSSData3()
                    Prepare_DRAFCN_Basket()
                Case "N", "NO"
                    ''Do Nothing
            End Select

        Catch ex As Exception
            Throw ex
        End Try
    End Sub
#End Region

  
#End Region

#Region "CheckLoginPP"

    Public Sub chk_PriceProviderStatus(ByVal dtLoginPP As DataTable)
        Dim dr1 As DataRow()
        Try
            dr1 = dtLoginPP.Select("PP_CODE = 'JPM' ")
            If dr1.Length > 0 Then
                btnJPMprice.Visible = True
                tdJPM1.Style.Remove("display")
                lblJPM.Visible = True
                lblJPMPrice.Visible = True
                lblTimer.Visible = True
                TRJPM1.Visible = True
            Else
                btnJPMprice.Visible = False
                btnJPMDeal.Visible = False
                tdJPM1.Style.Remove("display")
                tdJPM1.Style.Add("display", "none !important;")
                lblJPM.Visible = False
                lblJPMPrice.Visible = False
                lblTimer.Visible = False
                TRJPM1.Visible = False
            End If

            dr1 = dtLoginPP.Select("PP_CODE = 'HSBC' ")
            If dr1.Length > 0 Then
                btnHSBCPrice.Style.Add("visibility", "visible")
                tdHSBC1.Style.Remove("display")
                lblHSBC.Visible = True
                lblHSBCPrice.Visible = True
                lblTimerHSBC.Visible = True
                TRHSBC1.Visible = True
            Else
                btnHSBCPrice.Style.Add("visibility", "hidden")
                btnHSBCDeal.Style.Add("visibility", "hidden")
                tdHSBC1.Style.Remove("display")
                tdHSBC1.Style.Add("display", "none !important;")
                lblHSBC.Visible = False
                lblHSBCPrice.Visible = False
                lblTimerHSBC.Visible = False
                TRHSBC1.Visible = False
            End If

            dr1 = dtLoginPP.Select("PP_CODE ='CS'")
            If dr1.Length > 0 Then
                btnCSPrice.Visible = True
                tdCS1.Style.Remove("display")
                lblCS.Visible = True
                lblCSPrice.Visible = True
                lblTimerCS.Visible = True
                TRCS1.Visible = True
            Else
                btnCSPrice.Visible = False
                btnCSDeal.Visible = False
                tdCS1.Style.Remove("display")
                tdCS1.Style.Add("display", "none !important;")
                lblCS.Visible = False
                lblCSPrice.Visible = False
                lblTimerCS.Visible = False
                TRCS1.Visible = False
            End If

            dr1 = dtLoginPP.Select("PP_CODE ='BNPP'")
            If dr1.Length > 0 Then
                btnBNPPPrice.Visible = True
                tdBNPP1.Style.Remove("display")
                lblBNPP.Visible = True
                lblBNPPPrice.Visible = True
                lblTimerBNPP.Visible = True
                TRBNPP1.Visible = True
            Else
                btnBNPPPrice.Visible = False
                btnBNPPDeal.Visible = False
                tdBNPP1.Style.Remove("display")
                tdBNPP1.Style.Add("display", "none !important;")
                lblBNPP.Visible = False
                lblBNPPPrice.Visible = False
                lblTimerBNPP.Visible = False
                TRBNPP1.Visible = False
            End If
            dr1 = dtLoginPP.Select("PP_CODE ='UBS'")
            If dr1.Length > 0 Then
                btnUBSPrice.Visible = True
                tdUBS1.Style.Remove("display")
                lblUBS.Visible = True
                lblUBSPrice.Visible = True
                lblUBSTimer.Visible = True
                TRUBS1.Visible = True
            Else
                btnUBSPrice.Visible = False
                btnUBSDeal.Visible = False
                tdUBS1.Style.Remove("display")
                tdUBS1.Style.Add("display", "none !important;")
                lblUBS.Visible = False
                lblUBSPrice.Visible = False
                lblUBSTimer.Visible = False
                TRUBS1.Visible = False
            End If
            dr1 = dtLoginPP.Select("PP_CODE ='BAML'")
            If dr1.Length > 0 Then
                btnBAMLPrice.Visible = True
                'btnBAMLDeal.Visible = True                                '' Commented by Imran
                'ImgMacq.Visible = True
                tdBAML1.Style.Remove("display")
                'shekhar 19-08-2015    tdBAML1.Style.Add("display", "block !important;")
                lblBAML.Visible = True
                lblBAMLPrice.Visible = True
                lblTimerBAML.Visible = True
                TRBAML1.Visible = True
            Else
                btnBAMLPrice.Visible = False
                btnBAMLDeal.Visible = False
                'ImgMacq.Visible = False
                tdBAML1.Style.Remove("display")
                tdBAML1.Style.Add("display", "none !important;")
                lblBAML.Visible = False
                lblBAMLPrice.Visible = False  ''<Rutuja S. on 14-Nov-2014: Changed lblTimerBAML to lblBAMLPrice >
                lblTimerBAML.Visible = False
                TRBAML1.Visible = False
            End If

            dr1 = dtLoginPP.Select("PP_CODE ='DB'")
            If dr1.Length > 0 Then
                btnDBIBPrice.Visible = True
                tdDBIB.Style.Remove("display")
                lblDBIB.Visible = True
                lblDBIBPrice.Visible = True
                lblTimerDBIB.Visible = True
                TRDBIB1.Visible = True
            Else
                btnDBIBPrice.Visible = False
                btnDBIBDeal.Visible = False
                tdDBIB.Style.Remove("display")
                tdDBIB.Style.Add("display", "none !important;")
                lblDBIB.Visible = False
                lblDBIBPrice.Visible = False
                lblTimerDBIB.Visible = False
                TRDBIB1.Visible = False
            End If

            dr1 = dtLoginPP.Select("PP_CODE ='OCBC'")
            If dr1.Length > 0 Then
                btnOCBCPrice.Visible = True
                tdOCBC1.Style.Remove("display")
                lblOCBC.Visible = True
                lblOCBCPrice.Visible = True
                lblTimerOCBC.Visible = True
                TROCBC1.Visible = True
            Else
                btnOCBCPrice.Visible = False
                btnOCBCDeal.Visible = False
                tdOCBC1.Style.Remove("display")
                tdOCBC1.Style.Add("display", "none !important;")
                lblOCBC.Visible = False
                lblOCBCPrice.Visible = False
                lblTimerOCBC.Visible = False
                TROCBC1.Visible = False
            End If

            dr1 = dtLoginPP.Select("PP_CODE ='CITI'")
            If dr1.Length > 0 Then
                btnCITIPrice.Visible = True
                tdCITI1.Style.Remove("display")
                lblCITI.Visible = True
                lblCITIPrice.Visible = True
                lblTimerCITI.Visible = True
                TRCITI1.Visible = True
            Else
                btnCITIPrice.Visible = False
                btnCITIDeal.Visible = False
                tdCITI1.Style.Remove("display")
                tdCITI1.Style.Add("display", "none !important;")
                lblCITI.Visible = False
                lblCITIPrice.Visible = False
                lblTimerCITI.Visible = False
                TRCITI1.Visible = False
            End If

            dr1 = dtLoginPP.Select("PP_CODE ='LEONTEQ'")
            If dr1.Length > 0 Then
                btnLEONTEQPrice.Visible = True
                tdLEONTEQ1.Style.Remove("display")
                lblLEONTEQ.Visible = True
                lblLEONTEQPrice.Visible = True
                lblTimerLEONTEQ.Visible = True
                TRLEONTEQ1.Visible = True
            Else
                btnLEONTEQPrice.Visible = False
                btnLEONTEQDeal.Visible = False
                tdLEONTEQ1.Style.Remove("display")
                tdLEONTEQ1.Style.Add("display", "none !important;")
                lblLEONTEQ.Visible = False
                lblLEONTEQPrice.Visible = False
                lblTimerLEONTEQ.Visible = False
                TRLEONTEQ1.Visible = False
            End If

            dr1 = dtLoginPP.Select("PP_CODE ='COMMERZ'")
            If dr1.Length > 0 Then
                btnCOMMERZPrice.Visible = True
                tdCOMMERZ1.Style.Remove("display")
                lblCOMMERZ.Visible = True
                lblCOMMERZPrice.Visible = True
                lblTimerCOMMERZ.Visible = True
                TRCOMMERZ1.Visible = True
            Else
                btnCOMMERZPrice.Visible = False
                btnCOMMERZDeal.Visible = False
                tdCOMMERZ1.Style.Remove("display")
                tdCOMMERZ1.Style.Add("display", "none !important;")
                lblCOMMERZ.Visible = False
                lblCOMMERZPrice.Visible = False
                lblTimerCOMMERZ.Visible = False
                TRCOMMERZ1.Visible = False
            End If
        Catch ex As Exception
            lblerror.Text = "chk_PriceProviderStatus:Error occurred in Processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "chk_PriceProviderStatus", ErrorLevel.High)
            Throw ex
        End Try
    End Sub

    Public Sub chk_Login_For_PP()
        Dim dtLoginPP As DataTable
        Dim dr As DataRow()
        Dim strLoginName As String = String.Empty
        Try
            strLoginName = LoginInfoGV.Login_Info.LoginId
            dtLoginPP = New DataTable("LoginWisePriceProvider_Mapping")
            tabPanelDRA.Visible = True
            '<AvinashG. on 29-Jan-2016: FA-1282 - Make Buyser Issuer Mapping product specific on DRA,FCN and Accum,Decum>
            Select Case ddlDRAType.SelectedValue.ToUpper
                Case "DRA"
                    SchemeName = "DRA"
                Case "FCN"
                    SchemeName = "FCN"
            End Select
            Session.Add("Scheme_DRAFCN", SchemeName) '<RiddhiS. on 28-Oct-2016: Different session name for eahch product>
            'SchemeName = "DRA"
            '</AvinashG. on 29-Jan-2016: FA-1282 - Make Buyser Issuer Mapping product specific on DRA,FCN and Accum,Decum>
            Select Case objELNRFQ.Db_Get_Avail_Login_For_PP(strLoginName, SchemeName, dtLoginPP)
                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                    If dtLoginPP.Rows.Count > 0 Then
                        '<AvinashG. on 29-Jan-2016: FA-1282 - Make Buyser Issuer Mapping product specific on DRA,FCN and Accum,Decum>
                        Select Case ddlDRAType.SelectedValue.ToUpper
                            Case "DRA"
                                dr = dtLoginPP.Select("Product_Code='DRA'")
                            Case "FCN"
                                dr = dtLoginPP.Select("Product_Code='FCN'")
                        End Select
                        'dr = dtLoginPP.Select("Product_Code='DRA'")
                        '</AvinashG. on 29-Jan-2016: FA-1282 - Make Buyser Issuer Mapping product specific on DRA,FCN and Accum,Decum>
                        If dr.Length > 0 Then
                            tabPanelDRA.Visible = True
                            chk_PriceProviderStatus(dtLoginPP)
                        End If
                    End If
                Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                    btnJPMprice.Visible = False
                    btnJPMDeal.Visible = False
                    lblJPM.Visible = False
                    lblJPMPrice.Visible = False
                    lblTimer.Visible = False
                    btnHSBCPrice.Style.Add("visibility", "hidden")
                    btnHSBCDeal.Style.Add("visibility", "hidden")
                    tdJPM1.Style.Remove("display")
                    tdJPM1.Style.Add("display", "none !important;")
                    tdHSBC1.Style.Remove("display")
                    tdHSBC1.Style.Add("display", "none !important;")
                    tdCS1.Style.Remove("display")
                    tdCS1.Style.Add("display", "none !important;")
                    tdBNPP1.Style.Remove("display")
                    tdBNPP1.Style.Add("display", "none !important;")
                    tdUBS1.Style.Remove("display")
                    tdUBS1.Style.Add("display", "none !important;")
                    tdBAML1.Style.Remove("display")
                    tdBAML1.Style.Add("display", "none !important;")
                    tdDBIB.Style.Remove("display")
                    tdDBIB.Style.Add("display", "none !important;")
                    tdOCBC1.Style.Remove("display")
                    tdOCBC1.Style.Add("display", "none !important;")
                    tdCITI1.Style.Remove("display")
                    tdCITI1.Style.Add("display", "none !important;")
                    tdLEONTEQ1.Style.Remove("display")
                    tdLEONTEQ1.Style.Add("display", "none !important;")
                    tdCOMMERZ1.Style.Remove("display")
                    tdCOMMERZ1.Style.Add("display", "none !important;")
                    lblHSBC.Visible = False
                    lblHSBCPrice.Visible = False
                    lblTimerHSBC.Visible = False
                    btnCSPrice.Visible = False
                    btnCSDeal.Visible = False
                    lblCS.Visible = False
                    lblCSPrice.Visible = False
                    lblTimerCS.Visible = False
                    btnSolveAll.Visible = False
                    btnBNPPPrice.Visible = False
                    btnBNPPDeal.Visible = False
                    lblBNPP.Visible = False
                    lblBNPPPrice.Visible = False
                    lblTimerBNPP.Visible = False
                    btnUBSPrice.Visible = False
                    btnUBSDeal.Visible = False
                    lblUBS.Visible = False
                    lblUBSPrice.Visible = False
                    lblUBSTimer.Visible = False
                    btnBAMLPrice.Visible = False
                    btnBAMLDeal.Visible = False
                    'ImgMacq.Visible = False
                    lblBAML.Visible = False
                    ''<Rutuja S. on 14-Nov-2014: Changed lblTimerBAML to lblBAMLPrice >
                    ''lblTimerBAML.Visible = False
                    lblBAMLPrice.Visible = False
                    ''</Rutuja S. on 14-Nov-2014: Changed lblTimerBAML to lblBAMLPrice >
                    lblTimerBAML.Visible = False

                    btnDBIBPrice.Visible = False
                    btnDBIBDeal.Visible = False
                    lblDBIB.Visible = False
                    lblDBIBPrice.Visible = False
                    lblTimerDBIB.Visible = False

                    btnOCBCPrice.Visible = False
                    btnOCBCDeal.Visible = False
                    lblOCBC.Visible = False
                    lblOCBCPrice.Visible = False
                    lblTimerOCBC.Visible = False

                    btnCITIPrice.Visible = False
                    btnCITIDeal.Visible = False
                    lblCITI.Visible = False
                    lblCITIPrice.Visible = False
                    lblTimerCITI.Visible = False

                    btnLEONTEQPrice.Visible = False
                    btnLEONTEQDeal.Visible = False
                    lblLEONTEQ.Visible = False
                    lblLEONTEQPrice.Visible = False
                    lblTimerLEONTEQ.Visible = False

                    btnCOMMERZPrice.Visible = False
                    btnCOMMERZDeal.Visible = False
                    lblCOMMERZ.Visible = False
                    lblCOMMERZPrice.Visible = False
                    lblTimerCOMMERZ.Visible = False

                    TRBAML1.Visible = False
                    TRJPM1.Visible = False
                    TRHSBC1.Visible = False
                    TRCS1.Visible = False
                    TRUBS1.Visible = False
                    TRBNPP1.Visible = False
                    TRDBIB1.Visible = False
                    TROCBC1.Visible = False
                    TRCITI1.Visible = False
                    TRLEONTEQ1.Visible = False
                    TRCOMMERZ1.Visible = False
            End Select

            If dtLoginPP.Rows.Count > 0 Then
                btnSolveAll.Visible = True
                lblRangeCcy.Visible = True
            Else
                btnSolveAll.Visible = False
                lblRangeCcy.Visible = False
            End If
            Session.Add("PP_Login", dtLoginPP)
            Chk_Server_UpDown()
        Catch ex As Exception
            lblerror.Text = "chk_Login_For_PP:Error occurred in Processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "chk_Login_For_PP", ErrorLevel.High)
            Throw ex

        End Try
    End Sub

    Public Sub chk_LinkUPDownStatus(ByVal dtGetLoginPP As DataTable, ByVal dtChkServer As DataTable)
        Dim dr As DataRow()
        Dim dr1 As DataRow()
        Try
            Dim blnLPIs_Up As Boolean
            blnLPIs_Up = False
            dr1 = dtGetLoginPP.Select("PP_CODE ='JPM'")
            If dr1.Length > 0 Then
                dr = dtChkServer.Select("Link_Provider_Name ='" & "JPM" & "' ")
                If dr.Length > 0 Then
                    If dr(0).Item("Link_Provider_Status").ToString = "UP" Then
                        blnLPIs_Up = True
                        btnJPMprice.Enabled = True
                        btnJPMprice.CssClass = "btn"
                        lblJPMPrice.Visible = True
                        chkJPM.Enabled = True ''<Nikhil M. on 16-Oct-2016: For Endable /disable | DK | Rohit>
                    Else
                        btnJPMprice.Enabled = False
                        btnJPMprice.CssClass = "btnDisabled"
                        lblJPMPrice.Visible = False
                        chkJPM.Enabled = False ''<Nikhil M. on 16-Oct-2016: For Endable /disable | DK | Rohit>
                    End If
                Else
                    '<AvinashG. on 20-Oct-2016:EQSCB-77 - Pricer button remains enabled if no record is present in Link_Provider_Status >
                    btnJPMprice.Enabled = False
                    btnJPMprice.CssClass = "btnDisabled"
                    lblJPMPrice.Visible = False
                    chkJPM.Enabled = False
                    '</AvinashG. on 20-Oct-2016:EQSCB-77 - Pricer button remains enabled if no record is present in Link_Provider_Status >
                End If
            Else
                ''Condition already handled in chk_PriceProviderStatus()
            End If
            dr1 = dtGetLoginPP.Select("PP_CODE ='HSBC'")
            If dr1.Length > 0 Then
                dr = dtChkServer.Select("Link_Provider_Name ='" & "HSBC" & "' ")
                If dr.Length > 0 Then
                    If dr(0).Item("Link_Provider_Status").ToString = "UP" Then
                        btnHSBCPrice.Enabled = True
                        btnHSBCPrice.CssClass = "btn"
                        lblHSBCPrice.Visible = True
                        If blnLPIs_Up = False Then
                            blnLPIs_Up = True
                        End If
                        chkHSBC.Enabled = True ''<Nikhil M. on 16-Oct-2016: For Endable /disable | DK | Rohit>
                    Else
                        btnHSBCPrice.Enabled = False
                        btnHSBCPrice.CssClass = "btnDisabled"
                        lblHSBCPrice.Visible = False
                        chkHSBC.Enabled = False ''<Nikhil M. on 16-Oct-2016: For Endable /disable | DK | Rohit>

                    End If
                Else
                    '<AvinashG. on 20-Oct-2016:EQSCB-77 - Pricer button remains enabled if no record is present in Link_Provider_Status >
                    btnHSBCPrice.Enabled = False
                    btnHSBCPrice.CssClass = "btnDisabled"
                    lblHSBCPrice.Visible = False
                    chkHSBC.Enabled = False
                    '</AvinashG. on 20-Oct-2016:EQSCB-77 - Pricer button remains enabled if no record is present in Link_Provider_Status >
                End If
            Else
                ''Condition already handled in chk_PriceProviderStatus()
            End If
            dr1 = dtGetLoginPP.Select("PP_CODE ='CS'")
            If dr1.Length > 0 Then
                dr = dtChkServer.Select("Link_Provider_Name ='" & "CS" & "' ")
                If dr.Length > 0 Then
                    If dr(0).Item("Link_Provider_Status").ToString = "UP" Then
                        btnCSPrice.Enabled = True
                        btnCSPrice.CssClass = "btn"
                        lblCSPrice.Visible = True
                        If blnLPIs_Up = False Then
                            blnLPIs_Up = True
                        End If
                        chkCS.Enabled = True ''<Nikhil M. on 16-Oct-2016: For Endable /disable | DK | Rohit> 
                    Else
                        btnCSPrice.Enabled = False
                        btnCSPrice.CssClass = "btnDisabled"
                        lblCSPrice.Visible = False
                        chkCS.Enabled = False  ''<Nikhil M. on 16-Oct-2016: For Endable /disable | DK | Rohit> 
                    End If
                Else
                    '<AvinashG. on 20-Oct-2016:EQSCB-77 - Pricer button remains enabled if no record is present in Link_Provider_Status >
                    btnCSPrice.Enabled = False
                    btnCSPrice.CssClass = "btnDisabled"
                    lblCSPrice.Visible = False
                    chkCS.Enabled = False
                    '</AvinashG. on 20-Oct-2016:EQSCB-77 - Pricer button remains enabled if no record is present in Link_Provider_Status >
                End If
            Else
                ''Condition already handled in chk_PriceProviderStatus()
            End If
            dr1 = dtGetLoginPP.Select("PP_CODE ='UBS'")
            If dr1.Length > 0 Then
                dr = dtChkServer.Select("Link_Provider_Name ='" & "UBS" & "' ")
                If dr.Length > 0 Then
                    If dr(0).Item("Link_Provider_Status").ToString = "UP" Then
                        btnUBSPrice.Enabled = True
                        btnUBSPrice.CssClass = "btn"
                        lblUBSPrice.Visible = True
                        If blnLPIs_Up = False Then
                            blnLPIs_Up = True
                        End If
                        chkUBS.Enabled = True ''<Nikhil M. on 16-Oct-2016: For Endable /disable | DK | Rohit>
                    Else
                        btnUBSPrice.Enabled = False
                        btnUBSPrice.CssClass = "btnDisabled"
                        lblUBSPrice.Visible = False
                        chkUBS.Enabled = False ''<Nikhil M. on 16-Oct-2016: For Endable /disable | DK | Rohit>
                    End If
                Else
                    '<AvinashG. on 20-Oct-2016:EQSCB-77 - Pricer button remains enabled if no record is present in Link_Provider_Status >
                    btnUBSPrice.Enabled = False
                    btnUBSPrice.CssClass = "btnDisabled"
                    lblUBSPrice.Visible = False
                    chkUBS.Enabled = False
                    '</AvinashG. on 20-Oct-2016:EQSCB-77 - Pricer button remains enabled if no record is present in Link_Provider_Status >
                End If
            Else
                ''Condition already handled in chk_PriceProviderStatus()
            End If
            dr1 = dtGetLoginPP.Select("PP_CODE ='BNPP'")
            If dr1.Length > 0 Then
                dr = dtChkServer.Select("Link_Provider_Name ='" & "BNPP" & "' ")
                If dr.Length > 0 Then
                    If dr(0).Item("Link_Provider_Status").ToString = "UP" Then
                        btnBNPPPrice.Enabled = True
                        btnBNPPPrice.CssClass = "btn"
                        lblBNPPPrice.Visible = True
                        If blnLPIs_Up = False Then
                            blnLPIs_Up = True
                        End If
                        chkBNPP.Enabled = True ''<Nikhil M. on 16-Oct-2016: For Endable /disable | DK | Rohit>
                    Else
                        btnBNPPPrice.Enabled = False
                        btnBNPPPrice.CssClass = "btnDisabled"
                        lblBNPPPrice.Visible = False
                        chkBNPP.Enabled = False ''<Nikhil M. on 16-Oct-2016: For Endable /disable | DK | Rohit>
                    End If
                Else
                    '<AvinashG. on 20-Oct-2016:EQSCB-77 - Pricer button remains enabled if no record is present in Link_Provider_Status >
                    btnBNPPPrice.Enabled = False
                    btnBNPPPrice.CssClass = "btnDisabled"
                    lblBNPPPrice.Visible = False
                    chkBNPP.Enabled = False
                    '</AvinashG. on 20-Oct-2016:EQSCB-77 - Pricer button remains enabled if no record is present in Link_Provider_Status >
                End If
            Else
                ''Condition already handled in chk_PriceProviderStatus()
            End If
            dr1 = dtGetLoginPP.Select("PP_CODE ='BAML'")
            If dr1.Length > 0 Then
                dr = dtChkServer.Select("Link_Provider_Name ='" & "BAML" & "' ")
                If dr.Length > 0 Then
                    If dr(0).Item("Link_Provider_Status").ToString = "UP" Then
                        btnBAMLPrice.Enabled = True
                        btnBAMLPrice.CssClass = "btn"
                        lblBAMLPrice.Visible = True
                        If blnLPIs_Up = False Then
                            blnLPIs_Up = True
                        End If
                        chkBAML.Enabled = True ''<Nikhil M. on 16-Oct-2016: For Endable /disable | DK | Rohit>
                    Else
                        btnBAMLPrice.Enabled = False
                        btnBAMLPrice.CssClass = "btnDisabled"
                        lblBAMLPrice.Visible = False
                        chkBAML.Enabled = False ''<Nikhil M. on 16-Oct-2016: For Endable /disable | DK | Rohit>
                    End If
                Else
                    '<AvinashG. on 20-Oct-2016:EQSCB-77 - Pricer button remains enabled if no record is present in Link_Provider_Status >
                    btnBAMLPrice.Enabled = False
                    btnBAMLPrice.CssClass = "btnDisabled"
                    lblBAMLPrice.Visible = False
                    chkBAML.Enabled = False
                    '</AvinashG. on 20-Oct-2016:EQSCB-77 - Pricer button remains enabled if no record is present in Link_Provider_Status >
                End If
            Else
                ''Condition already handled in chk_PriceProviderStatus()
            End If

            dr1 = dtGetLoginPP.Select("PP_CODE ='DB'")
            If dr1.Length > 0 Then
                dr = dtChkServer.Select("Link_Provider_Name ='" & "DB" & "' ")
                If dr.Length > 0 Then
                    If dr(0).Item("Link_Provider_Status").ToString = "UP" Then
                        btnDBIBPrice.Enabled = True
                        btnDBIBPrice.CssClass = "btn"
                        lblDBIBPrice.Visible = True
                        If blnLPIs_Up = False Then
                            blnLPIs_Up = True
                        End If
                        chkDBIB.Enabled = True ''<Nikhil M. on 16-Oct-2016: For Endable /disable | DK | Rohit> 

                    Else
                        btnDBIBPrice.Enabled = False
                        btnDBIBPrice.CssClass = "btnDisabled"
                        lblDBIBPrice.Visible = False
                        chkDBIB.Enabled = False ''<Nikhil M. on 16-Oct-2016: For Endable /disable | DK | Rohit> 

                    End If
                Else
                    '<AvinashG. on 20-Oct-2016:EQSCB-77 - Pricer button remains enabled if no record is present in Link_Provider_Status >
                    btnDBIBPrice.Enabled = False
                    btnDBIBPrice.CssClass = "btnDisabled"
                    lblDBIBPrice.Visible = False
                    chkDBIB.Enabled = False
                    '</AvinashG. on 20-Oct-2016:EQSCB-77 - Pricer button remains enabled if no record is present in Link_Provider_Status >
                End If
            Else
                ''Condition already handled in chk_PriceProviderStatus()
            End If

            dr1 = dtGetLoginPP.Select("PP_CODE ='OCBC'")
            If dr1.Length > 0 Then
                dr = dtChkServer.Select("Link_Provider_Name ='" & "OCBC" & "' ")
                If dr.Length > 0 Then
                    If dr(0).Item("Link_Provider_Status").ToString = "UP" Then
                        btnOCBCPrice.Enabled = True
                        btnOCBCPrice.CssClass = "btn"
                        lblOCBCPrice.Visible = True
                        If blnLPIs_Up = False Then
                            blnLPIs_Up = True
                        End If
                        chkOCBC.Enabled = True ''<Nikhil M. on 16-Oct-2016: For Endable /disable | DK | Rohit>
                    Else
                        btnOCBCPrice.Enabled = False
                        btnOCBCPrice.CssClass = "btnDisabled"
                        lblOCBCPrice.Visible = False
                        chkOCBC.Enabled = False  ''<Nikhil M. on 16-Oct-2016: For Endable /disable | DK | Rohit>
                    End If
                Else
                    '<AvinashG. on 20-Oct-2016:EQSCB-77 - Pricer button remains enabled if no record is present in Link_Provider_Status >
                    btnOCBCprice.Enabled = False
                    btnOCBCprice.CssClass = "btnDisabled"
                    lblOCBCPrice.Visible = False
                    chkOCBC.Enabled = False
                    '</AvinashG. on 20-Oct-2016:EQSCB-77 - Pricer button remains enabled if no record is present in Link_Provider_Status >
                End If
            Else
                ''Condition already handled in chk_PriceProviderStatus()
            End If

            dr1 = dtGetLoginPP.Select("PP_CODE ='CITI'")
            If dr1.Length > 0 Then
                dr = dtChkServer.Select("Link_Provider_Name ='" & "CITI" & "' ")
                If dr.Length > 0 Then
                    If dr(0).Item("Link_Provider_Status").ToString = "UP" Then
                        btnCITIPrice.Enabled = True
                        btnCITIPrice.CssClass = "btn"
                        lblCITIPrice.Visible = True
                        If blnLPIs_Up = False Then
                            blnLPIs_Up = True
                        End If
                        chkCITI.Enabled = True ''<Nikhil M. on 16-Oct-2016: For Endable /disable | DK | Rohit>
                    Else
                        btnCITIPrice.Enabled = False
                        btnCITIPrice.CssClass = "btnDisabled"
                        lblCITIPrice.Visible = False
                        chkCITI.Enabled = False ''<Nikhil M. on 16-Oct-2016: For Endable /disable | DK | Rohit>
                    End If
                Else
                    '<AvinashG. on 20-Oct-2016:EQSCB-77 - Pricer button remains enabled if no record is present in Link_Provider_Status >
                    btnCITIprice.Enabled = False
                    btnCITIprice.CssClass = "btnDisabled"
                    lblCITIPrice.Visible = False
                    chkCITI.Enabled = False
                    '</AvinashG. on 20-Oct-2016:EQSCB-77 - Pricer button remains enabled if no record is present in Link_Provider_Status >
                End If
            Else
                ''Condition already handled in chk_PriceProviderStatus()
            End If

            dr1 = dtGetLoginPP.Select("PP_CODE ='LEONTEQ'")
            If dr1.Length > 0 Then
                dr = dtChkServer.Select("Link_Provider_Name ='" & "LEONTEQ" & "' ")
                If dr.Length > 0 Then
                    If dr(0).Item("Link_Provider_Status").ToString = "UP" Then
                        btnLEONTEQPrice.Enabled = True
                        btnLEONTEQPrice.CssClass = "btn"
                        lblLEONTEQPrice.Visible = True
                        If blnLPIs_Up = False Then
                            blnLPIs_Up = True
                        End If
                        chkLEONTEQ.Enabled = True ''<Nikhil M. on 16-Oct-2016: For Endable /disable | DK | Rohit>
                    Else
                        btnLEONTEQPrice.Enabled = False
                        btnLEONTEQPrice.CssClass = "btnDisabled"
                        lblLEONTEQPrice.Visible = False
                        chkLEONTEQ.Enabled = False ''<Nikhil M. on 16-Oct-2016: For Endable /disable | DK | Rohit>
                    End If
                Else
                    '<AvinashG. on 20-Oct-2016:EQSCB-77 - Pricer button remains enabled if no record is present in Link_Provider_Status >
                    btnLEONTEQprice.Enabled = False
                    btnLEONTEQprice.CssClass = "btnDisabled"
                    lblLEONTEQPrice.Visible = False
                    chkLEONTEQ.Enabled = False
                    '</AvinashG. on 20-Oct-2016:EQSCB-77 - Pricer button remains enabled if no record is present in Link_Provider_Status >
                End If
            Else
                ''Condition already handled in chk_PriceProviderStatus()
            End If

            dr1 = dtGetLoginPP.Select("PP_CODE ='COMMERZ'")
            If dr1.Length > 0 Then
                dr = dtChkServer.Select("Link_Provider_Name ='" & "COMMERZ" & "' ")
                If dr.Length > 0 Then
                    If dr(0).Item("Link_Provider_Status").ToString = "UP" Then
                        btnCOMMERZPrice.Enabled = True
                        btnCOMMERZPrice.CssClass = "btn"
                        lblCOMMERZPrice.Visible = True
                        If blnLPIs_Up = False Then
                            blnLPIs_Up = True
                        End If
                        chkCOMMERZ.Enabled = True ''<Nikhil M. on 16-Oct-2016: For Endable /disable | DK | Rohit>
                    Else
                        btnCOMMERZPrice.Enabled = False
                        btnCOMMERZPrice.CssClass = "btnDisabled"
                        lblCOMMERZPrice.Visible = False
                        chkCOMMERZ.Enabled = False ''<Nikhil M. on 16-Oct-2016: For Endable /disable | DK | Rohit>
                    End If
                Else
                    '<AvinashG. on 20-Oct-2016:EQSCB-77 - Pricer button remains enabled if no record is present in Link_Provider_Status >
                    btnCOMMERZprice.Enabled = False
                    btnCOMMERZprice.CssClass = "btnDisabled"
                    lblCOMMERZPrice.Visible = False
                    chkCOMMERZ.Enabled = False
                    '</AvinashG. on 20-Oct-2016:EQSCB-77 - Pricer button remains enabled if no record is present in Link_Provider_Status >
                End If
            Else
                ''Condition already handled in chk_PriceProviderStatus()
            End If

            If blnLPIs_Up = False Then
                btnSolveAll.Enabled = False
                btnSolveAll.CssClass = "btnDisabled"
            Else
                btnSolveAll.Enabled = True
                btnSolveAll.CssClass = "btn"
            End If
        Catch ex As Exception
            lblerror.Text = "chk_LinkUPDownStatus:Error occurred in Processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "chk_LinkUPDownStatus", ErrorLevel.High)
            Throw ex
        End Try
    End Sub

    Public Function Chk_Server_UpDown() As String
        Dim dtChkServer As DataTable
        Dim strPPID As String = String.Empty
        Dim dtGetLoginPP As DataTable
        Dim dr2 As DataRow()
        Try
            dtChkServer = New DataTable("DUMMY")
            dtGetLoginPP = New DataTable("Login Priceprovider")
            dtGetLoginPP = CType(Session("PP_Login"), DataTable)

            Select Case objELNRFQ.Db_Chk_Server_Response(dtChkServer)
                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                    '<AvinashG. on 10-Mar-2016: FA-1365 JPM ELN API Notification: Error >
                    Select Case tabContainer.ActiveTabIndex
                        Case prdTab.DRA
                            dr2 = dtGetLoginPP.Select("Product_Code='DRA'")
                        Case prdTab.FCN
                            dr2 = dtGetLoginPP.Select("Product_Code='FCN'")
                    End Select
                    '</AvinashG. on 10-Mar-2016: FA-1365 JPM ELN API Notification: Error >

                    If dr2.Length > 0 Then
                        chk_LinkUPDownStatus(dtGetLoginPP, dtChkServer)
                    End If
                Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data

            End Select
            Return ""
        Catch ex As Exception
            Return "Chk_Server_UpDown:Error occurred in filling Share."
            lblerror.Text = "Chk_Server_UpDown:Error occurred in filling Share."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "Chk_Server_UpDown", ErrorLevel.High)
            Throw ex
        End Try
    End Function
#End Region

#Region "Populate Data"
    Public Sub Fill_Entity()
        Dim dtEntity As DataTable
        Try
            dtEntity = New DataTable("Entity")

            Select Case objELNRFQ.Get_Entity_for_Login(LoginInfoGV.Login_Info.LoginId, dtEntity)
                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                    With ddlentity
                        .DataSource = dtEntity
                        .DataTextField = "entity_name"
                        .DataValueField = "entity_id"
                        .DataBind()
                    End With
                    ddlentity.SelectedValue = LoginInfoGV.Login_Info.EntityID.ToString()

                Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                    With ddlentity
                        .DataSource = dtEntity
                        .DataBind()
                    End With
                Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful

            End Select

        Catch ex As Exception
            lblerror.Text = "Error occurred in filling Entity."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "Fill_Entity", ErrorLevel.High)
            Throw ex
        End Try
    End Sub

    Public Sub fill_RMList()
        Dim dtRMList As DataTable
        Try
            dtRMList = New DataTable("RM List")
            ''<Dilkhush/AVinash 16Dec2015:BOS Added config to load deptname>
            Dim strDeptNameYN As String = objReadConfig.ReadConfig(dsConfig, "LSS_Capture_DeptName", "LSS", CStr(LoginInfoGV.Login_Info.EntityID), "NO")
            ''Select objELNRFQ.Get_RMList(ddlentity.SelectedValue, LoginInfoGV.Login_Info.LoginId, dtRMList)
            Select Case objELNRFQ.Get_RMList(ddlentity.SelectedValue, LoginInfoGV.Login_Info.LoginId, strDeptNameYN, dtRMList)
                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                    With ddlRM
                        .DataSource = dtRMList
                        .DataTextField = "Host"
                        .DataValueField = "Rel_Manager_Name"
                        .DataBind()
                        If dtRMList.Rows.Count = 1 Then
                        Else
                            .Items.Insert(0, "")
                        End If
                    End With
                Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                    With ddlRM
                        .DataSource = dtRMList
                        .DataBind()
                    End With
                Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
            End Select
            fill_Email()
        Catch ex As Exception
            lblerror.Text = "Error occurred in filling RM's."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "fill_RMList", ErrorLevel.High)
            Throw ex
        End Try
    End Sub
    Public Sub fill_RFQRMList()
        Dim dtRMList As DataTable
        Try
            dtRMList = New DataTable("RM_List")
            ''<Dilkhush/AVinash 16Dec2015:BOS Added config to load deptname>
            Dim strDeptNameYN As String = objReadConfig.ReadConfig(dsConfig, "LSS_Capture_DeptName", "LSS", CStr(LoginInfoGV.Login_Info.EntityID), "NO")
            ''Select objELNRFQ.Get_RMList(ddlentity.SelectedValue, LoginInfoGV.Login_Info.LoginId, dtRMList)
            Select Case objELNRFQ.Get_RMList(ddlentity.SelectedValue, LoginInfoGV.Login_Info.LoginId, strDeptNameYN, dtRMList)
                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                    With ddlRFQRM
                        .DataSource = dtRMList
                        .DataTextField = "Host"
                        .DataValueField = "Rel_Manager_Name"
                        .DataBind()
                        .Items.Insert(0, "")
                        If dtRMList.Rows.Count = 1 Then
                            .SelectedIndex = 1
                        Else
                            .SelectedIndex = 0
                        End If
                        '<AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
                        Session.Add("DRAFCN_DTRMList", dtRMList)
                        '</AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
                    End With
                Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                    With ddlRFQRM
                        .DataSource = dtRMList
                        .DataBind()
                        .Items.Insert(0, "")
                    End With
                Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
            End Select
            fill_Branch()
        Catch ex As Exception
            lblerror.Text = "Error occurred in filling RM's."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "fill_RFQRMList", ErrorLevel.High)
            Throw ex
        End Try
    End Sub
    Public Sub fill_All_EntityBooks()
        Dim dtBookList As DataTable
        Try
            dtBookList = New DataTable("EnityBooks")
            Select Case objELNRFQ.Get_All_Entity_Books(ddlentity.SelectedValue, dtBookList)
                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                    With ddlAccount
                        .DataSource = dtBookList
                        .DataTextField = "BookName"
                        .DataValueField = "BookID"
                        .DataBind()
                    End With
                Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                    With ddlAccount
                        .DataSource = dtBookList
                        .DataBind()
                    End With
                Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
            End Select

        Catch ex As Exception
            lblerror.Text = "Error occurred in filling RM's."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "fill_All_EntityBooks", ErrorLevel.High)
            Throw ex
        End Try
    End Sub
    Public Sub fill_Email()
        Dim dtBranchEmail As DataTable
        Try
            dtBranchEmail = New DataTable("Email-Branch")
            Select Case objELNRFQ.get_EmailId_Branch(ddlRM.SelectedValue, dtBranchEmail)
                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                    lblEmail.Text = dtBranchEmail.Rows(0).Item("EmailId").ToString
                Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                    lblEmail.Text = ""
                Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                    lblEmail.Text = ""
            End Select
        Catch ex As Exception
            lblerror.Text = "fill_Email:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "fill_Email", ErrorLevel.High)
            Throw ex
        End Try
    End Sub

    Public Sub fill_Branch()
        Dim dtBranchEmail As DataTable
        Try
            dtBranchEmail = New DataTable("Email-Branch")
            Select Case objELNRFQ.get_EmailId_Branch(ddlRFQRM.SelectedValue, dtBranchEmail)
                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                    lblbranch.Text = dtBranchEmail.Rows(0).Item("BookName").ToString
                Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                    lblbranch.Text = ""
                Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                    lblbranch.Text = ""
            End Select
        Catch ex As Exception
            lblerror.Text = "fill_Branch:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "fill_Branch", ErrorLevel.High)
            Throw ex
        End Try
    End Sub
    Private Sub SetTemplateDetails(ByVal SchemeName As String)
        Dim dtTemplate As DataTable = Nothing
        Dim dtexchange As DataTable = Nothing
        Dim TemplateId As String = ""
        strDefaultExchange = ""
        Try
            schemeCode = tabContainer.ActiveTabIndex.ToString
            dtTemplate = New DataTable("Template Code")
            'SchemeName = "DRA/FCN"     '<RiddhiS. on 28-Oct-2016: already passed as method parameter>
            'Session.Add("Scheme", SchemeName)
            '' Session.Add("Scheme_DRAFCN", SchemeName) '<RiddhiS. on 28-Oct-2016: Different session name for eahch product>
            ' Select Case objELNRFQ.DB_Get_TemplateDetails("ELN", dtTemplate)
            Select Case ddlDRAType.SelectedValue.ToUpper
                Case "DRA"
                    SchemeName = "DRA"
                Case "FCN"
                    SchemeName = "FCN"
            End Select
            Select Case objELNRFQ.DB_Get_TemplateDetails(SchemeName, dtTemplate) '<RiddhiS. on 28-Oct-2016: product name passed>
                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                    If dtTemplate.Rows.Count > 0 Then
                        strDefaultExchange = dtTemplate.Rows(0).Item("ST_Exchange_Name").ToString
                        TemplateId = dtTemplate.Rows(0).Item("ST_Template_ID").ToString
                        'Session.Add("Template_Code", TemplateId)
                        Session.Add("Template_Code_DRAFCN", TemplateId)  '<RiddhiS. on 28-Oct-2016: Different session name for each product>
                    End If
                Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
            End Select
        Catch ex As Exception
            lblerror.Text = "SetTemplateDetails:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "SetTemplateDetails", ErrorLevel.High)
            Throw ex
        End Try
    End Sub

    '<Added By Mohit Lalwnai on 1-Apr-2016 FA-1384>
    Public Sub setRMLimit()
        Dim dblUserLimit As Double
        Dim sPrd As String
        Try
            '  If ddlQuantoCcy.SelectedValue.Trim = "" Then
            If ddlShareDRA.Text.Trim = "Please select valid share." Or ddlShareDRA.SelectedValue.Trim = "" Then
                txt_RM_Limit.Text = "Max User Limit: "
                txt_RM_Limit.ToolTip = "Max User Limit: "
            Else
                If ddlDRAType.SelectedValue.ToUpper = "FCN" Then
                    sPrd = "Fixed Coupon Note"
                Else
                    sPrd = "Range Accrual"
                End If
                Select Case objELNRFQ.GetUserLimit(LoginInfoGV.Login_Info.LoginId, ddlNoteCcy.SelectedValue, sPrd, dblUserLimit)
                    Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                        txt_RM_Limit.Text = "Max User Limit(" + ddlNoteCcy.SelectedValue + "): " + convertNotionalintoShort((If(dblUserLimit.ToString = "", 0, CDbl(dblUserLimit))), "MAX")
                        txt_RM_Limit.ToolTip = "Max User Limit(" + ddlNoteCcy.SelectedValue + "): " + FormatNumber(dblUserLimit.ToString, 2).Replace(".00", "")
                    Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data, Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                        txt_RM_Limit.Text = "Max User Limit: "
                        txt_RM_Limit.ToolTip = "Max User Limit: "
                        ' lblerrorPopUp.Text = "Cannot proceed. User/User Group limit not found."
                End Select
            End If
        Catch ex As Exception
            txt_RM_Limit.Text = "Max User Limit: "
            txt_RM_Limit.ToolTip = "Max User Limit: "
            lblerror.Text = "setRMLimit:Error occurred."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "setRMLimit", ErrorLevel.High)
            Throw ex
        End Try
    End Sub
    
    Public Sub fill_All_Exchange()
        Dim dtExchange As DataTable
        Try
            dtExchange = New DataTable("Exchange")
            Select Case objELNRFQ.DB_Fill_Exchange_Combo(dtExchange)
                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                    With ddlExchangeDRAFCN
                        .DataSource = dtExchange
                        .DataTextField = "Exchange"
                        .DataValueField = "Exchange_Name"
                        .DataBind()
                        Select Case objReadConfig.ReadConfig(dsConfig, "EQC_Allow_ALL_AsExchangeOption", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                            Case "Y", "YES"
                                .Items.Insert(0, "ALL")
                                .Visible = False
                            Case "N", "NO"
                        End Select
                    End With
                Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                    With ddlExchangeDRAFCN
                        .DataSource = dtExchange
                        .DataBind()
                    End With
                    With ddlExchangeDRAFCN2
                        .DataSource = dtExchange
                        .DataBind()
                    End With
                    With ddlExchangeDRAFCN3
                        .DataSource = dtExchange
                        .DataBind()
                    End With
                Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful

                Case Web_ELNRFQ.Database_Transaction_Response.Db_Error

            End Select
            Session.Add("Exchange_Details", dtExchange)
        Catch ex As Exception
            lblerror.Text = "fill_All_Exchange:Error occurred in filling exchange."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "fill_All_Exchange", ErrorLevel.High)
            Throw ex
        End Try
    End Sub

    Public Sub FillDRAddl_exchange(ByVal ddl As DropDownList)
        Dim dtExchange As DataTable
        Try
            dtExchange = New DataTable("Exchange")
            Select Case objELNRFQ.DB_Fill_Exchange_Combo(dtExchange)
                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                    With ddl
                        .DataSource = dtExchange
                        .DataTextField = "Exchange"
                        .DataValueField = "Exchange_Name"
                        .DataBind()
                        Select Case objReadConfig.ReadConfig(dsConfig, "EQC_Allow_ALL_AsExchangeOption", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                            Case "Y", "YES"
                                .Items.Insert(0, "ALL")
                                .Visible = False
                            Case "N", "NO"
                        End Select
                    End With
                Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                    lblerror.Text = "No data found."
                    ddl.DataSource = dtExchange
                    ddl.DataBind()
                Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                Case Web_ELNRFQ.Database_Transaction_Response.Db_Error
            End Select
        Catch ex As Exception
            lblerror.Text = "FillDRAddl_exchange:Error occurred in filling exchange."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "FillDRAddl_exchange", ErrorLevel.High)
            Throw ex
        End Try
    End Sub
    
    Public Sub fill_DRA_FCN_Grid()
        Dim dtDRA As DataTable
        Dim strPrdCode As String
        Try
            dtDRA = New DataTable("DUMMY")
            Dim strTrade As String = txttrade.Value
            ''''Dilkhush 23sep2016 LoadAll RFQ or Best RFQ
            Dim strExpandAll As String
            If chkExpandAllRFQ.Checked Then
                strExpandAll = "YES"
            Else
                strExpandAll = "NO"
            End If
            ''''Dilkhush 23sep2016 LoadAll RFQ or Best RFQ

            'strPrdCode = ddlDRAType.SelectedItem.Value
            strPrdCode = ddlDRAType.SelectedValue
            Dim strMode As String = If(ddlSelfGrp.SelectedItem.Text.Trim.ToUpper = "SELF", "SELF", If(ddlSelfGrp.SelectedItem.Text.Trim.ToUpper = "GROUP", "GRP", "ALL"))
            '<RiddhiS. on 28-Oct-2016: for passing template code>
            Select Case ddlDRAType.SelectedValue.ToUpper
                Case "DRA"
                    SchemeName = "DRA"
                Case "FCN"
                    SchemeName = "FCN"
            End Select
            '</RiddhiS.>

            ''''Dilkhush 23sep2016 Added variable to LoadAll RFQ or Best RFQ
            '<AvinashG. on 25-Jan-2016: EQBOSDEV-233 ELN/DRA/FCN/ACCU/DECU in separate tabs >
            ''Select objELNRFQ.Get_ProductBased_DRA_FCN_RFQ("ELN", LoginInfoGV.Login_Info.LoginId, strTrade, txtTotalRows.Text, strMode, strPrdCode, dtDRA)

            '<RiddhiS. on 28-Oct-2016: Passed Scheme name>
            '  Select Case objELNRFQ.Get_ProductBased_DRA_FCN_RFQ("ELN", LoginInfoGV.Login_Info.LoginId, strTrade, txtTotalRows.Text, strMode, strPrdCode, strExpandAll, dtDRA)
            Select Case objELNRFQ.Get_ProductBased_DRA_FCN_RFQ(SchemeName, LoginInfoGV.Login_Info.LoginId, strTrade, txtTotalRows.Text, strMode, strPrdCode, strExpandAll, dtDRA)
                '</RiddhiS.>


                'Select Case objELNRFQ.Get_ProductBased_DRA_FCN_RFQ("ELN", LoginInfoGV.Login_Info.LoginId, strTrade, txtTotalRows.Text, strMode, dtDRA)
                '</AvinashG. on 25-Jan-2016: EQBOSDEV-233 ELN/DRA/FCN/ACCU/DECU in separate tabs >
                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                    If dtDRA.Rows.Count > 0 Then
                        grdDRAFCN.CurrentPageIndex = 0
                        grdDRAFCN.DataSource = dtDRA
                        grdDRAFCN.DataBind()
                    End If
                Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                    grdDRAFCN.CurrentPageIndex = 0
                    dtDRA = dtDRA.Clone
                    grdDRAFCN.DataSource = dtDRA
                    grdDRAFCN.DataBind()
            End Select
            Session.Add("DRA_FCN", dtDRA)
        Catch ex As Exception
            lblerror.Text = "fill_DRA_FCN_Grid:Error occurred in filling grid."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "fill_DRA_FCN_Grid", ErrorLevel.High)
            Throw ex
        End Try
    End Sub

    Public Sub fill_OrderGrid()
        Dim dt As DataTable
        Dim strPrdCode As String '<AvinashG. on 25-Jan-2016: EQBOSDEV-233 ELN/DRA/FCN/ACCU/DECU in separate tabs >
        Try
            'Mohit Lalwani on 1-Aug-2016
            RestoreSolveAll()
            RestoreAll()
            'Mohit Lalwani on 1-Aug-2016
            EnableTimerTick()
            Dim strSchemeName As String = ""
            strSchemeName = "DRA/FCN"
            dt = New DataTable("DUMMY")
            strPrdCode = ddlDRAType.SelectedItem.Value
            Dim strMode As String = If(ddlSelfGrp.SelectedItem.Text.Trim.ToUpper = "SELF", "SELF", If(ddlSelfGrp.SelectedItem.Text.Trim.ToUpper = "GROUP", "GRP", "ALL"))
            '<AvinashG. on 25-Jan-2016: EQBOSDEV-233 ELN/DRA/FCN/ACCU/DECU in separate tabs >
            Select Case objELNRFQ.Get_ProductBased_Order_History("ELN", strSchemeName, LoginInfoGV.Login_Info.LoginId, txttrade.Value, txtTotalRows.Text, strMode, strPrdCode, dt)
                'Select Case objELNRFQ.DB_Get_Order_History("ELN", strSchemeName, LoginInfoGV.Login_Info.LoginId, txttrade.Value, txtTotalRows.Text, strMode, dt)
                '</AvinashG. on 25-Jan-2016: EQBOSDEV-233 ELN/DRA/FCN/ACCU/DECU in separate tabs >
                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                    If dt.Rows.Count > 0 Then
                        grdOrder.CurrentPageIndex = 0
                        grdOrder.DataSource = dt
                        grdOrder.DataBind()
                    End If
                Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                    grdOrder.CurrentPageIndex = 0
                    dt = dt.Clone
                    grdOrder.DataSource = dt
                    grdOrder.DataBind()
            End Select
            Session.Add("Order", dt)
        Catch ex As Exception
            lblerror.Text = "fill_OrderGrid:Error occurred in filling order grid."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "fill_OrderGrid", ErrorLevel.High)
            Throw ex
        End Try
    End Sub

    Public Sub Get_Price_Provider()
        Dim dtPairCode As DataTable
        Try
            dtPairCode = New DataTable("Price Provider")
            Select Case objELNRFQ.DB_Get_All_Of_PriceProvider(PP_CODE, dtPairCode)
                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                    Session.Add("Provide_Id", dtPairCode)
                Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                    lblerror.Text = "No record(s) for price provider is found."
            End Select
        Catch ex As Exception
            lblerror.Text = "Get_Price_Provider:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "Get_Price_Provider", ErrorLevel.High)
            Throw ex
        End Try
    End Sub

#End Region

#Region "Get Commentry"

    Private Sub GetCommentary_DRA()
        Dim strDRACommentary As StringBuilder
        Dim sbMailComm As StringBuilder
        Dim sbComm As StringBuilder
        Dim SCBText As StringBuilder
        Dim bestLP As String
        Dim PriceOrStrikeMail As String
        Dim IssuerMail As String
        Dim IssuePriceMail As String
        Dim MRating, SPRating, FRating As String
        Dim lst As ListItem
        'sbComm = New StringBuilder() '<AvinashG. on 05-Jan-2016: Initialization should be in Try Block>
        Dim strTempJS As StringBuilder
        'strTempJS = New StringBuilder() '<AvinashG. on 05-Jan-2016: Initialization should be in Try Block>
        Try
            strDRACommentary = New StringBuilder() '<AvinashG. on 05-Jan-2016: Initialization should be in Try Block>
            sbMailComm = New StringBuilder() '<AvinashG. on 05-Jan-2016: Initialization should be in Try Block>
            sbComm = New StringBuilder() '<AvinashG. on 05-Jan-2016: Initialization should be in Try Block>

            SCBText = New StringBuilder() '<RiddhiS. on 30-Aug-2016: SCB Format email>

            strTempJS = New StringBuilder() '<AvinashG. on 05-Jan-2016: Initialization should be in Try Block>
            '<AvinashG. on 24-Aug-2015: FA-1014 - Main Pricer: Quote Mailing Option >
            '<AvinashG. on 20-Oct-2015: FA-1157 - Add Debug Info to web application code>
            Session.Add("Debug_Counter", CInt(Session("Debug_Counter")) + 1)
            LogException(LoginInfoGV.Login_Info.LoginId, Session("Debug_Counter").ToString.PadLeft(5, CChar("0")) + ": In GetCommentary_DRA", LogType.FnqDebug, Nothing, sSelfPath, "GetCommentary_DRA", ErrorLevel.None)
            '</AvinashG. on 20-Oct-2015: FA-1157 - Add Debug Info to web application code>

            'Select Case objReadConfig.ReadConfig(dsConfig, "EQC_Allowed_QuoteMailing", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
            '    Case "Y", "YES"
            If tabContainer.ActiveTabIndex = prdTab.DRA Or tabContainer.ActiveTabIndex = prdTab.FCN Then
                sbMailComm = New StringBuilder()
                SCBText = New StringBuilder()

                lblMailComentry.Text = "" '<AvinashG. on 24-Aug-2015: FA-1014 - Main Pricer: Quote Mailing Option >
                If txtBasketShares.Text.Trim <> "" Then

                    sbComm.AppendLine("<TABLE><TR><TD COLSPAN=""1""><span class='fieldInfo'>!</span></TD><TD COLSPAN=""2"" style=""font-size:12px;"">RFQ Details (" + ddlDRAType.SelectedItem.Text + ")</TD></TR>")



                    Dim tempCounterRFQDetails As Integer
                    tempCounterRFQDetails = 1




                    sbComm.AppendLine("<TR><TD Style='color:#919191'><span class='fieldInfo'>" + tempCounterRFQDetails.ToString + "</span></td><TD Style='color:#919191'>Tenor</TD><TD style='padding-left: 25px;'> " + txtTenorDRA.Text + ddlTenorTypeDRA.SelectedItem.Text.Substring(0, 1) + "</TD></TR>")

                    tempCounterRFQDetails = tempCounterRFQDetails + 1
                    ''sbComm.AppendLine("<TR><TD Style='color:#919191'><span class='fieldInfo'>" + tempCounterRFQDetails.ToString + "</span></td><TD Style='color:#919191'>Underlying</TD><TD  style='padding-left: 25px;'> " + ddlShareDRA.Text)  ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                    sbComm.AppendLine("<TR><TD Style='color:#919191'><span class='fieldInfo'>" + tempCounterRFQDetails.ToString + "</span></td><TD Style='color:#919191'>Underlying</TD><TD  style='padding-left: 25px;'> " + If(ddlShareDRA.SelectedValue.Trim = "", "", ddlShareDRA.Text))  ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                    ''sbComm.Append(If(chkAddShare2.Checked AndAlso ddlShareDRA2.Text <> "" AndAlso ddlShareDRA.SelectedValue <> ddlShareDRA2.SelectedValue, ", " + ddlShareDRA2.Text, ""))
                    sbComm.Append(If(chkAddShare2.Checked AndAlso ddlShareDRA2.Text <> "" AndAlso ddlShareDRA.SelectedValue <> ddlShareDRA2.SelectedValue AndAlso ddlShareDRA2.SelectedValue.Trim <> "", ", " + ddlShareDRA2.Text, ""))
                    ''sbComm.Append(If(chkAddShare3.Checked AndAlso ddlShareDRA3.Text <> "" AndAlso ddlShareDRA3.SelectedValue <> ddlShareDRA2.SelectedValue AndAlso _
                    sbComm.Append(If(chkAddShare3.Checked AndAlso ddlShareDRA3.Text <> "" AndAlso ddlShareDRA3.SelectedValue <> ddlShareDRA2.SelectedValue AndAlso _
                                         ddlShareDRA3.SelectedValue <> ddlShareDRA.SelectedValue AndAlso ddlShareDRA3.SelectedValue.Trim <> "", ", " + ddlShareDRA3.Text, "")) ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                    sbComm.AppendLine("</TD></TR>")
                    tempCounterRFQDetails = tempCounterRFQDetails + 1
                    sbComm.AppendLine("<TR><TD Style='color:#919191'><span class='fieldInfo'>" + tempCounterRFQDetails.ToString + "</span></td><TD Style='color:#919191'>Strike</TD><TD  style='padding-left: 25px;'> " + If(ddlSolveForDRA.SelectedValue.ToUpper = "CONVERSION_STRIKE", " " + hdnBestStrike.Value + " ", FormatNumber(Val(txtStrikeDRAFCN.Text.Replace(",", "")), 2)) + "% of Spot" + "</TD></TR>")
                    tempCounterRFQDetails = tempCounterRFQDetails + 1

                    '''''Ashwini on 17-oct-2016: Changed drop down reference to set KO type
                    '''sbComm.AppendLine("<TR><TD Style='color:#919191'><span class='fieldInfo'>" + tempCounterRFQDetails.ToString + "</span></td><TD Style='color:#919191'>KO</TD><TD  style='padding-left: 25px;'> " + FormatNumber(Val(txtKOLevel.Text.Replace(",", "")), 2) + "% of Spot (" + ddlKIFrequency.SelectedItem.Text + ")" + "</TD></TR>")
                    sbComm.AppendLine("<TR><TD Style='color:#919191'><span class='fieldInfo'>" + tempCounterRFQDetails.ToString + "</span></td><TD Style='color:#919191'>KO</TD><TD  style='padding-left: 25px;'> " + FormatNumber(Val(txtKOLevel.Text.Replace(",", "")), 2) + "% of Spot (" + ddlKOType.SelectedItem.Text + ")" + "</TD></TR>")
                    tempCounterRFQDetails = tempCounterRFQDetails + 1


                    If chkKI.Checked Then
                        sbComm.AppendLine("<TR><TD Style='color:#919191'><span class='fieldInfo'>" + tempCounterRFQDetails.ToString + "</span></td><TD Style='color:#919191'>KI</TD><TD  style='padding-left: 25px;'> " + FormatNumber(Val(txtKILevel.Text.Replace(",", "")), 2) + "% of Spot (" + ddlKIType.SelectedItem.Text + ")</TD></TR>")
                        tempCounterRFQDetails = tempCounterRFQDetails + 1
                    End If
                    sbComm.AppendLine("<TR><TD Style='color:#919191'><span class='fieldInfo'>" + tempCounterRFQDetails.ToString + "</span></td><TD Style='color:#919191'>Coupon</TD><TD  style='padding-left: 25px;'> " + If(ddlSolveForDRA.SelectedValue.ToUpper = "COUPON", hdnBestStrike.Value, FormatNumber(Val(txtCoupon.Text.Replace(",", "")), 2)) + "% p.a. (" + ddlKIFrequency.SelectedItem.Text + ")") ''<Nikhil M. on 23-Sep-2016: Changed >
                    If ddlDRAType.SelectedItem.Text.ToUpper = "DRA" Then
                        ''<Nikhil M. on 20-Sep-2016:Removed Brackects from Strike Price >
                        sbComm.Append(", with Accrual Barrier = " + If(ddlSolveForDRA.SelectedValue.ToUpper = "CONVERSION_STRIKE", " " + hdnBestStrike.Value + " ", _
                                          FormatNumber(Val(txtStrikeDRAFCN.Text.Replace(",", "")), 2)) + "% of Spot, " + "Guaranteed for " + Val(txtGuPeriod.Text.Replace(",", "")).ToString() + " coupon period(s) </TD></TR>") ''<Nikhil M. on 20-Sep-2016: Added est Strike to Commentry >
                        tempCounterRFQDetails = tempCounterRFQDetails + 1
                    Else
                        sbComm.Append("</TD></TR>")
                        tempCounterRFQDetails = tempCounterRFQDetails + 1
                    End If
                    sbComm.AppendLine("<TR><TD Style='color:#919191'><span class='fieldInfo'>" + tempCounterRFQDetails.ToString + "</span></td><TD Style='color:#919191'>Issue Price</TD><TD  style='padding-left: 25px;'> " + If(ddlSolveForDRA.SelectedValue.ToUpper = "PRICE", hdnBestStrike.Value, FormatNumber(Val(txtDRAPrice.Text.Replace(",", "")), 2)) + "% of Spot" + "</TD></TR>") ''<Nikhil M. on 23-Sep-2016:Changed >
                    tempCounterRFQDetails = tempCounterRFQDetails + 1
                    sbComm.AppendLine("<TR><TD Style='color:#919191'><span class='fieldInfo'>" + tempCounterRFQDetails.ToString + "</span></td><TD Style='color:#919191'>Notional</TD><TD  style='padding-left: 25px;'> " + ddlNoteCcy.SelectedItem.Text + " " + txtOrderDRAFCN.Text + "</TD></TR>")
                    sbComm.AppendLine("</TABLE>")

                    ''sbMailComm.Append(txtTenorDRA.Text + ddlTenorTypeDRA.SelectedItem.Text.Substring(0, 1) + " " + ddlNoteCcy.SelectedItem.Text)
                    ''sbMailComm.Append(If(lblQuantoYNFlag.Text.ToUpper = "YES", "(q) ", " ") + ddlDRAType.SelectedItem.Text + " linked to " + ddlShareDRA.Text)  ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                    '' ''If (txtBasketShares.Text.Split(CChar(","))).Length > 1 Then
                    '' ''If (txtBasketShares.Text.Split(CChar(","))).Length = 2 Then
                    ''sbMailComm.Append(If(chkAddShare2.Checked AndAlso ddlShareDRA2.Text <> "" AndAlso ddlShareDRA.SelectedValue <> ddlShareDRA2.SelectedValue, ", " + ddlShareDRA2.Text, ""))
                    ''sbMailComm.Append(If(chkAddShare3.Checked AndAlso ddlShareDRA3.Text <> "" AndAlso ddlShareDRA3.SelectedValue <> ddlShareDRA2.SelectedValue AndAlso _
                    ''                     ddlShareDRA3.SelectedValue <> ddlShareDRA.SelectedValue, ", " + ddlShareDRA3.Text, ""))  ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                    ' ''ElseIf (txtBasketShares.Text.Split(CChar(","))).Length = 3 Then
                    ' ''    sbMailComm.Append(If(chkAddShare2.Checked AndAlso ddlShareDRA2.SelectedItem.Text <> "" AndAlso ddlShareDRA.SelectedItem.Value <> ddlShareDRA2.SelectedItem.Value, ", " + ddlShareDRA2.SelectedItem.Text, ""))
                    ' ''    sbMailComm.Append(If(chkAddShare3.Checked AndAlso ddlShareDRA3.SelectedItem.Text <> "" AndAlso ddlShareDRA3.SelectedItem.Value <> ddlShareDRA2.SelectedItem.Value AndAlso _
                    ' ''                         ddlShareDRA3.SelectedItem.Value <> ddlShareDRA.SelectedItem.Value, ", " + ddlShareDRA3.SelectedItem.Text, ""))
                    ' ''End If
                    '' ''End If

                    ''sbMailComm.AppendLine("#").AppendLine("#")
                    ''sbMailComm.Append("Strike          = " + If(ddlSolveForDRA.SelectedValue.ToUpper = "CONVERSION_STRIKE", "[  ]", FormatNumber(Val(txtStrikeDRAFCN.Text.Replace(",", "")), 2)) + "% of Spot")
                    ''sbMailComm.Append(" ; KO     = " + FormatNumber(Val(txtKOLevel.Text.Replace(",", "")), 2) + "% of Spot (" + ddlKIFrequency.SelectedItem.Text + ")").AppendLine("#")
                    ''sbMailComm.AppendLine("#")
                    ''If chkKI.Checked Then
                    ''    sbMailComm.Append("KI     = " + FormatNumber(Val(txtKILevel.Text.Replace(",", "")), 2) + "% of Spot (" + ddlKIType.SelectedItem.Text + ")").AppendLine("#").AppendLine("#")
                    ''Else
                    ''    ''DO Nothing, No KI barrier selected
                    ''End If
                    ''sbMailComm.Append("Coupon       = " + If(ddlSolveForDRA.SelectedValue.ToUpper = "COUPON", "[  ]", FormatNumber(Val(txtCoupon.Text.Replace(",", "")), 2)) + "% p.a. (" + ddlKIFrequency.SelectedItem.Text + ")")
                    ''If ddlDRAType.SelectedItem.Text.ToUpper = "DRA" Then
                    ''    sbMailComm.Append(", with Accrual Barrier = " + If(ddlSolveForDRA.SelectedValue.ToUpper = "CONVERSION_STRIKE", "[  ]", _
                    ''                      FormatNumber(Val(txtStrikeDRAFCN.Text.Replace(",", "")), 2)) + "% of Spot, " + "Guaranteed for " + Val(txtGuPeriod.Text.Replace(",", "")).ToString() + " coupon period(s)").AppendLine("#")
                    ''Else
                    ''    ''Do Nothing, parameters not valid for DRA
                    ''End If

                    ''sbMailComm.AppendLine("#")
                    ''sbMailComm.AppendLine("Issue Price  = " + If(ddlSolveForDRA.SelectedValue.ToUpper = "PRICE", "[  ]", FormatNumber(Val(txtDRAPrice.Text.Replace(",", "")), 2)) + "% of Spot" + "#")

                    ''sbMailComm.AppendLine("Notional      = " + ddlNoteCcy.SelectedItem.Text + " " + txtOrderDRAFCN.Text + "#")

                    ''lblMailComentry.Text = sbMailComm.ToString


                    '<RiddhiS. on 30-Aug-2016: SCB temp email format till confirmation arrives>

                    ''bestLP = CheckBestPriceForEmail()
                    ''GetIssuerRatingForMail(bestLP, MRating, SPRating, FRating)
                    ''Select Case bestLP
                    ''    Case "JPM"
                    ''        PriceOrStrikeMail = lblJPMClientPrice.Text
                    ''        IssuerMail = "JPM"
                    ''        IssuePriceMail = lblJPMPrice.Text

                    ''    Case "HSBC"
                    ''        PriceOrStrikeMail = lblHSBCClientPrice.Text
                    ''        IssuerMail = "HSBC"
                    ''        IssuePriceMail = lblHSBCPrice.Text

                    ''    Case "CS"
                    ''        PriceOrStrikeMail = lblCSClientPrice.Text
                    ''        IssuerMail = "CS"
                    ''        IssuePriceMail = lblCSPrice.Text

                    ''    Case "UBS"
                    ''        PriceOrStrikeMail = lblUBSClientPrice.Text
                    ''        IssuerMail = "UBS"
                    ''        IssuePriceMail = lblUBSPrice.Text

                    ''    Case "BNPP"
                    ''        PriceOrStrikeMail = lblBNPPClientPrice.Text
                    ''        IssuerMail = "BNPP"
                    ''        IssuePriceMail = lblBNPPPrice.Text

                    ''    Case "BAML"
                    ''        PriceOrStrikeMail = lblBAMLClientPrice.Text
                    ''        IssuerMail = "BAML"
                    ''        IssuePriceMail = lblBAMLPrice.Text

                    ''    Case "DBIB"
                    ''        PriceOrStrikeMail = lblDBIBClientPrice.Text
                    ''        IssuerMail = "DB"
                    ''        IssuePriceMail = lblDBIBPrice.Text

                    ''    Case "OCBC"
                    ''        PriceOrStrikeMail = lblOCBCClientPrice.Text
                    ''        IssuerMail = "OCBC"
                    ''        IssuePriceMail = lblOCBCPrice.Text

                    ''    Case "CITI"
                    ''        PriceOrStrikeMail = lblCITIClientPrice.Text
                    ''        IssuerMail = "CITI"
                    ''        IssuePriceMail = lblCITIPrice.Text

                    ''    Case Nothing, ""
                    ''        PriceOrStrikeMail = ""
                    ''        IssuerMail = ""
                    ''        IssuePriceMail = ""

                    ''End Select

                    ''SCBText.Append(txtTenorDRA.Text + ddlTenorTypeDRA.SelectedItem.Text.Substring(0, 1) + " " + ddlNoteCcy.SelectedItem.Text)
                    ''SCBText.Append(If(lblQuantoYNFlag.Text.ToUpper = "YES", "(q) ", " ") + ddlDRAType.SelectedItem.Text + " linked to " + ddlShareDRA.Text)  ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                    ''SCBText.Append(If(chkAddShare2.Checked AndAlso ddlShareDRA2.Text <> "" AndAlso ddlShareDRA.SelectedValue <> ddlShareDRA2.SelectedValue, ", " + ddlShareDRA2.Text, ""))
                    ''SCBText.Append(If(chkAddShare3.Checked AndAlso ddlShareDRA3.Text <> "" AndAlso ddlShareDRA3.SelectedValue <> ddlShareDRA2.SelectedValue AndAlso _
                    ''                     ddlShareDRA3.SelectedValue <> ddlShareDRA.SelectedValue, ", " + ddlShareDRA3.Text, ""))  ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value


                    ''SCBText.AppendLine("#").AppendLine("#")

                    ''SCBText.AppendLine("Reference Stock : " + ddlShareDRA.Text) ''Reference Stock
                    ''SCBText.AppendLine("Stock Code : " + ddlShareDRA.SelectedValue) ''Stock Code
                    ''SCBText.AppendLine("Stock Currency : " + lblDRABaseCcy.Text) ''Stock Ccy
                    ''SCBText.AppendLine("Spot : " + lblSpotValue.Text) ''Spot

                    ''If chkAddShare2.Checked = True And ddlShareDRA2.Text <> "" Then
                    ''    SCBText.AppendLine("Reference Stock : " + ddlShareDRA2.Text) ''Reference Stock
                    ''    SCBText.AppendLine("Stock Code : " + ddlShareDRA2.SelectedValue) ''Stock Code
                    ''    SCBText.AppendLine("Stock Currency : " + lblBaseCurrency2.Text) ''Stock Ccy
                    ''    SCBText.AppendLine("Spot : " + lblSpotValue2.Text) ''Spot
                    ''End If

                    ''If chkAddShare3.Checked = True And ddlShareDRA3.Text <> "" Then
                    ''    SCBText.AppendLine("Reference Stock : " + ddlShareDRA3.Text) ''Reference Stock
                    ''    SCBText.AppendLine("Stock Code : " + ddlShareDRA3.SelectedValue) ''Stock Code
                    ''    SCBText.AppendLine("Stock Currency : " + lblBaseCurrency3.Text) ''Stock Ccy
                    ''    SCBText.AppendLine("Spot : " + lblSpotValue3.Text) ''Spot
                    ''End If

                    ''SCBText.AppendLine("Note Currency : " + ddlNoteCcy.SelectedItem.Text) ''Note Ccy
                    ''SCBText.AppendLine("Trade Date :  ") ''Trade Date
                    ''SCBText.AppendLine("Issue Date : ") ''Issue Date
                    ''SCBText.AppendLine("Tenor : " + txtTenorDRA.Text + If(ddlTenorTypeDRA.SelectedValue.ToString.ToUpper = "MONTH", "m", "y")) ''Tenor
                    ''SCBText.AppendLine("Issue Price : " + If(ddlSolveForDRA.SelectedValue.ToUpper = "PRICE", IssuePriceMail, FormatNumber(Val(txtDRAPrice.Text.Replace(",", "")), 2)) + "% of Spot") ''Issue Price
                    ''SCBText.AppendLine("Client Price :  " + PriceOrStrikeMail) ''Client Price
                    ''SCBText.AppendLine("Notional : " + ddlNoteCcy.SelectedItem.Text + " " + txtOrderDRAFCN.Text) ''Notional
                    ''SCBText.AppendLine("Coupon (% p.a.) : " + If(ddlSolveForDRA.SelectedValue.ToUpper = "COUPON", PriceOrStrikeMail, FormatNumber(Val(txtCoupon.Text.Replace(",", "")), 2))) ''Coupon (% p.a.)
                    ''SCBText.AppendLine("Frequency : " + ddlKIFrequency.SelectedItem.Text) ''Frequency
                    ''SCBText.AppendLine("Guaranteed : " + Val(txtGuPeriod.Text.Replace(",", "")).ToString() + " coupon period(s)") ''Guaranteed
                    ''SCBText.AppendLine("Strike(%) : " + If(ddlSolveForDRA.SelectedValue.ToUpper = "CONVERSION_STRIKE", IssuePriceMail, FormatNumber(Val(txtStrikeDRAFCN.Text.Replace(",", "")), 2))) ''Strike (%)
                    ''SCBText.AppendLine("KO(%) : " + FormatNumber(Val(txtKOLevel.Text.Replace(",", "")), 2)) ''KO (%)
                    ''SCBText.AppendLine("KO Type : " + lblKOType.Text) ''KO Type
                    ''SCBText.AppendLine("KI(%) : " + FormatNumber(Val(txtKILevel.Text.Replace(",", "")), 2)) ''KI (%)
                    ''SCBText.AppendLine("KI Type : " + ddlKIFrequency.SelectedItem.Text) ''KI Type
                    ''SCBText.AppendLine("Upfront : " + txtUpfrontDRA.Text) ''Upfront
                    ''SCBText.AppendLine("Issuer :  " + IssuerMail) ''Issuer
                    '' ''SCBText.AppendLine("Guarantor : ") ''Guarantor
                    ''SCBText.AppendLine("Moody's Rating : " + MRating) ''Moody's Rating
                    ''SCBText.AppendLine("Standard and Poor's Rating : " + SPRating) ''S&P Rating
                    ''SCBText.AppendLine("Fitch Rating : " + FRating) ''Fitch Rating

                    ''lblMailComentry.Text = SCBText.ToString
                    '</RiddhiS.>


                    '<RiddhiS. on 06-Sep-2016: for sending mail to selected Price providers>

                    SCBText.Append(txtTenorDRA.Text + ddlTenorTypeDRA.SelectedItem.Text.Substring(0, 1) + " " + ddlNoteCcy.SelectedItem.Text)
                    'SCBText.Append(If(lblQuantoYNFlag.Text.ToUpper = "YES", "(q) ", " ") + ddlDRAType.SelectedItem.Text + " linked to " + ddlShareDRA.Text)  ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                    'SCBText.Append(If(chkAddShare2.Checked AndAlso ddlShareDRA2.Text <> "" AndAlso ddlShareDRA.SelectedValue <> ddlShareDRA2.SelectedValue, ", " + ddlShareDRA2.Text, ""))
                    'SCBText.Append(If(chkAddShare3.Checked AndAlso ddlShareDRA3.Text <> "" AndAlso ddlShareDRA3.SelectedValue <> ddlShareDRA2.SelectedValue AndAlso _
                    '                     ddlShareDRA3.SelectedValue <> ddlShareDRA.SelectedValue, ", " + ddlShareDRA3.Text, ""))  ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                    SCBText.Append(If(lblQuantoYNFlag.Text.ToUpper = "YES", "(q) ", " ") + ddlDRAType.SelectedItem.Text + " linked to " + If(ddlShareDRA.SelectedValue.Trim <> "", ddlShareDRA.Text, ""))  ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                    SCBText.Append(If(chkAddShare2.Checked AndAlso ddlShareDRA2.Text <> "" AndAlso ddlShareDRA.SelectedValue <> ddlShareDRA2.SelectedValue AndAlso ddlShareDRA2.SelectedValue.Trim <> "", ", " + ddlShareDRA2.Text, ""))
                    SCBText.Append(If(chkAddShare3.Checked AndAlso ddlShareDRA3.Text <> "" AndAlso ddlShareDRA3.SelectedValue <> ddlShareDRA2.SelectedValue AndAlso _
                                         ddlShareDRA3.SelectedValue <> ddlShareDRA.SelectedValue AndAlso ddlShareDRA3.SelectedValue.Trim <> "", ", " + ddlShareDRA3.Text, ""))  ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value


                    SCBText.AppendLine("#").AppendLine("#")

                    SCBText.AppendLine("Reference Stock : " + ddlShareDRA.Text) ''Reference Stock
                    SCBText.AppendLine("Stock Code : " + ddlShareDRA.SelectedValue) ''Stock Code
                    SCBText.AppendLine("Stock Currency : " + lblDRABaseCcy.Text) ''Stock Ccy
                    SCBText.AppendLine("Spot : " + lblSpotValue.Text) ''Spot

                    If chkAddShare2.Checked = True And ddlShareDRA2.Text <> "" Then
                        SCBText.AppendLine("Reference Stock : " + ddlShareDRA2.Text) ''Reference Stock
                        SCBText.AppendLine("Stock Code : " + ddlShareDRA2.SelectedValue) ''Stock Code
                        SCBText.AppendLine("Stock Currency : " + lblBaseCurrency2.Text) ''Stock Ccy
                        SCBText.AppendLine("Spot : " + lblSpotValue2.Text) ''Spot
                    End If

                    If chkAddShare3.Checked = True And ddlShareDRA3.Text <> "" Then
                        SCBText.AppendLine("Reference Stock : " + ddlShareDRA3.Text) ''Reference Stock
                        SCBText.AppendLine("Stock Code : " + ddlShareDRA3.SelectedValue) ''Stock Code
                        SCBText.AppendLine("Stock Currency : " + lblBaseCurrency3.Text) ''Stock Ccy
                        SCBText.AppendLine("Spot : " + lblSpotValue3.Text) ''Spot
                    End If

                    SCBText.AppendLine("Note Currency : " + ddlNoteCcy.SelectedItem.Text) ''Note Ccy
                    SCBText.AppendLine("Trade Date :  ") ''Trade Date
                    SCBText.AppendLine("Issue Date : ") ''Issue Date
                    SCBText.AppendLine("Tenor : " + txtTenorDRA.Text + If(ddlTenorTypeDRA.SelectedValue.ToString.ToUpper = "MONTH", "m", "y")) ''Tenor
                    SCBText.AppendLine("Notional : " + ddlNoteCcy.SelectedItem.Text + " " + txtOrderDRAFCN.Text) ''Notional
                    SCBText.AppendLine("Frequency : " + ddlKIFrequency.SelectedItem.Text) ''Frequency
                    SCBText.AppendLine("Guaranteed : " + Val(txtGuPeriod.Text.Replace(",", "")).ToString() + " coupon period(s)") ''Guaranteed
                    SCBText.AppendLine("KO(%) : " + FormatNumber(Val(txtKOLevel.Text.Replace(",", "")), 2)) ''KO (%)
                    SCBText.AppendLine("KO Type : " + lblKOType.Text) ''KO Type
                    SCBText.AppendLine("KI(%) : " + FormatNumber(Val(txtKILevel.Text.Replace(",", "")), 2)) ''KI (%)
                    SCBText.AppendLine("KI Type : " + ddlKIFrequency.SelectedItem.Text) ''KI Type
                    SCBText.AppendLine("Upfront : " + txtUpfrontDRA.Text) ''Upfront

                    ''SCBText.AppendLine("Guarantor : ") ''Guarantor
                    


                    For Each lst In chkPPmaillist.Items
                        If lst.Selected = True Then
                            Select Case lst.Value
                                Case "JPM"
                                    PriceOrStrikeMail = lblJPMClientPrice.Text
                                    IssuerMail = "JPM"
                                    IssuePriceMail = lblJPMPrice.Text

                                Case "HSBC"
                                    PriceOrStrikeMail = lblHSBCClientPrice.Text
                                    IssuerMail = "HSBC"
                                    IssuePriceMail = lblHSBCPrice.Text

                                Case "CS"
                                    PriceOrStrikeMail = lblCSClientPrice.Text
                                    IssuerMail = "CS"
                                    IssuePriceMail = lblCSPrice.Text

                                Case "UBS"
                                    PriceOrStrikeMail = lblUBSClientPrice.Text
                                    IssuerMail = "UBS"
                                    IssuePriceMail = lblUBSPrice.Text

                                Case "BNPP"
                                    PriceOrStrikeMail = lblBNPPClientPrice.Text
                                    IssuerMail = "BNPP"
                                    IssuePriceMail = lblBNPPPrice.Text

                                Case "BAML"
                                    PriceOrStrikeMail = lblBAMLClientPrice.Text
                                    IssuerMail = "BAML"
                                    IssuePriceMail = lblBAMLPrice.Text

                                Case "DBIB"
                                    PriceOrStrikeMail = lblDBIBClientPrice.Text
                                    IssuerMail = "DB"
                                    IssuePriceMail = lblDBIBPrice.Text

                                Case "OCBC"
                                    PriceOrStrikeMail = lblOCBCClientPrice.Text
                                    IssuerMail = "OCBC"
                                    IssuePriceMail = lblOCBCPrice.Text

                                Case "CITI"
                                    PriceOrStrikeMail = lblCITIClientPrice.Text
                                    IssuerMail = "CITI"
                                    IssuePriceMail = lblCITIPrice.Text
				Case "LEONTEQ"
                                    PriceOrStrikeMail = lblLEONTEQClientPrice.Text
                                    IssuerMail = "LEONTEQ"
                                    IssuePriceMail = lblLEONTEQPrice.Text

                                Case "COMMERZ"
                                    PriceOrStrikeMail = lblCOMMERZClientPrice.Text
                                    IssuerMail = "COMMERZ"
                                    IssuePriceMail = lblCOMMERZPrice.Text
                                Case Nothing, ""
                                    PriceOrStrikeMail = ""
                                    IssuerMail = ""
                                    IssuePriceMail = ""

                            End Select
                            GetIssuerRatingForMail(lst.Value, MRating, SPRating, FRating)
                            SCBText.AppendLine("#")
                            SCBText.AppendLine("Issuer :  " + lst.text) ''Issuer
                            SCBText.AppendLine("#")
                            SCBText.AppendLine("Strike(%) : " + If(ddlSolveForDRA.SelectedValue.ToUpper = "CONVERSION_STRIKE", IssuePriceMail, FormatNumber(Val(txtStrikeDRAFCN.Text.Replace(",", "")), 2))) ''Strike (%)
                            SCBText.AppendLine("Coupon (% p.a.) : " + If(ddlSolveForDRA.SelectedValue.ToUpper = "COUPON", PriceOrStrikeMail, FormatNumber(Val(txtCoupon.Text.Replace(",", "")), 2))) ''Coupon (% p.a.)
                            SCBText.AppendLine("Issue Price : " + If(ddlSolveForDRA.SelectedValue.ToUpper = "PRICE", IssuePriceMail, FormatNumber(Val(txtDRAPrice.Text.Replace(",", "")), 2)) + "% of Spot") ''Issue Price
                            SCBText.AppendLine("Client Price :  " + PriceOrStrikeMail) ''Client Price
                            SCBText.AppendLine("Moody's Rating : " + MRating) ''Moody's Rating
                            SCBText.AppendLine("Standard and Poor's Rating : " + SPRating) ''S&P Rating
                            SCBText.AppendLine("Fitch Rating : " + FRating) ''Fitch Rating

                        End If
                    Next
                    lblMailComentry.Text = SCBText.ToString()
                    '</RiddhiS. on 06-Sep-2016>
                Else
                    ''Do Nothing
                End If
            Else
                ''Do Nothing
            End If
            '    Case "N", "NO"
            ''Do Nothing'
            'End Select

            '</AvinashG. on 24-Aug-2015: FA-1014 - Main Pricer: Quote Mailing Option >

            'If chkAddShare1.Checked Then
            '    If ddlShareDRA.SelectedItem Is Nothing Or ddlShareDRA.SelectedItem.Value = "" Then

            '    Else

            '    End If
            'End If
            'If chkAddShare2.Checked Then
            '    If ddlShareDRA2.SelectedItem Is Nothing Or ddlShareDRA2.SelectedItem.Value = "" Then

            '    Else

            '    End If
            'End If
            'If chkAddShare3.Checked Then
            '    If ddlShareDRA3.SelectedItem Is Nothing Or ddlShareDRA3.SelectedItem.Value = "" Then
            '    Else

            '    End If
            'End If

            If (txtBasketShares.Text.Trim = "" And tabContainer.ActiveTabIndex = prdTab.DRA) Or (txtBasketShares.Text.Trim = "" And tabContainer.ActiveTabIndex = prdTab.FCN) Then
                ''btnMail.Visible = False
                'Avinash/Shekar:-Hide/Show mailing button
                strTempJS.AppendLine("try { hideEmail(); } catch(e) {}")
                ''System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "hideEmail16", "hideEmail();", True)
            Else
                Select Case objReadConfig.ReadConfig(dsConfig, "EQC_Allowed_QuoteMailing", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                    Case "Y", "YES"
                        '' btnMail.Visible = True
                        'Avinash/Shekar:-Hide/Show mailing button
                        strTempJS.AppendLine("try{ showEmail(); } catch(e){ }")
                        ''System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "showEmail17", "showEmail();", True)
                    Case "N", "NO"
                        'Do nothing'
                End Select
                '<AvinashG. on 15-Sep-2015: FA-1070 - Main Pricer: New narration as display without vertical separation >
                Select Case objReadConfig.ReadConfig(dsConfig, "EQC_Display_MailText_As_Narration", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                    Case "Y", "YES"
                        ''<Avinash 26Nov2015:- display in vertical format>
                        ''lblComentry1.Text = If(lblMailComentry.Text.Trim = "", "", _
                        ''                       lblMailComentry.Text.Remove(lblMailComentry.Text.LastIndexOf("#"), 1).Replace("##", "#").Replace("#" + Environment.NewLine, "; ").Replace("; ;", ";")) '<AvinashG. on 15-Sep-2015: Replace unwanted characters from display>
                        lblComentry1.Text = sbComm.ToString()
                    Case "N", "NO"
                        strDRACommentary = New StringBuilder
                        SchemeName = Convert.ToString(Session("Scheme_DRAFCN"))
                        If txtBasketShares.Text = "" Then
                            If ddlSolveForDRA.SelectedValue = "CONVERSION_STRIKE" Then
                                strDRACommentary.Append("You are buying " & ddlNoteCcy.SelectedItem.Text & " " & txtOrderDRAFCN.Text _
                                & " quantity of " & ddlDRAType.SelectedValue & " on " & ddlShareDRA.SelectedValue & " share for tenor of " _
                                 & txtTenorDRA.Text & " " & ddlTenorTypeDRA.SelectedValue.Substring(0, 1).ToUpper + ddlTenorTypeDRA.SelectedValue.Substring(1).ToLower _
                                & " with coupon of  " & txtCoupon.Text & " % and price of " & txtDRAPrice.Text & " %.")

                            ElseIf ddlSolveForDRA.SelectedValue = "COUPON" Then
                                strDRACommentary.Append("You are buying " & _
                               ddlNoteCcy.SelectedItem.Text & " " & txtOrderDRAFCN.Text & " quantity of " & ddlDRAType.SelectedValue & _
                               " on " & ddlShareDRA.SelectedValue & " share for tenor of " & txtTenorDRA.Text & " " & ddlTenorTypeDRA.SelectedValue.Substring(0, 1).ToUpper + ddlTenorTypeDRA.SelectedValue.Substring(1).ToLower _
                               & " with strike of  " & txtStrikeDRAFCN.Text & " % and price of " & txtDRAPrice.Text & " %.")
                            Else
                                strDRACommentary.Append("You are buying " & _
                         ddlNoteCcy.SelectedItem.Text & " " & txtOrderDRAFCN.Text & " quantity of " & ddlDRAType.SelectedValue & _
                            " on " & ddlShareDRA.SelectedValue & " share for tenor of " _
                            & txtTenorDRA.Text & " " & ddlTenorTypeDRA.SelectedValue.Substring(0, 1).ToUpper + ddlTenorTypeDRA.SelectedValue.Substring(1).ToLower _
                           & " with strike of  " & txtStrikeDRAFCN.Text & " % and coupon of " & txtCoupon.Text & " %.")
                            End If
                            lblComentry1.Text = strDRACommentary.ToString
                        Else
                            If ddlSolveForDRA.SelectedValue = "CONVERSION_STRIKE" Then
                                strDRACommentary.Append("You are buying " & ddlNoteCcy.SelectedItem.Text & " " & txtOrderDRAFCN.Text _
                               & " quantity of " & ddlDRAType.SelectedValue & " on " & txtBasketShares.Text & " share for tenor of " _
                                 & txtTenorDRA.Text & " " & ddlTenorTypeDRA.SelectedValue.Substring(0, 1).ToUpper + ddlTenorTypeDRA.SelectedValue.Substring(1).ToLower _
                               & " with coupon of  " & txtCoupon.Text & " % and price of " & txtDRAPrice.Text & " %.")

                            ElseIf ddlSolveForDRA.SelectedValue = "COUPON" Then
                                strDRACommentary.Append("You are buying " & ddlNoteCcy.SelectedItem.Text & " " & txtOrderDRAFCN.Text _
                                & " quantity of " & ddlDRAType.SelectedValue & " on " & txtBasketShares.Text & " share for tenor of " _
                               & txtTenorDRA.Text & " " & ddlTenorTypeDRA.SelectedValue.Substring(0, 1).ToUpper + ddlTenorTypeDRA.SelectedValue.Substring(1).ToLower _
                                & " with strike of  " & txtStrikeDRAFCN.Text & " % and price of " & txtDRAPrice.Text & " %.")
                            Else
                                strDRACommentary.Append("You are buying " & ddlNoteCcy.SelectedItem.Text & " " & txtOrderDRAFCN.Text _
                              & " quantity of " & ddlDRAType.SelectedValue & " on " & txtBasketShares.Text & " share for tenor of " _
                            & txtTenorDRA.Text & " " & ddlTenorTypeDRA.SelectedValue.Substring(0, 1).ToUpper + ddlTenorTypeDRA.SelectedValue.Substring(1).ToLower _
                              & " with strike of  " & txtStrikeDRAFCN.Text & " % and coupon of " & txtCoupon.Text & " %.")
                            End If
                            lblComentry1.Text = strDRACommentary.ToString
                        End If
                End Select
                '</AvinashG. on 15-Sep-2015: FA-1070 - Main Pricer: New narration as display without vertical separation >

                ''<KBM/Rutuja on 06-May-2014>
                lblNoteCcy.Text = "(" & ddlNoteCcy.SelectedValue & ")"
                ''</KBM/Rutuja on 06-May-2014>
            End If




            pnlReprice.Update()
            upnlCommentry.Update()
            '<AvinashG. on 20-Oct-2015: FA-1157 - Add Debug Info to web application code>
            Session.Add("Debug_Counter", CInt(Session("Debug_Counter")) + 1)
            LogException(LoginInfoGV.Login_Info.LoginId, Session("Debug_Counter").ToString.PadLeft(5, CChar("0")) + ": End of GetCommentary_DRA", LogType.FnqDebug, Nothing, sSelfPath, "GetCommentary_DRA", ErrorLevel.None)
            '</AvinashG. on 20-Oct-2015: FA-1157 - Add Debug Info to web application code>
            System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "hideShowEmailDRAFCN", strTempJS.ToString, True)
        Catch ex As Exception
            lblerror.Text = "GetCommentary_DRA:Error occurred in Processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "GetCommentary_DRA", ErrorLevel.High)

            'Throw ex ''KBM on 5-May-2014
            Throw ex
        End Try
    End Sub

  
#End Region

#Region "Fill Chart"

    Public Sub Get_RFQ_ColumnChart()
        Dim dtOrderPrice As DataTable
        Chart1.Visible = True
        Chart2.Visible = True
        Dim ProductType As String
        Dim ActiveTabIndex As Integer = tabContainer.ActiveTabIndex
        ProductType = "DRA/FCN"
        Try
            dtOrderPrice = New DataTable("Order To PriceRatio")
            Select Case objELNRFQ.DB_Get_ColumnChart_Details(ProductType, LoginInfoGV.Login_Info.LoginId, dtOrderPrice)
                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                    If dtOrderPrice.Rows.Count > 0 Then
                        DrawColumnChart(dtOrderPrice, "PP_CODE", "OrderToPriceRatio", Chart2, "Default", False, "", SeriesChartType.Bar)
                        Chart2.Visible = True
                    Else
                        Chart2.Visible = False
                    End If
                Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                    Chart2.Visible = False
                Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                Case Web_ELNRFQ.Database_Transaction_Response.Db_Error
            End Select
        Catch ex As Exception
            lblerror.Text = "Get_RFQ_ColumnChart:Error occurred in filling chart."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "Get_RFQ_ColumnChart", ErrorLevel.High)
            Throw ex
        End Try
    End Sub

    Public Sub Get_RFQ_PieChart()
        Dim dtMaxCount As DataTable
        Chart1.Visible = True
        Dim strProductType As String
        Dim ActiveTabIndex As Integer = tabContainer.ActiveTabIndex
        strProductType = "DRA/FCN"
        Try
            dtMaxCount = New DataTable("Max Count")
            Select Case objELNRFQ.DB_Get_RFQ_Details_Chart(strProductType, LoginInfoGV.Login_Info.LoginId, dtMaxCount)
                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                    If dtMaxCount.Rows.Count > 0 Then
                        DrawPieChart(dtMaxCount, "PP_CODE", "MaxCount", "Default", False, "", Chart1)
                        Chart1.Visible = True
                    Else
                        Chart1.Visible = False
                    End If
                Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                    Chart1.Visible = False
                Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                Case Web_ELNRFQ.Database_Transaction_Response.Db_Error
            End Select
            Chart1.Visible = True
        Catch ex As Exception
            lblerror.Text = ""
            lblerror.Text = "Get_RFQ_PieChart:Error occurred in filling chart."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "Get_RFQ_PieChart", ErrorLevel.High)
            Throw ex
        End Try
    End Sub
    Public Sub DrawPieChart(ByVal _ChartData As DataTable, _
                         ByVal _AxisXValueMember As String, _
                         ByVal _AxisYValueMember As String, _
                         ByVal _SeriesName As String, _
                         ByVal _ShowValuesWithAmountMultiplier As Boolean, _
                         ByVal _ChartTitle As String, ByRef Chart As System.Web.UI.DataVisualization.Charting.Chart)
        Dim i As Integer = 0
        Try
            Dim colorBackGround As Color
            colorBackGround = Color.FromArgb(252, 252, 252)

            Chart.Series.Clear()

            ''Set Chart
            Chart.BackColor = colorBackGround

            Chart.BackGradientStyle = _ChartBackGradientStyle
            Chart.BorderlineDashStyle = _ChartBorderlineDashStyle
            Chart.BorderSkin.SkinStyle = _ChartBorderSkinStyle

            ''Set Chart Titles 
            ''   Chart.Titles("ChartTitle").Text = _ChartTitle
            ' Chart.Titles("ChartTitle").Font = New Font(ChartFont, 8.0F, FontStyle.Regular)
            ''  Chart.Titles("ChartTitle").Font = New Font("arial", CType(ddlFont.SelectedValue, System.Drawing.FontStyle), FontStyle.Regular)

            ''    Chart.Titles("ChartTitle").Alignment = ContentAlignment.MiddleCenter
            ' Chart.ChartAreas("Default").AxisX.TitleFont = New Font(ChartFont, 7.0F, FontStyle.Regular)
            ''  Chart.ChartAreas("Default").AxisX.TitleFont = New Font(ChartFont, CType(ddlFont.SelectedValue, System.Drawing.FontStyle), FontStyle.Regular)

            '' Chart.ChartAreas("Default").AxisY.TitleFont = New Font(ChartFont, 7.0F, FontStyle.Regular)
            ' Chart.ChartAreas("Default").AxisY.TitleFont = New Font(ChartFont, CType(ddlFont.SelectedValue, System.Drawing.FontStyle), FontStyle.Regular)

            Chart.ChartAreas("Default").BackColor = colorBackGround
            Chart.ChartAreas("Default").BackGradientStyle = GradientStyle.None

            'setInnerPlotPosition(_ChartPositionProperties)

            Chart.ChartAreas("Default").InnerPlotPosition.X = 30
            Chart.ChartAreas("Default").InnerPlotPosition.Y = 10

            ''---
            Chart.ChartAreas("Default").AxisX.TitleFont = New Font("arial", 7.0F, FontStyle.Regular)
            Chart.ChartAreas("Default").AxisY.TitleFont = New Font("arial", 7.0F, FontStyle.Regular)
            ''--

            Chart.ChartAreas("Default").InnerPlotPosition.Height = 80
            Chart.ChartAreas("Default").InnerPlotPosition.Width = 50 ''55

            Chart.ChartAreas("Default").InnerPlotPosition.Auto = False

            Chart.Legends("Default").Enabled = True
            Chart.Legends(0).Docking = _DockingLocation

            Dim dChartType As System.Web.UI.DataVisualization.Charting.SeriesChartType = System.Web.UI.DataVisualization.Charting.SeriesChartType.Doughnut

            If _ChartData Is Nothing OrElse _ChartData.Rows.Count = 0 Then
                Throw New Exception("No data to display")
            End If

            ''Check if X value member present in datasource.
            If Not _ChartData.Columns.Contains(_AxisXValueMember) Then
                Throw New Exception("Column " & _AxisXValueMember & " not found in datasource.")
            End If

            ''Check if Y value member present in datasource.
            If Not _ChartData.Columns.Contains(_AxisYValueMember) Then
                Throw New Exception("Column " & _AxisYValueMember & " not found in datasource.")
            End If

            '3D setting

            Chart.Series.Add(_SeriesName)

            Chart.Series(0).ChartType = dChartType
            Chart.Series(0)("PieDrawingStyle") = "SoftEdge"
            Chart.Series(0)("PieLabelStyle") = "Outside"
            Chart.Series(0)("DoughnutRadius") = CStr(70)
            Chart.Series(0)("PieSize") = CStr(40)

            Chart.Series(0).Color = System.Drawing.Color.FromArgb(CInt(CByte(180)), CInt(CByte(65)), CInt(CByte(140)), CInt(CByte(240)))
            Chart.Series(0).Font = New System.Drawing.Font("arial", 7.0F, System.Drawing.FontStyle.Regular)

            Chart.Legends(0).Enabled = True
            Chart.Legends(0).BackColor = colorBackGround
            Chart.Legends(0).Font = New Font("arial", 7.0F, FontStyle.Regular)

            Chart.Series(0).MarkerStyle = System.Web.UI.DataVisualization.Charting.MarkerStyle.Circle
            Chart.Series(0).XValueMember = _AxisXValueMember
            Chart.Series(0).YValueMembers = _AxisYValueMember

            Chart.Series(0).Label = "#VALY{N0}"

            Chart.ChartAreas(0).Area3DStyle.IsClustered = True
            Chart.ChartAreas(0).Area3DStyle.IsRightAngleAxes = False
            Chart.ChartAreas(0).Area3DStyle.Perspective = 10
            Chart.ChartAreas(0).Area3DStyle.PointGapDepth = 0
            Chart.ChartAreas(0).Area3DStyle.Rotation = 0
            Chart.ChartAreas(0).Area3DStyle.WallWidth = 20
            Chart.ChartAreas(0).ShadowColor = System.Drawing.Color.Transparent

            Chart.Series(0).LegendText = "#VALX"

            Chart.ChartAreas("Default").Area3DStyle.Enable3D = True
            Chart.ChartAreas("Default").Area3DStyle.Rotation = 45
            Chart.ChartAreas("Default").Area3DStyle.Inclination = 45
            Chart.DataSource = _ChartData
            Chart.DataBind()
            Dim strcount As Integer = Chart.Series(0).Points.Count

            For i = 0 To strcount - 1
                Select Case Chart.Series(0).Points.Item(i).AxisLabel
                    Case "JPM"
                        Chart.Series(0).Points(i).Color = Me.structChartColors.JPM
                    Case "HSBC"
                        Chart.Series(0).Points(i).Color = Me.structChartColors.HSBC        ''System.Drawing.Color.FromArgb(214, 42, 33)
                    Case "CS"
                        Chart.Series(0).Points(i).Color = Me.structChartColors.CS
                    Case "BNPP"
                        Chart.Series(0).Points(i).Color = Me.structChartColors.BNPP      ''System.Drawing.Color.FromArgb(114, 148, 179)
                    Case "UBS"
                        Chart.Series(0).Points(i).Color = Me.structChartColors.UBS
                    Case "DB"
                        Chart.Series(0).Points(i).Color = Me.structChartColors.DBIB
                    Case "OCBC"
                        Chart.Series(0).Points(i).Color = Me.structChartColors.OCBC
                    Case "CITI"
                        Chart.Series(0).Points(i).Color = Me.structChartColors.CITI
                    Case "LEONTEQ"
                        Chart.Series(0).Points(i).Color = Me.structChartColors.LEONTEQ
                    Case "COMMERZ"
                        Chart.Series(0).Points(i).Color = Me.structChartColors.COMMERZ
                    Case "BAML"
                        Chart.Series(0).Points(i).Color = Me.structChartColors.BAML
                End Select
            Next

            upnlChart.Update()
        Catch ex As Exception
            lblerror.Text = "DrawPieChart:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "DrawPieChart", ErrorLevel.High)
            Throw ex
        End Try
    End Sub

#End Region

#Region "Exchange,Quanto,ValueDays,Strike,OrderQty,Upfront,Barrier,Solve For,Type,Share,LevegareRatio,Duration"

    
    Public Sub clearFields()
        Try
            If ddlSolveForDRA.SelectedValue = "CONVERSION_STRIKE" Then
                    txtStrikeDRAFCN.Text = "0.00"
                txtStrikeDRAFCN.Enabled = False
                txtCoupon.Enabled = True
                txtDRAPrice.Enabled = True
            ElseIf ddlSolveForDRA.SelectedValue = "COUPON" Then
                txtCoupon.Text = "0"
                txtCoupon.Enabled = False
                txtStrikeDRAFCN.Enabled = True
                txtDRAPrice.Enabled = True
            Else
                    txtDRAPrice.Text = "0.00"
                txtDRAPrice.Enabled = False
                txtStrikeDRAFCN.Enabled = True
                txtCoupon.Enabled = True
            End If
            upnl2.Update()
        Catch ex As Exception
            lblerror.Text = "clearFields:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "clearFields", ErrorLevel.High)
            Throw ex
        End Try
    End Sub

    Public Sub ddlExchangeDRAFCN_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlExchangeDRAFCN.SelectedIndexChanged
        Dim dtBaseCCY As DataTable
        Try
            dtBaseCCY = New DataTable("Dummy")
            lblerror.Text = ""
            clearFields()

            ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
            With ddlShareDRA
                '.Items.Clear()
                '.Text = ""
                .DataSource = Nothing
                .DataBind()
            End With

            ''fill_DRA_FCN_Share()  ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
            If ddlShareDRA.SelectedValue IsNot Nothing And ddlShareDRA.SelectedItem IsNot Nothing Then
                Select Case objELNRFQ.DB_GetBASECCY(ddlShareDRA.SelectedValue, dtBaseCCY)
                    Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                        lblDRABaseCcy.Text = dtBaseCCY.Rows(0)(0).ToString
                    Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                        lblDRABaseCcy.Text = ""
                    Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                        lblDRABaseCcy.Text = ""
                End Select
                GetCommentary_DRA()
                ddlShareDRA.Text = ddlShareDRA.Text  ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                If lblDRABaseCcy.Text <> "" Then
                    ddlNoteCcy.SelectedValue = lblDRABaseCcy.Text
                End If

                Prepare_DRAFCN_Basket()
            End If
            lblComentry1.Text = ""
            pnlReprice.Update()
            upnlCommentry.Update()
            ResetAll()

            '<AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
            'getRange()
            '</AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>

        Catch ex As Exception
            lblerror.Text = "ddlExchangeDRAFCN_SelectedIndexChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "ddlExchangeDRAFCN_SelectedIndexChanged", ErrorLevel.High)
            Throw ex
        End Try
    End Sub


    Private Sub ddlSolveForDRA_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlSolveForDRA.SelectedIndexChanged
        Try
            lblerror.Text = ""
            clearFields()
            If ddlSolveForDRA.SelectedValue = "CONVERSION_STRIKE" Then
                txtCoupon.Text = ""
                txtDRAPrice.Text = ""
                txtStrikeDRAFCN.Text = ""
                txtStrikeDRAFCN.Enabled = False
                txtDRAPrice.Enabled = True
                txtCoupon.Enabled = True
                lblSolveForType.Text = ddlSolveForDRA.SelectedItem.Text
                txtUpfrontDRA.Enabled = True ''<Rushikesh D. on 15-May16 EQBOSDEV-360>
            ElseIf ddlSolveForDRA.SelectedValue = "COUPON" Then
                txtStrikeDRAFCN.Text = ""
                txtDRAPrice.Text = ""
                txtCoupon.Text = ""
                txtCoupon.Enabled = False
                txtDRAPrice.Enabled = True
                txtStrikeDRAFCN.Enabled = True
                lblSolveForType.Text = "Coupon (%) p.a."
                txtUpfrontDRA.Enabled = True ''<Rushikesh D. on 15-May16 EQBOSDEV-360>
            Else
                txtStrikeDRAFCN.Text = ""
                txtCoupon.Text = ""
                txtDRAPrice.Text = ""
                txtDRAPrice.Enabled = False
                txtCoupon.Enabled = True
                txtStrikeDRAFCN.Enabled = True
                lblSolveForType.Text = ddlSolveForDRA.SelectedItem.Text

                ''<Rushikesh D. on 15-May16 EQBOSDEV-360>
                Select Case objReadConfig.ReadConfig(dsConfig, "EQC_Follow_AtPar_Lock", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper
                    Case "Y", "YES"
                        txtUpfrontDRA.Enabled = False
                        txtUpfrontDRA.Text = "0.00"
                    Case "N", "NO"
                End Select
                ''</Rushikesh D. on 15-May16 EQBOSDEV-360>
            End If

            ResetAll()                  ''<ashwiniP on 06-Oct-2016> : Sequence changed
            GetCommentary_DRA()

        Catch ex As Exception
            lblerror.Text = "ddlSolveForDRA_SelectedIndexChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "ddlSolveForDRA_SelectedIndexChanged", ErrorLevel.High)
        End Try
    End Sub

    Private Sub txtGuPeriod_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtGuPeriod.TextChanged
        Try
            lblerror.Text = ""
            clearFields()

            If ddlKIFrequency.SelectedValue = "FORTNIGHTLY" Then
                OddOrEven(CInt(txtGuPeriod.Text))
            ElseIf ((ddlKIFrequency.SelectedValue = "QUARTERLY") OrElse (ddlKIFrequency.SelectedValue = "SEMIANNUALLY") OrElse (ddlKIFrequency.SelectedValue = "ANNUALLY")) Then
                chkMultiple(CInt(txtGuPeriod.Text))
            ElseIf ddlKIFrequency.SelectedValue = "MONTHLY" Then
            End If
            ResetAll()
            GetCommentary_DRA()             ''<ashwiniP on 06-Oct-2016> : Sequence changed
        Catch ex As Exception
            lblerror.Text = "txtGuPeriod_TextChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "txtGuPeriod_TextChanged", ErrorLevel.High)
        End Try
    End Sub
    Private Function DRA_Get_NumberOf_Months_From_KIFrequency_GU_Periods() As Integer
        Try
            Dim intNumberOfMonths As Integer
            intNumberOfMonths = 0
            If (txtGuPeriod.Text.Trim = "") Then
                Return 0
            End If
            If ddlKIFrequency.SelectedValue.Trim = "MONTHLY" Then
                intNumberOfMonths = CInt(txtGuPeriod.Text)
            ElseIf ddlKIFrequency.SelectedValue.Trim = "BIMONTHLY" Then
                intNumberOfMonths = CInt(txtGuPeriod.Text) * 2
            ElseIf ddlKIFrequency.SelectedValue.Trim = "QUARTERLY" Then
                intNumberOfMonths = CInt(txtGuPeriod.Text) * 3
            ElseIf ddlKIFrequency.SelectedValue.Trim = "SEMIANNUALLY" Then
                intNumberOfMonths = CInt(txtGuPeriod.Text) * 6
            ElseIf ddlKIFrequency.SelectedValue.Trim = "ANNUALLY" Then
                intNumberOfMonths = CInt(txtGuPeriod.Text) * 12
            End If
            Return intNumberOfMonths
        Catch ex As Exception
            lblerror.Text = "DRA_Get_NumberOf_Months_From_KIFrequency_GU_Period:Error while converting to months"
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "DRA_Get_NumberOf_Months_From_KIFrequency_GU_Period", ErrorLevel.High)
            Return 0
        End Try
    End Function
    Function chkMultiple(ByVal Number As Integer) As Boolean
        Try
        If Number Mod 3 = 0 Then
            chkMultiple = True
        Else
            lblerror.Text = "Guarantee should be multiple of 3,6.."
            chkMultiple = False
        End If
        Catch ex As Exception
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "chkMultiple", ErrorLevel.High)
        End Try
    End Function
    Function OddOrEven(ByVal TheNumber As Integer) As Boolean
        Try
        If TheNumber Mod 2 = 0 Then
            OddOrEven = True
        Else
            lblerror.Text = "Guarantee should be even numbers only."
            OddOrEven = False
        End If
        Catch ex As Exception
            lblerror.Text = "OddOrEven:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                        sSelfPath, "OddOrEven", ErrorLevel.High)
        End Try
    End Function


    Private Sub txtCoupon_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtCoupon.TextChanged
        Try
            lblerror.Text = ""
            clearFields()
            txtCoupon.Text = SetNumberFormat(txtCoupon.Text, 2)
            ResetAll()                   ''<ashwiniP on 06-Oct-2016> : Sequence changed
            GetCommentary_DRA()

        Catch ex As Exception
            lblerror.Text = "txtCoupon_TextChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "txtCoupon_TextChanged", ErrorLevel.High)
            Throw ex
        End Try
    End Sub

    Private Sub txtStrikeDRAFCN_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtStrikeDRAFCN.TextChanged
        Try
            lblerror.Text = ""
            clearFields()
            txtStrikeDRAFCN.Text = SetNumberFormat(txtStrikeDRAFCN.Text, 2)

            Enable_Disable_Deal_Buttons()
            ResetAll()
            GetCommentary_DRA()          ''<ashwiniP on 06-Oct-2016> : Sequence changed
        Catch ex As Exception
            lblerror.Text = "txtStrikeDRAFCN_TextChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "txtStrikeDRAFCN_TextChanged", ErrorLevel.High)
            Throw ex
        End Try
    End Sub

    Private Sub txtDRAPrice_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtDRAPrice.TextChanged
        Try
            lblerror.Text = ""
            clearFields()
            If (txtDRAPrice.Text <> "") Then
                txtDRAPrice.Text = SetNumberFormat(txtDRAPrice.Text, 2)
            Else
                lblerror.Text = "Please enter valid price."
                Exit Sub
            End If
            Select Case objReadConfig.ReadConfig(dsConfig, "EQC_Follow_AtPar_Lock", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper
                Case "Y", "YES"
                    If ddlSolveForDRA.SelectedValue.ToUpper <> "PRICE" Then
                        txtUpfrontDRA.Text = SetNumberFormat((100 - Convert.ToDouble(txtDRAPrice.Text)).ToString, 2) ''Rushikesh 27Nov2015: Formating
                    Else
                    End If
                Case "N", "NO"

            End Select
            ResetAll()
            GetCommentary_DRA()

        Catch ex As Exception
            lblerror.Text = "txtDRAPrice_TextChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "txtDRAPrice_TextChanged", ErrorLevel.High)
            Throw ex
        End Try
    End Sub

    Private Sub txtOrderDRAFCN_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtOrderDRAFCN.TextChanged
        Dim strcount As Integer = 0
        Dim sQty As Integer = 0
        Try
            lblerror.Text = ""
            clearFields()
            '<AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
            If txtOrderDRAFCN.Text = "" Then
                txtOrderDRAFCN.Text = "0"
            End If
            '</AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
            If Qty_Validate(txtOrderDRAFCN.Text) = False Then
                Exit Sub
            End If
            Try
                txtOrderDRAFCN.Text = FinIQApp_Number.ConvertFormattedAmountToNumber(txtOrderDRAFCN.Text).ToString
                txtOrderDRAFCN.Text = SetNumberFormat(txtOrderDRAFCN.Text, 0) ''EQBOSDEV-228 Added by chaitali removing decimal
            Catch ex As Exception
                lblerror.Text = "Please enter valid Notional"
            End Try
            ResetAll()               ''<ashwiniP on 06-Oct-2016> : Sequence changed
            GetCommentary_DRA()

        Catch ex As Exception
            lblerror.Text = "txtOrderDRAFCN_TextChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "txtOrderDRAFCN_TextChanged", ErrorLevel.High)
            Throw ex
        End Try
    End Sub

    Protected Sub rbHistory_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles rbHistory.SelectedIndexChanged
        Try
            RestoreSolveAll()
            RestoreAll()
            If rbHistory.SelectedValue.Trim = "Quote History" Then
                ''<Nikhil M. on 20-Oct-2016: > ''<Nikhil M. on 20-Oct-2016: Added condition  for Hedge >
                If UCase(Request.QueryString("EXTLOD")) <> "HEDGE" Then
                    btnDetailsCancle_ServerClick(Nothing, Nothing)   'Added by Mohit Lalwani on 4-Feb-2016
                End If
                fill_DRA_FCN_Grid()
                makeThisGridVisible(grdDRAFCN)
            ElseIf rbHistory.SelectedValue.Trim = "Order History" Then
                ''<Nikhil M. on 20-Oct-2016: > ''<Nikhil M. on 20-Oct-2016: Added condition  for Hedge >
                If UCase(Request.QueryString("EXTLOD")) <> "HEDGE" Then
                    btnDetailsCancle_ServerClick(Nothing, Nothing)   'Added by Mohit Lalwani on 4-Feb-2016
                End If
                makeThisGridVisible(grdOrder)
                fill_OrderGrid()
                ColumnVisibility()
            End If
            upnlGrid.Update()
            ''<Nikhil M. on 20-Oct-2016: Added for Enabling the conrol for Hedge>
            If UCase(Request.QueryString("EXTLOD")) = "HEDGE" Then
                EnableDisableForOrderPoolData(Convert.ToString(Session("RePricePPName")))
            End If
        Catch ex As Exception
            lblerror.Text = "rbHistory_SelectedIndexChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "rbHistory_SelectedIndexChanged", ErrorLevel.High)
        End Try
    End Sub

    ''<AshwiniP on 19-Sept-2016>
    Public Sub getPRR(ByVal Share As String, Optional ByRef sPRR As String = "")
        Dim sSharePRR As String
        Try
            Dim dt As DataTable
            sSharePRR = ""
            If Share.Trim = "" Then
                sPRR = ""
            Else
                If (Not IsNothing(CType(Session("Share_Value"), DataTable)) AndAlso CType(Session("Share_Value"), DataTable).Rows.Count > 0) Then
                    sSharePRR = CType(Session("Share_Value"), DataTable).Select("Code = '" + Share.Trim + "'")(0)("PRR").ToString
                    If tabContainer.ActiveTabIndex = 0 Then
                    ElseIf tabContainer.ActiveTabIndex = 2 Then
                    End If
                    sPRR = sSharePRR
                Else
                    dt = New DataTable("Dummy")
                    Select Case objELNRFQ.DB_UnderlyingRiskRatingShare(Share, dt)
                        Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                            sPRR = dt.Rows(0)(0).ToString
                            ''If sPRR = "NA" Then
                            ''    sPRR = Color.Red
                            ''Else
                            ''    sPRR = Color.Green
                            ''End If
                        Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                        Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                    End Select
                  
                End If
            End If
        Catch ex As Exception
            lblerror.Text = "getPRR:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "getPRR", ErrorLevel.High)
            Throw ex
        End Try
    End Sub

    Private Sub ddlShareDRA_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlShareDRA.SelectedIndexChanged
        Dim dtBaseCCY As DataTable
        Dim sShareFlag As String
        Try
            sShareFlag = ""
	 ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
            'If ddlShareDRA.SelectedItem Is Nothing Then
            If ddlShareDRA.SelectedValue Is Nothing Then
                clearShareData()
                chkQuantoFlag_DRA()
                ddlShareDRA.Text = "Please select valid share."
                lblExchangeDRAFCN.Text = ""
                ResetAll()                           ''<ashwiniP on 06-Oct-2016> : Sequence changed
                GetCommentary_DRA()
                Exit Sub
            ElseIf ddlShareDRA.SelectedValue = "" Then
                clearShareData()
                chkQuantoFlag_DRA()
                ddlShareDRA.Text = "Please select valid share."
                lblExchangeDRAFCN.Text = ""
                ResetAll()                   ''<ashwiniP on 06-Oct-2016> : Sequence changed
                GetCommentary_DRA()

                Exit Sub
            Else
                lblExchangeDRAFCN.Text = setExchangeByShare(ddlShareDRA)
                dtBaseCCY = New DataTable("Dummy")
                lblerror.Text = ""
                clearFields()
                Dim sShareCcy1 As String = ""
                getCurrency(ddlShareDRA.SelectedValue, sShareCcy1)
                lblDRABaseCcy.Text = sShareCcy1
                Dim sSharePRR1 As String = ""
                getPRR(ddlShareDRA.SelectedValue.ToString, sSharePRR1)
                lblPRRVal.Text = sSharePRR1
                'Added by Chitralekha on 29-Sep-16
                getFlag(ddlShareDRA.SelectedValue.ToString, sShareFlag)

                If sShareFlag.ToString = "Y" Then
                    lblAdvisoryFlagVal.ForeColor = Color.Green
                    lblAdvisoryFlagVal.Text = "Yes"

                Else
                    lblAdvisoryFlagVal.ForeColor = Color.Red
                    lblAdvisoryFlagVal.Text = "No"
                End If
                'Ended by Chitralekha on 29-Sep-16
                ''If lblPRRVal.Text = "NA" Then
                ''    lblPRRVal.ForeColor = Color.Red
                ''Else
                ''    lblPRRVal.ForeColor = Color.Green
                ''End If
                ddlNoteCcy.SelectedValue = lblDRABaseCcy.Text
                Prepare_DRAFCN_Basket()

                If ddlShareDRA.SelectedItem IsNot Nothing Then
                    ddlShareDRA.Text = ddlShareDRA.SelectedItem.Text
                End If
                ResetAll()
                GetCommentary_DRA()                   ''<ashwiniP on 06-Oct-2016> : Sequence changed
                '<AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
                'getRange()
                '</AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>

                '<Added By Mohit Lalwnai on 1-Apr-2016 FA-1384>
                Dim sEQC_DealerRedirection_OnPricer As String = objReadConfig.ReadConfig(dsConfig, "EQC_DealerRedirection_OnPricer", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO")
                Select Case sEQC_DealerRedirection_OnPricer.ToUpper
                    Case "Y", "YES"
                        'sEQC_DealerLoginGroups = objReadConfig.ReadConfig(dsConfig, "EQC_DealerLoginGroups", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NONE")
                        'Dim sLoginGrp As String
                        'sLoginGrp = LoginInfoGV.Login_Info.LoginGroup

                        'If sEQC_DealerLoginGroups.Split(CChar(",")).ToList().IndexOf(sLoginGrp) > -1 Then
                        If UCase(Request.QueryString("Mode")) = "ALL" Then
                            ''User is Dealer
                        Else
                            ''User is RM
                            setRMLimit()
                        End If
                    Case "N", "NO"

                End Select
                '</Added By Mohit Lalwnai on 1-Apr-2016 FA-1384>

            End If

        Catch ex As Exception
            lblerror.Text = "ddlShareDRA_SelectedIndexChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "ddlShareDRA_SelectedIndexChanged", ErrorLevel.High)
        End Try
    End Sub

    Private Sub ddlKIType_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlKIType.SelectedIndexChanged
        Try
            lblerror.Text = ""
            clearFields()
            If ddlKIType.SelectedValue = "NONE" Then
                txtKILevel.Text = "0.00"
                txtKILevel.Enabled = False
            Else
                ''  txtKILevel.Enabled = True   ''AshwiniP on 29-Sep-2016
            End If
            ResetAll()              ''<ashwiniP on 06-Oct-2016> : Sequence changed
            GetCommentary_DRA() '<Mohit L. on 30-Nov-2015:This should also get Commentry>

        Catch ex As Exception
            lblerror.Text = "ddlKIType_SelectedIndexChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "ddlKIType_SelectedIndexChanged", ErrorLevel.High)
        End Try
    End Sub

    Private Function CheckMultiple(ByVal Number As Integer, ByVal Multiple As Integer) As Boolean
        Try
        If Number Mod Multiple = 0 Then
            CheckMultiple = True
        Else

            CheckMultiple = False
        End If
        Catch ex As Exception
            lblerror.Text = "CheckMultiple:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "CheckMultiple", ErrorLevel.High)
            Throw ex
        End Try
    End Function

    Private Function SetFrequencytype(ByVal sTenorType As String, ByVal sTenorValue As String, ByVal SFrequencyType As String) As Boolean
        Try
            Select Case sTenorType.Trim.ToUpper
                Case "MONTH"
                    Select Case SFrequencyType.Trim.ToUpper
                        Case "QUARTERLY"
                            If CheckMultiple(CInt(Val(sTenorValue)), 3) Then
                                Return True
                            Else
                                Return False
                            End If

                        Case "SEMIANNUALLY"
                            If CheckMultiple(CInt(Val(sTenorValue)), 6) Then
                                Return True
                            Else
                                Return False
                            End If
                        Case "ANNUALLY"
                            If CheckMultiple(CInt(Val(sTenorValue)), 12) Then
                                Return True
                            Else
                                Return False
                            End If

                        Case Else
                            Return True
                    End Select
                Case "WEEK"

                    Select Case SFrequencyType.Trim.ToUpper
                        Case "MONTHLY"
                            If CheckMultiple(CInt(Val(sTenorValue)), 4) Then
                                Return True
                            Else
                                Return False
                            End If

                        Case "QUARTERLY"
                            If CheckMultiple(CInt(Val(sTenorValue)), 12) Then
                                Return True
                            Else
                                Return False
                            End If

                        Case "SEMIANNUALLY"
                            If CheckMultiple(CInt(Val(sTenorValue)), 24) Then
                                Return True
                            Else
                                Return False
                            End If
                        Case "ANNUALLY"
                            If CheckMultiple(CInt(Val(sTenorValue)), 48) Then
                                Return True
                            Else
                                Return False
                            End If

                        Case "FORTNIGHTLY"
                            If CheckMultiple(CInt(Val(sTenorValue)), 2) Then
                                Return True
                            Else
                                Return False
                            End If
                        Case Else
                            Return True
                    End Select
                Case "YEAR"
                    Return True
                Case Else
                    Return False
            End Select
        Catch ex As Exception
            lblerror.Text = "SetFrequencytype:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "SetFrequencyType", ErrorLevel.High)
            Throw ex
        End Try
    End Function

    Private Sub txtKILevel_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtKILevel.TextChanged
        Try
            lblerror.Text = ""
            clearFields()
            txtKILevel.Text = SetNumberFormat(txtKILevel.Text, 2)
            ResetAll()                  ''<ashwiniP on 06-Oct-2016> : Sequence changed
            GetCommentary_DRA()

        Catch ex As Exception
            lblerror.Text = "txtKILevel_TextChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "txtKILevel_TextChanged", ErrorLevel.High)
            Throw ex
        End Try
    End Sub

    Private Sub txtKOLevel_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtKOLevel.TextChanged
        Try
            lblerror.Text = ""
            clearFields()
            txtKOLevel.Text = SetNumberFormat(txtKOLevel.Text, 2)
            ResetAll()              ''<ashwiniP on 06-Oct-2016> : Sequence changed
            GetCommentary_DRA()

        Catch ex As Exception
            lblerror.Text = "txtKOLevel_TextChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "txtKOLevel_TextChanged", ErrorLevel.High)
            Throw ex
        End Try
    End Sub

    '<AvinashG. on 20-Oct-2015: Dead Function>
    'Public Sub stop_timer()
    '    Try


    '        'lblShare1.Text = ""
    '        'lblShare2.Text = ""
    '        'lblShare3.Text = ""
    '        lblMsgPriceProvider.Text = ""
    '        lblerror.Text = ""
    '        lblJPMPrice.Text = ""
    '        lblCSPrice.Text = ""
    '        lblHSBCPrice.Text = ""
    '        lblBNPPPrice.Text = ""
    '        lblUBSPrice.Text = ""
    '        lblMSPrice.Text = ""
    '        btnJPMprice.Text = "Price"
    '        btnJPMDeal.CssClass = "btnDisabled"
    '        btnCSPrice.Text = "Price"
    '        btnCSDeal.CssClass = "btnDisabled"
    '        btnHSBCPrice.Text = "Price"
    '        btnHSBCDeal.CssClass = "btnDisabled"
    '        btnBNPPPrice.Text = "Price"
    '        btnBNPPDeal.CssClass = "btnDisabled"
    '        btnUBSPrice.Text = "Price"
    '        btnUBSDeal.CssClass = "btnDisabled"
    '        btnMSPrice.Text = "Price"
    '        btnMSDeal.CssClass = "btnDisabled"
    '        Dim strJavaScriptStopTimer As New StringBuilder
    '        If Val(lblTimerHSBC.Text) > 0 Then
    '            'System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "js2", "StopTimer('" + lblTimerHSBC.ClientID + "','" + btnHSBCDeal.ClientID + "');", True)
    '            strJavaScriptStopTimer.AppendLine("StopTimer('" + lblTimerHSBC.ClientID + "','" + btnHSBCDeal.ClientID + "');")
    '            btnHSBCPrice.Enabled = True
    '            btnHSBCPrice.CssClass = "btn"
    '        End If
    '        If Val(lblTimerCS.Text) > 0 Then
    '            'System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "js2+1", "StopTimer('" + lblTimerCS.ClientID + "','" + btnCSDeal.ClientID + "');", True)
    '            strJavaScriptStopTimer.AppendLine("StopTimer('" + lblTimerCS.ClientID + "','" + btnCSDeal.ClientID + "');")
    '            btnCSPrice.Enabled = True
    '            btnCSPrice.CssClass = "btn"
    '        End If
    '        If Val(lblUBSTimer.Text) > 0 Then
    '            '   System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "js2+2", "StopTimer('" + lblUBSTimer.ClientID + "','" + btnUBSDeal.ClientID + "');", True)
    '            strJavaScriptStopTimer.AppendLine("StopTimer('" + lblUBSTimer.ClientID + "','" + btnUBSDeal.ClientID + "');")
    '            btnUBSPrice.Enabled = True
    '            btnUBSPrice.CssClass = "btn"
    '        End If
    '        If Val(lblTimerBNPP.Text) > 0 Then
    '            'System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "js2+3", "StopTimer('" + lblTimerBNPP.ClientID + "','" + btnBNPPDeal.ClientID + "');", True)
    '            strJavaScriptStopTimer.AppendLine("StopTimer('" + lblTimerBNPP.ClientID + "','" + btnBNPPDeal.ClientID + "');")
    '            btnBNPPPrice.Enabled = True
    '            btnBNPPPrice.CssClass = "btn"
    '        End If
    '        If Val(lblTimer.Text) > 0 Then
    '            'System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "js2+4", "StopTimer('" + lblTimer.ClientID + "','" + btnJPMDeal.ClientID + "');", True)
    '            strJavaScriptStopTimer.AppendLine("StopTimer('" + lblTimer.ClientID + "','" + btnJPMDeal.ClientID + "');")
    '            btnJPMprice.Enabled = True
    '            btnJPMprice.CssClass = "btn"
    '        End If
    '        If Val(lblTimerMS.Text) > 0 Then
    '            'System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "js2+5", "StopTimer('" + lblTimerMS.ClientID + "','" + btnMSDeal.ClientID + "');", True)
    '            strJavaScriptStopTimer.AppendLine("StopTimer('" + lblTimerMS.ClientID + "','" + btnMSDeal.ClientID + "');")
    '            btnMSPrice.Enabled = True
    '            btnMSPrice.CssClass = "btn"
    '        End If

    '        If strJavaScriptStopTimer.Length > 0 Then
    '            System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "strJavaScriptStopTimer", strJavaScriptStopTimer.ToString, True)
    '        End If

    '        ResetAll()
    '    Catch ex As Exception
    '        '<AvinashG. on 13-Aug-2014: Not used>lblerror.Text = ex.Message.ToString
    '        lblerror.Text = "Stop_timer:Error occurred in processing."
    '        LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
    '                     sSelfPath, "Stop_timer", ErrorLevel.High)
    '        Throw ex
    '    End Try
    'End Sub
    '</AvinashG. on 20-Oct-2015: Dead Function>

    Private Sub Stop_timer_Only()
        Try
        Dim strJavaScriptStopTimerOnly As New StringBuilder
        If Val(lblTimerHSBC.Text) > 0 Then
                strJavaScriptStopTimerOnly.AppendLine("StopTimer('" + lblTimerHSBC.ClientID + "','" + btnHSBCDeal.ClientID + "');")
            btnHSBCPrice.Enabled = True
            btnHSBCPrice.CssClass = "btn"
        End If

        If Val(lblTimerCS.Text) > 0 Then
                strJavaScriptStopTimerOnly.AppendLine("StopTimer('" + lblTimerCS.ClientID + "','" + btnCSDeal.ClientID + "');")
            btnCSPrice.Enabled = True
            btnCSPrice.CssClass = "btn"
        End If

        If Val(lblUBSTimer.Text) > 0 Then
                strJavaScriptStopTimerOnly.AppendLine("StopTimer('" + lblUBSTimer.ClientID + "','" + btnUBSDeal.ClientID + "');")
            btnUBSPrice.Enabled = True
            btnUBSPrice.CssClass = "btn"
        End If

            If Val(lblTimerBNPP.Text) > 0 Then
                strJavaScriptStopTimerOnly.AppendLine("StopTimer('" + lblTimerBNPP.ClientID + "','" + btnBNPPDeal.ClientID + "');")
                btnBNPPPrice.Enabled = True
                btnBNPPPrice.CssClass = "btn"
            End If

        If Val(lblTimer.Text) > 0 Then
                strJavaScriptStopTimerOnly.AppendLine("StopTimer('" + lblTimer.ClientID + "','" + btnJPMDeal.ClientID + "');")
            btnJPMprice.Enabled = True
            btnJPMprice.CssClass = "btn"
        End If

            If Val(lblTimerBAML.Text) > 0 Then
                strJavaScriptStopTimerOnly.AppendLine("StopTimer('" + lblTimerBAML.ClientID + "','" + btnBAMLDeal.ClientID + "');")
                btnBAMLPrice.Enabled = True
                btnBAMLPrice.CssClass = "btn"
            End If

            If Val(lblTimerDBIB.Text) > 0 Then
                strJavaScriptStopTimerOnly.AppendLine("StopTimer('" + lblTimerDBIB.ClientID + "','" + btnDBIBDeal.ClientID + "');")
                btnDBIBPrice.Enabled = True
                btnDBIBPrice.CssClass = "btn"
            End If

            If Val(lblTimerOCBC.Text) > 0 Then
                strJavaScriptStopTimerOnly.AppendLine("StopTimer('" + lblTimerOCBC.ClientID + "','" + btnOCBCDeal.ClientID + "');")
                btnOCBCPrice.Enabled = True
                btnOCBCPrice.CssClass = "btn"
            End If

            If Val(lblTimerCITI.Text) > 0 Then
                strJavaScriptStopTimerOnly.AppendLine("StopTimer('" + lblTimerCITI.ClientID + "','" + btnCITIDeal.ClientID + "');")
                btnCITIPrice.Enabled = True
                btnCITIPrice.CssClass = "btn"
            End If

            If Val(lblTimerLEONTEQ.Text) > 0 Then
                strJavaScriptStopTimerOnly.AppendLine("StopTimer('" + lblTimerLEONTEQ.ClientID + "','" + btnLEONTEQDeal.ClientID + "');")
                btnLEONTEQPrice.Enabled = True
                btnLEONTEQPrice.CssClass = "btn"
            End If
            If Val(lblTimerCOMMERZ.Text) > 0 Then
                strJavaScriptStopTimerOnly.AppendLine("StopTimer('" + lblTimerCOMMERZ.ClientID + "','" + btnCOMMERZDeal.ClientID + "');")
                btnCOMMERZPrice.Enabled = True
                btnCOMMERZPrice.CssClass = "btn"
            End If
            If strJavaScriptStopTimerOnly.Length > 0 Then
                System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "strJavaScriptStopTimerOnly", strJavaScriptStopTimerOnly.ToString, True)
            End If
        Catch ex As Exception
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "Stop_timer_Only", ErrorLevel.High)
        End Try
    End Sub


    Public Sub Enable_Disable_Deal_Buttons()
        Try
            btnJPMprice.Text = "Price"
            btnHSBCPrice.Text = "Price"
            btnCSPrice.Text = "Price"
            btnUBSPrice.Text = "Price"
            btnBNPPPrice.Text = "Price"
            btnBAMLPrice.Text = "Price"
            btnOCBCPrice.Text = "Price"
            btnCITIPrice.Text = "Price"
            btnLEONTEQPrice.Text = "Price"
            btnCOMMERZPrice.Text = "Price"
            btnDBIBPrice.Text = "Price"
            btnJPMprice.Enabled = True
            btnHSBCPrice.Enabled = True
            btnCSPrice.Enabled = True
            btnUBSPrice.Enabled = True
            btnBNPPPrice.Enabled = True
            btnBAMLPrice.Enabled = True
            btnOCBCPrice.Enabled = True
            btnCITIPrice.Enabled = True
            btnLEONTEQPrice.Enabled = True
            btnCOMMERZPrice.Enabled = True
            btnDBIBPrice.Enabled = True
            btnJPMprice.CssClass = "btn"
            btnHSBCPrice.CssClass = "btn"
            btnCSPrice.CssClass = "btn"
            btnUBSPrice.CssClass = "btn"
            btnBNPPPrice.CssClass = "btn"
            btnBAMLPrice.CssClass = "btn"
            btnOCBCPrice.CssClass = "btn"
            btnCITIPrice.CssClass = "btn"
            btnLEONTEQPrice.CssClass = "btn"
            btnCOMMERZPrice.CssClass = "btn"
            btnDBIBPrice.CssClass = "btn"
            btnJPMDeal.CssClass = "btnDisabled"
            btnHSBCDeal.CssClass = "btnDisabled"
            btnCSDeal.CssClass = "btnDisabled"
            btnUBSDeal.CssClass = "btnDisabled"
            btnBNPPDeal.CssClass = "btnDisabled"
            btnBAMLDeal.CssClass = "btnDisabled"
            btnOCBCDeal.CssClass = "btnDisabled"
            btnCITIDeal.CssClass = "btnDisabled"
            btnLEONTEQDeal.CssClass = "btnDisabled"
            btnCOMMERZDeal.CssClass = "btnDisabled"
            btnDBIBDeal.CssClass = "btnDisabled"
            btnBNPPDeal.Visible = False
            btnBAMLDeal.Visible = False
            btnCSDeal.Visible = False
            btnJPMDeal.Visible = False
            btnHSBCDeal.Visible = False
            btnUBSDeal.Visible = False
            btnOCBCDeal.Visible = False
            btnCITIDeal.Visible = False
            btnLEONTEQDeal.Visible = False
            btnCOMMERZDeal.Visible = False
            btnDBIBDeal.Visible = False
            txtOrderDRAFCN.Enabled = True
            DealConfirmPopup.Visible = False

            btnBAMLDoc.Visible = False
            btnBNPPDoc.Visible = False
            btnCITIDoc.Visible = False
            btnCOMMERZDoc.Visible = False
            btnCSDoc.Visible = False
            btnDBIBDoc.Visible = False
            btnHSBCDoc.Visible = False
            btnJPMDoc.Visible = False
            btnLEONTEQDoc.Visible = False
            btnOCBCDoc.Visible = False
            btnUBSDoc.Visible = False

            UPanle11111.Update()
        Catch ex As Exception
            lblerror.Text = "Enable_Disable_Deal_Buttons:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "Enable_Disable_Deal_Buttons", ErrorLevel.High)
            Throw ex

        End Try
    End Sub

#End Region

#Region "Populate XML"

  
    'Public Sub Get_DRAFCNRFQData_TOXML(ByVal PP_ID As String)
    '    Dim dtQuoteCode As DataTable
    '    Dim strQuoteId As String = String.Empty
    '    Try
    '        dtQuoteCode = New DataTable("Quote")
    '        udtStructured_Product_Tranche = New Structured_Product_Tranche_ELN
    '        strEntityName = LoginInfoGV.Login_Info.EntityName
    '        strEntityId = LoginInfoGV.Login_Info.EntityID.ToString
    '        Select Case objELNRFQ.DB_Get_Quote_ID(dtQuoteCode)
    '            Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
    '                ER_QuoteRequestId = dtQuoteCode.Rows(0)(0).ToString
    '                Session.Add("Quote_ID", ER_QuoteRequestId)
    '            Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
    '                lblerror.Text = "No record(s) for price provider is found."
    '        End Select
    '        Call setUDTValuesFromForm(udtStructured_Product_Tranche)
    '        If Write_DRAFCN_RFQData_TOXML(PP_ID, ER_QuoteRequestId, LoginInfoGV.Login_Info.LoginId, strEntityId, ddlSolveForDRA.SelectedValue, udtStructured_Product_Tranche, StrnoteRFQXML) = True Then
    '            Select Case objELNRFQ.DB_Insert_IntoDRAFCN_RFQ(CStr(StrnoteRFQXML))
    '                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
    '                    Session.Add("ER_ID", ER_QuoteRequestId)
    '                Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
    '            End Select
    '        End If
    '    Catch ex As Exception
    '        lblerror.Text = "Get_DRAFCNRFQData_TOXML:Error occurred in processing."
    '        LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
    '                     sSelfPath, "Get_DRAFCNRFQData_TOXML", ErrorLevel.High)
    '        Throw ex
    '    End Try
    'End Sub

    'Public Function Write_DRAFCN_RFQData_TOXML(ByVal PP_ID As String, _
    '                                    ByVal strQuoteId As String, _
    '                                    ByVal strEntityName As String, _
    '                                    ByVal strEntityId As String, _
    '                                    ByVal strDRAType As String, _
    '                                    ByRef udtStructured_Product_Tranche As Structured_Product_Tranche_ELN, _
    '                                    ByRef o_strXMLNote_RFQ As String) As Boolean

    '    Dim strDRAFCNXMLRFQ As StringBuilder
    '    Dim dtQuote As New DataTable
    '    Try
    '        strDRAFCNXMLRFQ = New StringBuilder
    '        With udtStructured_Product_Tranche
    '            Dim sProductDefinition As String = "<DRAFCN xmlns=""http://www.abcdz.com/StructuredProducts/1.0""><Type>" & udtStructured_Product_Tranche.strELNType & "</Type><StrikePercentage>" & udtStructured_Product_Tranche.dblStrike1 & "</StrikePercentage><InterBankPrice Solve=""true"">0.0</InterBankPrice><Underlyings><Underlying><UnderlyingCode Type=""RIC"">" & udtStructured_Product_Tranche.strUnderlyingCode & "</UnderlyingCode></Underlying></Underlyings></DRAFCN>"
    '            strDRAFCNXMLRFQ.Append("<tradeDetails>")
    '            strDRAFCNXMLRFQ.Append("<quoteDetails>")
    '            strDRAFCNXMLRFQ.Append("<ER_PP_ID>" & PP_ID & "</ER_PP_ID>")
    '            strDRAFCNXMLRFQ.Append("<ER_Type>" & udtStructured_Product_Tranche.strELNType & "</ER_Type>")
    '            strDRAFCNXMLRFQ.Append("<ER_StrikePercentage>" & udtStructured_Product_Tranche.dblStrike2 & "</ER_StrikePercentage> ")
    '            strDRAFCNXMLRFQ.Append("<ER_InterBankPrice>" & udtStructured_Product_Tranche.strPrice & "</ER_InterBankPrice>")
    '            strDRAFCNXMLRFQ.Append("<ER_InterBankPriceSolve_YN>Y</ER_InterBankPriceSolve_YN>")
    '            strDRAFCNXMLRFQ.Append("<ER_UnderlyingCode_Type>" & udtStructured_Product_Tranche.strAssetclass & "</ER_UnderlyingCode_Type>")
    '            strDRAFCNXMLRFQ.Append("<ER_UnderlyingCode>" & udtStructured_Product_Tranche.strUnderlyingCode & " </ER_UnderlyingCode>")
    '            strDRAFCNXMLRFQ.Append("<ER_TenorType>" & udtStructured_Product_Tranche.strDRAFCNTenorType & "</ER_TenorType>")
    '            strDRAFCNXMLRFQ.Append("<ER_Tenor>" & udtStructured_Product_Tranche.inttenorDRA & "</ER_Tenor>")
    '            strDRAFCNXMLRFQ.Append("<ER_QuoteRequestId>" & strQuoteId & "</ER_QuoteRequestId>")
    '            strDRAFCNXMLRFQ.Append("<ER_SecurityDescription>DRA/FCN</ER_SecurityDescription>")
    '            strDRAFCNXMLRFQ.Append("<ER_QuoteType>0</ER_QuoteType>")
    '            strDRAFCNXMLRFQ.Append("<ER_BuySell>Buy</ER_BuySell>")
    '            strDRAFCNXMLRFQ.Append("<ER_CashOrderQuantity>" & udtStructured_Product_Tranche.strOrderQty & "</ER_CashOrderQuantity>")
    '            strDRAFCNXMLRFQ.Append("<ER_CashCurrency>" & udtStructured_Product_Tranche.strCurrencyDRA & "</ER_CashCurrency>")
    '            strDRAFCNXMLRFQ.Append("<ER_TransactionTime>" & DateTime.Now.ToString("dd-MMM-yyyy hh:mm:ss.fff tt") & "</ER_TransactionTime>")
    '            strDRAFCNXMLRFQ.Append("<ER_ProductDefinition>" & sProductDefinition & "</ER_ProductDefinition>")
    '            strDRAFCNXMLRFQ.Append("<ER_Text>2012_QR12</ER_Text>")
    '            strDRAFCNXMLRFQ.Append("<ER_Symbol></ER_Symbol>")
    '            strDRAFCNXMLRFQ.Append("<ER_Created_By>" & strEntityName & "</ER_Created_By>")
    '            strDRAFCNXMLRFQ.Append("<ER_Exchange>" & udtStructured_Product_Tranche.strExchangeDRA & "</ER_Exchange>")
    '            strDRAFCNXMLRFQ.Append("<ER_Quote_Request_YN>Y</ER_Quote_Request_YN>")
    '            strDRAFCNXMLRFQ.Append("<ER_Entity_ID>" & strEntityId & "</ER_Entity_ID>")
    '            strDRAFCNXMLRFQ.Append("<ER_GuaranteedDuration>" & udtStructured_Product_Tranche.strGuaranteedDuration & "</ER_GuaranteedDuration>")
    '            strDRAFCNXMLRFQ.Append("<ER_GuaranteedDurationType>" & Replace(udtStructured_Product_Tranche.strGuaranteedDurationType, "s", "") & "</ER_GuaranteedDurationType>")
    '            strDRAFCNXMLRFQ.Append("<ER_KI_Type>" & udtStructured_Product_Tranche.strKIType & "</ER_KI_Type>")
    '            strDRAFCNXMLRFQ.Append("<ER_KI_Level>" & udtStructured_Product_Tranche.strKILevel & "</ER_KI_Level>")
    '            strDRAFCNXMLRFQ.Append("<ER_KI_ObservationFrequency>" & udtStructured_Product_Tranche.strKIObsFreq & "</ER_KI_ObservationFrequency>")
    '            strDRAFCNXMLRFQ.Append("<ER_CouponPercentage>" & udtStructured_Product_Tranche.strCoupon & "</ER_CouponPercentage>")
    '            strDRAFCNXMLRFQ.Append("<ER_KO_Type>" & udtStructured_Product_Tranche.strKOType & "</ER_KO_Type>")
    '            strDRAFCNXMLRFQ.Append("<ER_KO_Level>" & udtStructured_Product_Tranche.strKOLevel & "</ER_KO_Level>")
    '            strDRAFCNXMLRFQ.Append("<ER_SolveFor>" & udtStructured_Product_Tranche.strSolveFor & "</ER_SolveFor>")
    '            strDRAFCNXMLRFQ.Append("<ER_OTC_YN>N</ER_OTC_YN>")
    '            strDRAFCNXMLRFQ.Append("<ER_Template_ID>" & udtStructured_Product_Tranche.lngTemplateId & "</ER_Template_ID>")
    '            If strDRAType = "CONVERSION_STRIKE" Then
    '                strDRAFCNXMLRFQ.Append("<EP_OfferPrice>" & udtStructured_Product_Tranche.strPrice1 & "</EP_OfferPrice>")
    '                strDRAFCNXMLRFQ.Append("<EP_CouponPercentage>" & udtStructured_Product_Tranche.strCoupon1 & "</EP_CouponPercentage>")
    '            ElseIf strDRAType = "COUPON" Then
    '                strDRAFCNXMLRFQ.Append("<EP_StrikePercentage>" & udtStructured_Product_Tranche.dblStrike2 & "</EP_StrikePercentage>")
    '                strDRAFCNXMLRFQ.Append("<EP_OfferPrice>" & udtStructured_Product_Tranche.strPrice1 & "</EP_OfferPrice>")
    '            Else
    '                strDRAFCNXMLRFQ.Append("<EP_StrikePercentage>" & udtStructured_Product_Tranche.dblStrike2 & "</EP_StrikePercentage>")
    '                strDRAFCNXMLRFQ.Append("<EP_CouponPercentage>" & udtStructured_Product_Tranche.strCoupon1 & "</EP_CouponPercentage>")
    '            End If
    '            strDRAFCNXMLRFQ.Append("<ER_EntityName>" & udtStructured_Product_Tranche.strEntityName & "</ER_EntityName>")
    '            strDRAFCNXMLRFQ.Append("<ER_RFQ_RMName>" & udtStructured_Product_Tranche.strRFQRMName & "</ER_RFQ_RMName>")
    '            strDRAFCNXMLRFQ.Append("<ER_EmailId>" & udtStructured_Product_Tranche.strEmailId & "</ER_EmailId>")
    '            strDRAFCNXMLRFQ.Append("<ER_Branch>" & udtStructured_Product_Tranche.strBranch & "</ER_Branch>")
    '            strDRAFCNXMLRFQ.Append("<EP_RM_Margin>" & udtStructured_Product_Tranche.dblRMMargin & "</EP_RM_Margin>")
    '            strDRAFCNXMLRFQ.Append("<ER_Upfront>" & udtStructured_Product_Tranche.strUpfront.ToString & "</ER_Upfront>")
    '            strDRAFCNXMLRFQ.Append("<ER_RFQ_Source>MONOTAB_PRICER</ER_RFQ_Source>") '<AvinashG. on 28-Dec-2015: EQBOSDEV-195 - Add RFQ Source to web application>
    '            strDRAFCNXMLRFQ.Append("</quoteDetails>")
    '            strDRAFCNXMLRFQ.Append("</tradeDetails>")
    '        End With
    '        o_strXMLNote_RFQ = strDRAFCNXMLRFQ.ToString
    '        Write_DRAFCN_RFQData_TOXML = True
    '    Catch ex As Exception
    '        lblerror.Text = "Write_DRAFCN_RFQData_TOXML:Error occurred in processing."
    '        LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
    '                     sSelfPath, "Write_DRAFCN_RFQData_TOXML", ErrorLevel.High)

    '        Throw ex
    '    End Try
    'End Function

    'Private Sub setUDTValuesFromForm(ByRef udtStructured_Product_Tranche As Structured_Product_Tranche_ELN)
    '    Dim strFixingDate As String = String.Empty
    '    Try
    '        udtStructured_Product_Tranche.dblRMMargin = CDbl(txtUpfrontDRA.Text)
    '        udtStructured_Product_Tranche.strELNType = ddlDRAType.SelectedValue
    '        udtStructured_Product_Tranche.dblStrike2 = Val(txtStrikeDRAFCN.Text)
    '        udtStructured_Product_Tranche.strDRAFCNTenorType = ddlTenorTypeDRA.SelectedValue
    '        udtStructured_Product_Tranche.inttenorDRA = CInt(Val(txtTenorDRA.Text))
    '        udtStructured_Product_Tranche.strCurrencyDRA = lblDRABaseCcy.Text
    '        udtStructured_Product_Tranche.strExchangeDRA = CType(Session("BasketExchange"), String)
    '        udtStructured_Product_Tranche.strAssetclass = "RIC"
    '        udtStructured_Product_Tranche.strKILevel = Val(txtKILevel.Text)
    '        udtStructured_Product_Tranche.strKOLevel = Val(txtKOLevel.Text)
    '        udtStructured_Product_Tranche.strSolveFor = ddlSolveForDRA.SelectedValue
    '        udtStructured_Product_Tranche.strOTCYN = Convert.ToString(Session("OTC_Value"))
    '        udtStructured_Product_Tranche.strKIObsFreq = ddlKIFrequency.SelectedValue
    '        If ddlDRAType.SelectedValue.Trim.ToUpper = "DRA" Then
    '            udtStructured_Product_Tranche.strGuaranteedDuration = DRA_Get_NumberOf_Months_From_KIFrequency_GU_Periods().ToString
    '            udtStructured_Product_Tranche.strGuaranteedDurationType = "MONTH"
    '        Else
    '            udtStructured_Product_Tranche.strGuaranteedDuration = ""
    '            udtStructured_Product_Tranche.strGuaranteedDurationType = ""
    '        End If
    '        udtStructured_Product_Tranche.lngTemplateId = Convert.ToString(Session("Template_Code"))
    '        udtStructured_Product_Tranche.strOrderQty = Replace(txtOrderDRAFCN.Text, ",", "") ''
    '        udtStructured_Product_Tranche.strPrice = Val(txtDRAPrice.Text)
    '        udtStructured_Product_Tranche.strCoupon = Val(txtCoupon.Text)
    '        If flag = "I" Then
    '            udtStructured_Product_Tranche.strRemark = Convert.ToString(Session("Quote_ID"))
    '        End If
    '        If chkKO.Checked = True Then
    '            udtStructured_Product_Tranche.strKOType = "European"
    '        End If
    '        If chkKI.Checked = True Then
    '            udtStructured_Product_Tranche.strKIType = ddlKIType.SelectedValue
    '        Else
    '            udtStructured_Product_Tranche.strKIType = "none"
    '        End If
    '        udtStructured_Product_Tranche.strCurrencyDRA = ddlNoteCcy.SelectedValue
    '        If txtBasketShares.Text = "" Then
    '            udtStructured_Product_Tranche.strUnderlyingCode = ddlShareDRA.SelectedValue  ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
    '        Else
    '            udtStructured_Product_Tranche.strUnderlyingCode = txtBasketShares.Text
    '        End If
    '        If ddlSolveForDRA.SelectedValue = "CONVERSION_STRIKE" Then
    '            udtStructured_Product_Tranche.strPrice1 = Val(txtDRAPrice.Text)
    '            udtStructured_Product_Tranche.strCoupon1 = Val(txtCoupon.Text)
    '        ElseIf ddlSolveForDRA.SelectedValue = "COUPON" Then
    '            udtStructured_Product_Tranche.dblStrike1 = Val(txtStrikeDRAFCN.Text)
    '            udtStructured_Product_Tranche.strPrice1 = Val(txtDRAPrice.Text)
    '        Else
    '            udtStructured_Product_Tranche.dblStrike1 = Val(txtStrikeDRAFCN.Text)
    '            udtStructured_Product_Tranche.strCoupon1 = Val(txtCoupon.Text)
    '        End If


    '        '<Changed by Mohit Lalwani on 8-Dec-2015>
    '        udtStructured_Product_Tranche.strUpfront = Val(txtUpfrontDRA.Text) * 100
    '        '</Changed by Mohit Lalwani  on 8-Dec-2015>
    '        udtStructured_Product_Tranche.strEntityName = ddlentity.SelectedItem.Text
    '        udtStructured_Product_Tranche.strRFQRMName = ddlRFQRM.SelectedItem.Value
    '        Dim strLoginUserEmailID As String
    '        strLoginUserEmailID = objELNRFQ.web_Get_EmailOf_Login_User(LoginInfoGV.Login_Info.LoginId)
    '        udtStructured_Product_Tranche.strEmailId = strLoginUserEmailID
    '        udtStructured_Product_Tranche.strBranch = lblbranch.Text
    '    Catch ex As Exception
    '        lblerror.Text = "setUDTValuesFromForm:Error occurred in processing."
    '        LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
    '                     sSelfPath, "setUDTValuesFromForm", ErrorLevel.High)
    '        Throw ex
    '    End Try
    'End Sub

#End Region

#Region "Check For Price,Strike,Coupon,Upfront"

    Public Function set_DRAFCN_ClientPrice(ByVal dblIssuerPrice As Double, ByVal strIssuer As String) As Boolean
        Try
        Dim dblClientPrice As Double = 0
        dblClientPrice = dblIssuerPrice + CDbl(txtUpfrontDRA.Text)
        Select Case UCase(strIssuer)
            Case "JPM"
                lblJPMClientPrice.Text = SetNumberFormat(dblClientPrice, 2)
                lblJPMClientYield.Text = txtUpfrontDRA.Text
            Case "CS"
                lblCSClientPrice.Text = SetNumberFormat(dblClientPrice, 2)
                lblCSClientYield.Text = txtUpfrontDRA.Text
            Case "UBS"
                lblUBSClientPrice.Text = SetNumberFormat(dblClientPrice, 2)
                lblUBSClientYield.Text = txtUpfrontDRA.Text
            Case "HSBC"
                lblHSBCClientPrice.Text = SetNumberFormat(dblClientPrice, 2)
                lblHSBCClientYield.Text = txtUpfrontDRA.Text
                Case "BAML"
                    lblBAMLClientPrice.Text = SetNumberFormat(dblClientPrice, 2)
                    lblBAMLClientYield.Text = txtUpfrontDRA.Text
                Case "BNPP"
                    lblBNPPClientPrice.Text = SetNumberFormat(dblClientPrice, 2)
                    lblBNPPClientYield.Text = txtUpfrontDRA.Text
                Case "DB"
                    lblDBIBClientPrice.Text = SetNumberFormat(dblClientPrice, 2)
                    lblDBIBClientYield.Text = txtUpfrontDRA.Text
                Case "OCBC"
                    lblOCBCClientPrice.Text = SetNumberFormat(dblClientPrice, 2)
                    lblOCBCClientYield.Text = txtUpfrontDRA.Text
                Case "CITI"
                    lblCITIClientPrice.Text = SetNumberFormat(dblClientPrice, 2)
                    lblCITIClientYield.Text = txtUpfrontDRA.Text
                Case "LEONTEQ"
                    lblLEONTEQClientPrice.Text = SetNumberFormat(dblClientPrice, 2)
                    lblLEONTEQClientYield.Text = txtUpfrontDRA.Text
                Case "COMMERZ"
                    lblCOMMERZClientPrice.Text = SetNumberFormat(dblClientPrice, 2)
                    lblCOMMERZClientYield.Text = txtUpfrontDRA.Text
            End Select
        Return True
        Catch ex As Exception
            lblerror.Text = "set_DRAFCN_ClientPrice:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "set_DRAFCN_ClientPrice", ErrorLevel.High)
            Throw ex
        End Try
    End Function

  
    Public Function set_DRA_AllIssuerPrice_ClientYield_ClientPrice(ByVal dblIssuerPrice As Double) As Boolean
        Try
        Dim dblClientPrice As Double = 0
        dblClientPrice = dblIssuerPrice + CDbl(txtUpfrontDRA.Text)
        Dim strClientYield As String = ""
        strClientYield = txtUpfrontDRA.Text
        lblJPMClientPrice.Text = SetNumberFormat(dblClientPrice, 2)
        lblJPMClientYield.Text = strClientYield
        lblCSClientPrice.Text = SetNumberFormat(dblClientPrice, 2)
        lblCSClientYield.Text = strClientYield
        lblUBSClientPrice.Text = SetNumberFormat(dblClientPrice, 2)
        lblUBSClientYield.Text = strClientYield
        lblHSBCClientPrice.Text = SetNumberFormat(dblClientPrice, 2)
        lblHSBCClientYield.Text = strClientYield
            lblBAMLClientPrice.Text = SetNumberFormat(dblClientPrice, 2)
            lblBAMLClientYield.Text = strClientYield
            lblBNPPClientPrice.Text = SetNumberFormat(dblClientPrice, 2)
            lblBNPPClientYield.Text = strClientYield
            lblDBIBClientPrice.Text = SetNumberFormat(dblClientPrice, 2)
            lblDBIBClientYield.Text = strClientYield
            lblOCBCClientPrice.Text = SetNumberFormat(dblClientPrice, 2)
            lblOCBCClientYield.Text = strClientYield
            lblCITIClientPrice.Text = SetNumberFormat(dblClientPrice, 2)
            lblCITIClientYield.Text = strClientYield
            lblLEONTEQClientPrice.Text = SetNumberFormat(dblClientPrice, 2)
            lblLEONTEQClientYield.Text = strClientYield
            lblCOMMERZClientPrice.Text = SetNumberFormat(dblClientPrice, 2)
            lblCOMMERZClientYield.Text = strClientYield
        pnlReprice.Update()
        Return True
        Catch ex As Exception
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "set_DRA_AllIssuerPrice_ClientYield_ClientPrice", ErrorLevel.High)
        End Try
    End Function
    Public Function setToZero_ELN_AllIssuerPrice_ClientYield_ClientPrice(Optional ByVal activeTabIndex As Integer = 0) As Boolean
        Try
            lblJPMPrice.Text = ""
            lblJPMClientPrice.Text = ""
            lblJPMClientYield.Text = ""
            lblCSPrice.Text = ""
            lblCSClientPrice.Text = ""
            lblCSClientYield.Text = ""
            lblUBSPrice.Text = ""
            lblUBSClientPrice.Text = ""
            lblUBSClientYield.Text = ""
            lblHSBCPrice.Text = ""
            lblHSBCClientPrice.Text = ""
            lblHSBCClientYield.Text = ""
            lblBAMLPrice.Text = "" ''"0.0"
            lblBAMLClientPrice.Text = "" ''"0.0"
            lblBAMLClientYield.Text = "" ''"0.0"
            lblBNPPPrice.Text = ""
            lblBNPPClientPrice.Text = ""
            lblBNPPClientYield.Text = ""
            lblDBIBPrice.Text = "" ''"" ''"0.0"
            lblDBIBClientPrice.Text = "" ''"" ''"0.0"
            lblDBIBClientYield.Text = "" ''"" ''"0.0"

            lblOCBCPrice.Text = "" ''"0.0"
            lblOCBCClientPrice.Text = "" ''"0.0"
            lblOCBCClientYield.Text = "" ''"0.0"

            lblCITIPrice.Text = "" ''"0.0"
            lblCITIClientPrice.Text = "" ''"0.0"
            lblCITIClientYield.Text = "" ''"0.0"

            lblLEONTEQPrice.Text = "" ''"0.0"
            lblLEONTEQClientPrice.Text = "" ''"0.0"
            lblLEONTEQClientYield.Text = "" ''"0.0"

            lblCOMMERZPrice.Text = "" ''"0.0"
            lblCOMMERZClientPrice.Text = "" ''"0.0"
            lblCOMMERZClientYield.Text = "" ''"0.0"
            pnlReprice.Update()
            Return True
        Catch ex As Exception
            lblerror.Text = "setToZero_ELN_AllIssuerPrice_ClientYield_ClientPrice:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "setToZero_ELN_AllIssuerPrice_ClientYield_ClientPrice", ErrorLevel.High)
            Throw ex
        End Try
    End Function


#End Region

#Region "Deal"

    Public Function chk_DealValidations() As Boolean
        Dim dtRangeLimit As DataTable
        Dim dt As DataTable
        Dim sPPCode As String
        Dim sPrd As String
        Dim sRangeCcy As String
        Dim sEQC_DealerRedirection_OnPricer As String
        Dim dblUserLimit As Double
        Dim sExchange1, sExchange2, sExchange3 As String
        Dim sStock1, sStock2, sStock3 As String
        Try

            ''<Start | Nikhil M. on 04-Oct-2016: For Hide/Show>
            If IsNothing(Request.QueryString("PoolID")) Then
                'chk_DealValidations = True
            Else
                If Request.QueryString("PoolID").ToString = "" Then
                    'chk_DealValidations = True
                Else
                    chk_DealValidations = True
                    Exit Function
                End If
            End If
            ''<End | Nikhil M. on 04-Oct-2016: For Hide/Show>

            dtRangeLimit = New DataTable("LimitData")
            sEQC_DealerRedirection_OnPricer = objReadConfig.ReadConfig(dsConfig, "EQC_DealerRedirection_OnPricer", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO")
            If ddlRM.Items.Count = 0 OrElse ddlRM.SelectedItem.Text = "" Then
                lblerrorPopUp.Text = "Cannot proceed with order. Please select an RM."
                chk_DealValidations = False
                Exit Function
            Else
                chk_DealValidations = True
            End If

            ''<AshwiniP on 19-Sept-16 START>
            dt = New DataTable("PRRating")
            Select Case objELNRFQ.DB_UnderlyingRiskRatingShare(ddlShareDRA.SelectedValue.ToString, dt)
                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                    If dt.Rows(0).Item(0).ToString = "NA" Then
                        lblerrorPopUp.ForeColor = Color.Red
                        lblerrorPopUp.Text = "Order cannot be placed as PRR is not available for " + ddlShareDRA.SelectedValue.ToString + "."
                        ''lblerrorPopUp
                        chk_DealValidations = False
                        Exit Function
                    Else
                        chk_DealValidations = True
                    End If
                Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
            End Select

            Select Case objELNRFQ.DB_UnderlyingRiskRatingShare(ddlShareDRA2.SelectedValue.ToString, dt)
                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                    If dt.Rows(0).Item(0).ToString = "NA" Then
                        lblerrorPopUp.ForeColor = Color.Red
                        lblerrorPopUp.Text = "Order cannot be placed as PRR is not available for " + ddlShareDRA2.SelectedValue.ToString + "."
                        chk_DealValidations = False
                        Exit Function
                    Else
                        chk_DealValidations = True
                    End If
                Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
            End Select

            Select Case objELNRFQ.DB_UnderlyingRiskRatingShare(ddlShareDRA3.SelectedValue.ToString, dt)
                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                    If dt.Rows(0).Item(0).ToString = "NA" Then
                        lblerrorPopUp.ForeColor = Color.Red
                        lblerrorPopUp.Text = "Order cannot be placed as PRR is not available for " + ddlShareDRA3.SelectedValue.ToString + "."
                        chk_DealValidations = False
                        Exit Function
                    Else
                        chk_DealValidations = True
                    End If
                Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
            End Select
            ''<END>


            sPPCode = lblIssuerPopUpValue.Text

            If ddlDRAType.SelectedValue.ToUpper = "FCN" Then
                sPrd = "Fixed Coupon Note"
            Else
                sPrd = "Range Accrual"
            End If
            If lblQuantoYNFlag.Text.ToUpper = "NO" Then
                If chkAddShare1.Checked Then
                    sRangeCcy = lblDRABaseCcy.Text
                ElseIf chkAddShare2.Checked Then
                    sRangeCcy = lblBaseCurrency2.Text
                ElseIf chkAddShare3.Checked Then
                    sRangeCcy = lblBaseCurrency3.Text
                End If
            Else
                sRangeCcy = ddlNoteCcy.SelectedValue
            End If


            If ddlOrderTypePopUpValue.SelectedValue.Trim.ToUpper = "LIMIT" Then
                If txtLimitPricePopUpValue.Text = "" OrElse Val(txtLimitPricePopUpValue.Text) = 0 Then
                    lblerrorPopUp.Text = "Please enter limit price."
                    chk_DealValidations = False
                    Exit Function
                Else
                    chk_DealValidations = True
                End If
                ' If (txtLimitPricePopUpValue.Text.Length - (txtLimitPricePopUpValue.Text.LastIndexOf(".") + 1)) > 4 Then
                If (txtLimitPricePopUpValue.Text.Length - (txtLimitPricePopUpValue.Text.LastIndexOf(".") + 1)) > 4 And CDbl(txtLimitPricePopUpValue.Text) <> Math.Floor(CDbl(txtLimitPricePopUpValue.Text)) Then
                    lblerrorPopUp.Text = "Precision of " + lblLimitPricePopUpCaption.Text + " cannot exceed four digits after decimal point."
                    chk_DealValidations = False
                    Exit Function
                Else
                    chk_DealValidations = True
                End If
            Else
                chk_DealValidations = True
            End If

            '<AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>

            If ddlSolveForDRA.SelectedItem.Value.ToUpper = "COUPON" Then
                Dim sEQC_DRAFCN_Allow_Negative_Coupon_Order = objReadConfig.ReadConfig(dsConfig, "EQC_DRAFCN_Allow_Negative_Coupon_Order", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper
                Select Case sEQC_DRAFCN_Allow_Negative_Coupon_Order
                    Case "YES", "Y"
                        ''No check if allowed for order placing
                        chk_DealValidations = True
                    Case "NO", "N"
                        If CDbl(lblClientYieldPopUpValue.Text.Replace(",", "")) < 0 Then
                            lblerrorPopUp.Text = "Cannot place order. Negative coupon value!"
                            chk_DealValidations = False
                            Exit Function
                        Else
                            chk_DealValidations = True
                        End If
                End Select
            End If
            '</AvinashG. on 10‐Sep‐2015: FA‐1044 Main Pricer: Block order placement for negative coupon values >
            '<AvinashG. on 10‐Sep‐2015: FA‐1042 DRA: For BNPP strike is getting>=100 for 0 guarantee | Edit: Solution being done for all Issuers >
            If ddlSolveForDRA.SelectedItem.Value.ToUpper = "CONVERSION_STRIKE" Then
                Dim sEQC_DRAFCN_Allow_Strike_Beyond_100Pct = objReadConfig.ReadConfig(dsConfig, "EQC_DRAFCN_Allow_Strike_Beyond_100Pct", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper
                Select Case sEQC_DRAFCN_Allow_Strike_Beyond_100Pct
                    Case "YES", "Y"
                        ''No check if allowed for order placing
                        chk_DealValidations = True
                    Case "NO", "N"
                        Dim dblStrike As Double = 0
                        Select Case lblIssuerPopUpValue.Text.Trim.ToUpper
                            Case "JPM"
                                dblStrike = CDbl(lblJPMPrice.Text.Replace(",", ""))
                            Case "HSBC"
                                dblStrike = CDbl(lblHSBCPrice.Text.Replace(",", ""))
                            Case "UBS"
                                dblStrike = CDbl(lblUBSPrice.Text.Replace(",", ""))
                            Case "CS"
                                dblStrike = CDbl(lblCSPrice.Text.Replace(",", ""))
                            Case "BAML"
                                dblStrike = CDbl(lblBAMLPrice.Text.Replace(",", ""))
                            Case "BNPP"
                                dblStrike = CDbl(lblBNPPPrice.Text.Replace(",", ""))
                            Case "DB"
                                dblELNStrike = CDbl(lblDBIBPrice.Text.Replace(",", ""))
                            Case "OCBC"
                                dblELNStrike = CDbl(lblOCBCPrice.Text.Replace(",", ""))
                            Case "CITI"
                                dblELNStrike = CDbl(lblCITIPrice.Text.Replace(",", ""))
                            Case "LEONTEQ"
                                dblELNStrike = CDbl(lblLEONTEQPrice.Text.Replace(",", ""))
                            Case "COMMERZ"
                                dblELNStrike = CDbl(lblCOMMERZPrice.Text.Replace(",", ""))
                        End Select
                        If dblStrike >= 100 Then
                            lblerrorPopUp.Text = "Cannot place order if strike is greater than or equal to 100.00!"
                            chk_DealValidations = False
                            Exit Function
                        Else
                            chk_DealValidations = True
                        End If
                End Select
            End If

            ''<AshwiniP on 22Sept2016>
            Dim TotalSum As Double
            TotalSum = 0
            If grdRMData.Rows.Count > 0 Then
                For Each row As GridViewRow In grdRMData.Rows
                    Dim isChecked As Boolean = row.Cells(0).Controls.OfType(Of CheckBox)().FirstOrDefault().Checked

                    ''<Start | Nikhil M. on 15-Oct-2016: Added for Checking RM Name Validation>
                    If isChecked AndAlso (row.Cells(1).Controls.OfType(Of RadDropDownList)().FirstOrDefault().SelectedValue).Trim = "" Or (row.Cells(1).Controls.OfType(Of RadDropDownList)().FirstOrDefault().SelectedValue).Trim = "&nbsp;" Then
                        chkUpfrontOverride.Visible = False
                        lblerrorPopUp.Text = "Please select RM Name."
                        Return False
                    End If
                    ''<End | Nikhil M. on 15-Oct-2016: Added for Checking RM Name Validation>


                    If isChecked AndAlso (row.Cells(2).Controls.OfType(Of FinIQ_Fast_Find_Customer)().FirstOrDefault().HiddenCustomerId).Trim = "" Or (row.Cells(2).Controls.OfType(Of FinIQ_Fast_Find_Customer)().FirstOrDefault().HiddenCustomerId).Trim = "&nbsp;" Then
                        chkUpfrontOverride.Visible = False
                        lblerrorPopUp.Text = "Please select valid Customer."

                        '<RiddhiS. on 10-Nov-2016: To clear incorrect customer code>
                        Dim FindCustomer As FinIQ_Fast_Find_Customer
                        FindCustomer = CType(row.FindControl("FindCustomer"), FinIQ_Fast_Find_Customer)
                        FindCustomer.setCustName = ""
                        FindCustomer.HiddenCustomerName = ""
                        FindCustomer.HiddenCustomerId = ""
                        FindCustomer.HiddenDocId = ""
                        '</RiddhiS.>


                        Return False
                    End If
                    If isChecked AndAlso Qty_Validate(row.Cells(3).Controls.OfType(Of TextBox)().FirstOrDefault().Text.Trim) = False Then
                        chkUpfrontOverride.Visible = False
                        lblerrorPopUp.Text = "Please enter valid Notional."
                        Return False
                    ElseIf isChecked AndAlso (row.Cells(3).Controls.OfType(Of TextBox)().FirstOrDefault().Text.Trim) = "0" Then ''<Nikhil M. on 17-Oct-2016: Added to check the no zero notional RM  >
                        chkUpfrontOverride.Visible = False
                        lblerrorPopUp.Text = "Notional can not be 0."
                        Return False
                    End If
                    If isChecked AndAlso row.Cells(3).Controls.OfType(Of TextBox)().FirstOrDefault().Text.Trim <> "" Then
                        ''TotalSum = TotalSum + CDbl(row.Cells(3).Controls.OfType(Of TextBox)().FirstOrDefault().Text)
                        '<Added by AshwiniP on 05-Oct-2016 : For notional validation while order confirm>
                        If Qty_Validate(CStr(TotalSum)) = False Then
                            Exit Function
                        End If
                        Try
                            TotalSum = CDbl(FinIQApp_Number.ConvertFormattedAmountToNumber(CStr(TotalSum)).ToString)
                            TotalSum = CDbl(SetNumberFormat(TotalSum, 0))
                            TotalSum = TotalSum + CDbl(row.Cells(3).Controls.OfType(Of TextBox)().FirstOrDefault().Text)
                        Catch ex As Exception
                            lblerrorPopUp.Text = "Please enter valid Notional"
                            chk_DealValidations = False
                            Return False
                        End Try
                        '</Added by AshwiniP on 05-Oct-2016>

                    End If
                    If isChecked AndAlso row.Cells(3).Controls.OfType(Of TextBox)().FirstOrDefault().Text.Trim = "" Then
                        chkUpfrontOverride.Visible = False
                        lblerrorPopUp.Text = "Please enter Notional."
                        Return False
                    End If
                Next

                If TotalSum <> CDbl(lblNotionalPopUpValue.Text) Then
                    chkUpfrontOverride.Visible = False
                    lblerrorPopUp.Text = "Sum of Notional is not equals Order Quantity."
                    Return False
                End If
            Else
                chkUpfrontOverride.Visible = False
                lblerrorPopUp.Text = "Please add Allocation."
            End If
            ''</Changed by ashwiniP on 22Sept2016
	    ''<Uncommented by Rushikesh As told by Sanchita on 5Nov16>
            If chkDuplicateRecords() Then   ''Removed by AshwiniP on 01-Oct-2016
            Else
                Return False
            End If
	    ''</Uncommented by Rushikesh As told by Sanchita on 5Nov16>
            ''</ashwiniP on 22Sept2016
            '''''''Dilkhush Avinash upfront check 
            'EQBOSDEV-435 - Set Min/Max upfront for HK and non HK underlyings for notes and options
            Dim arrStocks() As String
            Dim iBasketCnt As Integer
            arrStocks = lblUnderlyingPopUpValue.Text.Split(CChar(","))
            iBasketCnt = arrStocks.Length

            sStock1 = arrStocks(0)
            sStock2 = If(iBasketCnt > 1, arrStocks(1), "")
            sStock3 = If(iBasketCnt > 2, arrStocks(2), "")

            If ddlExchangeDRAFCN.SelectedValue.ToUpper = "ALL" Then
                Dim sTemp As String
                sExchange1 = objELNRFQ.GetShareExchange(sStock1, sTemp)
            Else
                sExchange1 = ddlExchangeDRAFCN.SelectedValue
            End If

            If (iBasketCnt > 1) Then
                If ddlExchangeDRAFCN2.SelectedValue.ToUpper = "ALL" Then
                    Dim sTemp As String
                    sExchange2 = objELNRFQ.GetShareExchange(sStock2, sTemp)
                Else
                    sExchange2 = ddlExchangeDRAFCN2.SelectedValue
                End If

                If (iBasketCnt > 2) Then
                    If ddlExchangeDRAFCN3.SelectedValue.ToUpper = "ALL" Then
                        Dim sTemp As String
                        sExchange3 = objELNRFQ.GetShareExchange(sStock3, sTemp)
                    Else
                        sExchange3 = ddlExchangeDRAFCN3.SelectedValue
                    End If

                End If
            End If

            Dim objdeal As WEB_FINIQ_MarketData.QECapture
            objdeal = New WEB_FINIQ_MarketData.QECapture
            objdeal.ProductCode = ddlDRAType.SelectedValue
            objdeal.sStock = sStock1
            objdeal.sStockCcy = lblDRABaseCcy.Text
            objdeal.sQuantoCcy = lblCurrencyPopUpValue.Text

            If ddlOrderTypePopUpValue.SelectedValue.ToUpper = "MARKET" Then
                If iBasketCnt = 1 Then
                    objdeal.ExchangeName = sExchange1
                ElseIf iBasketCnt = 2 Then
                    objdeal.ExchangeName = If(sExchange1 = sExchange2, sExchange1, sExchange1 + "," + sExchange2)
                ElseIf iBasketCnt = 3 Then
                    If (sExchange1 = sExchange2 And sExchange2 = sExchange3) Then
                        objdeal.ExchangeName = sExchange1
                    Else
                        objdeal.ExchangeName = sExchange1 + "," + sExchange2 + "," + sExchange3
                    End If
                End If
            Else
                ''As discussed on call with Sanchita
                Dim sLimitStock As String = ddlBasketSharesPopValue.SelectedValue
                Select Case sLimitStock
                    Case sStock1
                        objdeal.ExchangeName = sExchange1
                    Case sStock2
                        objdeal.ExchangeName = sExchange2
                    Case sStock3
                        objdeal.ExchangeName = sExchange3
                    Case Else
                        objdeal.ExchangeName = sExchange1 + "," + sExchange2 + "," + sExchange3
                End Select
            End If


            objdeal.Notional = CDbl(lblNotionalPopUpValue.Text)
            If lblTenorTypePopUpValue.Text.ToUpper = "MONTH" Then
                objdeal.TenorInMonths = CInt(lblTenorPopUpValue.Text)
            Else
                objdeal.TenorInMonths = CInt(lblTenorPopUpValue.Text) * 12
            End If
            objdeal.DealerCode = LoginInfoGV.Login_Info.LoginId
            objdeal.UserGroup = LoginInfoGV.Login_Info.LoginGroup

            Dim SalesSpread As Double
            Dim MinSpreadPct As Double = 0
            Dim MaxSpreadPct As Double = 0
            Dim MaxDealNotional As Double = 0
            Dim MinDealNotional As Double = 0
            Dim MinSpreadAmt As Double = 0
            Dim MaxSpreadAmt As Double = 0
            Dim sExceptionType As String = ""
            Dim sRemarks As String = ""

            '<AvinashG. on 13-Jul-2016: EQBOSDEV-442 - No message if no setup is found in SpecialSpread>
            Select Case oWEBMarketData.GetSpecialSpreadAndExceptionType(CStr(LoginInfoGV.Login_Info.EntityID), (CDbl(Val(txtUpfrontPopUpValue.Text.Replace(",", ""))) * 100), objdeal, SalesSpread, MinSpreadPct, _
                                                            MaxSpreadPct, MaxDealNotional, MinDealNotional, MinSpreadAmt, MaxSpreadAmt, _
                                                            sExceptionType, sRemarks)
                Case WEB_FINIQ_MarketData.Database_Transaction_Response.Db_Successful

                    'If CDbl(Val(txtUpfrontPopUpValue.Text.Replace(",", ""))) < (MinSpreadPct / 100) Or CDbl(Val(txtUpfrontPopUpValue.Text.Replace(",", ""))) > (MaxSpreadPct / 100) Then
                    Select Case sExceptionType.Trim.ToUpper
                        Case "NORMAL"
                            chk_DealValidations = True
                        Case "WARNING"
                            chkUpfrontOverride.Visible = True
                            lblerrorPopUp.Text = sRemarks + "(" + FormatNumber((MinSpreadPct / 100).ToString, 2) + "% and " + FormatNumber((MaxSpreadPct / 100).ToString, 2) + "%). Please select to continue."

                            If chkUpfrontOverride.Checked Then
                                chk_DealValidations = True
                            Else
                                chk_DealValidations = False
                                Exit Function
                            End If
                        Case "ERROR"
                            lblerrorPopUp.Text = sRemarks
                            chk_DealValidations = False
                            chkUpfrontOverride.Visible = False ''<Nikhil M. on 09-Nov-2016: EQSCB-170 | Hide Checkbox on hard block>
                            Exit Function
                        Case Else ''Considering all other cases as error
                            lblerrorPopUp.Text = "Cannot proceed. Setup issue in upfront validation. "
                            chk_DealValidations = False
                            chkUpfrontOverride.Visible = False ''<Nikhil M. on 09-Nov-2016: EQSCB-170 | Hide Checkbox on hard block>
                            Exit Function
                    End Select

                    'Else
                    'chk_DealValidations = True
                    'End If
                Case Else
                    lblerrorPopUp.Text = "Cannot proceed. Setup issue in upfront validation. "
                    chk_DealValidations = False
                    Exit Function
            End Select

                    '</AvinashG. on 10‐Sep‐2015: FA‐1042 DRA: For BNPP strike is getting>=100 for 0 guarantee | Edit: Solution being done for all Issuers >
                    Dim Notional As Double = Convert.ToDouble(txtOrderDRAFCN.Text)
                    '<AvinashG. on 04‐Sep‐2014: FA543>
                    '<Commented By Imran on 19‐Dec‐2015 FA‐1236 ‐ Allow user to Quote without Notional>
                    'Select Case objELNRFQ.Get_EQCPRD_Limit(sPrd, sRangeCcy, dtRangeLimit) ' SchemeName(2nd Para ) to be discussed yet
                    ' Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                    ' If Not (dtRangeLimit Is Nothing) Or dtRangeLimit.Rows.Count < 1 Then
                    ' Dim result() As DataRow = dtRangeLimit.Select("EQCPPL_PPCode = '" + sPPCode + "'")
                    ' If result.Length > 0 Then
                    ' Dim lmtRow As DataRow
                    ' lmtRow = result(0)
                    ' Dim dblMin, dblMax As Double
                    ' dblMin = CDbl(If(IsDBNull(lmtRow("EQCPPL_Minm")), 0, CDbl(lmtRow("EQCPPL_Minm"))))
                    ' dblMax = CDbl(If(IsDBNull(lmtRow("EQCPPL_Maxm")), 0, CDbl(lmtRow("EQCPPL_Maxm"))))
                    ' '<AvinashG. on 18‐Sep‐2014: FA‐585 Change of error message for range limit >
                    '<\Commented By Imran on 19‐Dec‐2015 FA‐1236 ‐ Allow user to Quote without Notional>
                    Select Case sEQC_DealerRedirection_OnPricer.ToUpper
                        Case "Y", "YES"
                    'sEQC_DealerLoginGroups = objReadConfig.ReadConfig(dsConfig, "EQC_DealerLoginGroups", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NONE")
                    'Dim sLoginGrp As String
                    'sLoginGrp = LoginInfoGV.Login_Info.LoginGroup
                    'If sEQC_DealerLoginGroups.Split(CChar(",")).ToList().IndexOf(sLoginGrp) > -1 Then
                    If UCase(Request.QueryString("Mode")) = "ALL" Then
                        ''User is Dealer
                        '<Commented By Imran on 19‐Dec‐2015 FA‐1236 ‐ Allow user to Quote without Notional>
                        'If (Notional < dblMin) Then
                        ' lblerrorPopUp.Text = "Can not place Order. Notional Size is smaller than the minimum permitted."
                        ' chk_DealValidations = False
                        'ElseIf (Notional > dblMax) Then
                        ' lblerrorPopUp.Text = "Can not place order. Notional size is larger than the maximum permitted."
                        ' chk_DealValidations = False
                        'Else
                        ' chk_DealValidations = True
                        'End If
                        '<\Commented By Imran on 19‐Dec‐2015 FA‐1236 ‐ Allow user to Quote without Notional>
                    Else
                        '<Commented By Imran on 19‐Dec‐2015 FA‐1236 ‐ Allow user to Quote without Notional>
                        'If (Notional < dblMin) Then
                        ' lblerrorPopUp.Text = "Can not place Order. Notional Size is smaller than the minimum permitted."
                        ' chk_DealValidations = False
                        ' Exit Function
                        'ElseIf (Notional > dblMax) Then
                        ' lblerrorPopUp.Text = "Can not place order. Notional size is larger than the maximum permitted."
                        ' chk_DealValidations = False
                        ' Exit Function
                        'Else
                        '<\Commented By Imran on 19‐Dec‐2015 FA‐1236 ‐ Allow user to Quote without Notional>
                        Select Case objELNRFQ.GetUserLimit(LoginInfoGV.Login_Info.LoginId, sRangeCcy, sPrd, dblUserLimit)
                            Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                                If dblUserLimit > 0 Then
                                    If Notional > dblUserLimit Then ''Condition for notional greater than issuer limit will get checked in previous if
                                        ''Dilkhush/AVinash 03Feb2016 Added limit in message
                                        lblerrorPopUp.Text = "Notional Size is larger than your permitted limit (" + FormatNumber(dblUserLimit.ToString, 0) + " " + sRangeCcy + "). Do you want to redirect this order to dealer?"
                                        ''lblerrorPopUp.Text = "Notional Size is larger than your permitted limit. Do you want to redirect this order to dealer?"
                                        btnRedirect.Visible = True
                                        btnDealConfirm.Visible = False '<AvinashG. on 26-Feb-2016: FA-1327 - Hide confirm button and show redirect for redirection>
                                        chk_DealValidations = False
                                    Else
                                        chk_DealValidations = True
                                    End If
                                    '<Added by Mohit Lalwani on 2‐Nov‐2015 for DRA FA‐1169 >
                                Else
                                    ''In‐aligment with the JIRA description allowing redirection if user limit is zero
                                    If dblUserLimit = 0 Then
                                        lblerrorPopUp.Text = "Limit not found or Zero limit found. Do you want to redirect this order to dealer?"
                                        btnRedirect.Visible = True
                                        btnDealConfirm.Visible = False '<AvinashG. on 26-Feb-2016: FA-1327 - Hide confirm button and show redirect for redirection>
                                        chk_DealValidations = False
                                        LogException(LoginInfoGV.Login_Info.LoginId, "User/User Group Limit found 0(Zero) for " + LoginInfoGV.Login_Info.LoginId + " for " + sRangeCcy + " for " + sPrd, LogType.FnqInfo, Nothing, sSelfPath, "chk_DealValidations", ErrorLevel.Medium)
                                    Else
                                        LogException(LoginInfoGV.Login_Info.LoginId, "Invalid value(" + dblUserLimit.ToString + ") found for " + LoginInfoGV.Login_Info.LoginId + " for " + sRangeCcy + " for " + sPrd, LogType.FnqInfo, Nothing, _
    sSelfPath, "chk_DealValidations", ErrorLevel.Medium)
                                        chk_DealValidations = False
                                    End If
                                    '</Added by Mohit Lalwani on 2‐Nov‐2015 for DRA FA‐1169 >
                                End If
                            Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data, Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                                lblerrorPopUp.Text = "Cannot proceed. User/User Group limit not found."
                                chk_DealValidations = False
                        End Select
                        'End If '<Commented By Imran on 19‐Dec‐2015 FA‐1236 ‐ Allow user to Quote without Notional>
                    End If
                Case "N", "NO"
                    '<AvinashG. on 18‐Sep‐2014: FA‐585 Change of error message for range limit >
                    '<Commented By Imran on 19‐Dec‐2015 FA‐1236 ‐ Allow user to Quote without Notional>
                    'If (Notional < dblMin) Then
                    ' lblerrorPopUp.Text = "Can not place Order. Notional Size is smaller than the minimum permitted."
                    ' chk_DealValidations = False
                    'ElseIf (Notional > dblMax) Then
                    ' lblerrorPopUp.Text = "Can not place order. Notional size is larger than the maximum permitted."
                    ' chk_DealValidations = False
                    'Else
                    ' chk_DealValidations = True
                    'End If
                    '<\Commented By Imran on 19‐Dec‐2015 FA‐1236 ‐ Allow user to Quote without Notional>
            End Select
                    'If (Notional >= dblMin) AndAlso (Notional <= dblMax) Then
                    ' chk_DealValidations = True
                    'Else
                    ' lblerrorPopUp.Text = "Notional value out of range."
                    ' chk_DealValidations = False
                    ' Exit Function
                    'End If
                    '<AvinashG. on 18‐Sep‐2014: FA‐585 Change of error message for range limit >
                    '<Commented By Imran on 19‐Dec‐2015 FA‐1236 ‐ Allow user to Quote without Notional>
                    ' Else
                    ''<AvinashG. on 18‐Sep‐2014: FA‐591 Message if limit not found for a currency >
                    'lblerrorPopUp.Text = "Range not set for " + sRangeCcy + " for " + sPPCode + "."
                    ''lblerrorPopUp.Text = "Range not set for " + sPPCode + "."
                    ''</AvinashG. on 18‐Sep‐2014: FA‐591 Message if limit not found for a currency >
                    'chk_DealValidations = False
                    'Exit Function
                    ' End If
                    ' Else
                    ''<AvinashG. on 18‐Sep‐2014: FA‐591 Message if limit not found for a currency >
                    'lblerrorPopUp.Text = "Range not set for " + sRangeCcy + " for " + sPPCode + "."
                    ''lblerrorPopUp.Text = "Range not set for " + sPPCode + "."
                    ''</AvinashG. on 18‐Sep‐2014: FA‐591 Message if limit not found for a currency >
                    'chk_DealValidations = False
                    'Exit Function
                    ' End If
                    '<Commented By Imran on 19‐Dec‐2015 FA‐1236 ‐ Allow user to Quote without Notional>
                    ' Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                    ' lblerrorPopUp.Text = "Failed to retrieve range limit"
                    ' chk_DealValidations = False
                    ' Exit Function
                    ' Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                    ' '<AvinashG. on 18‐Sep‐2014: FA‐591 Message if limit not found for a currency >
                    ' lblerrorPopUp.Text = "Range not set for " + sRangeCcy + " for " + sPPCode + "."
                    ' 'lblerrorPopUp.Text = "Range not set for " + sPPCode + "."
                    ' '</AvinashG. on 18‐Sep‐2014: FA‐591 Message if limit not found for a currency >
                    ' chk_DealValidations = False
                    ' Exit Function
                    ' Case Web_ELNRFQ.Database_Transaction_Response.Db_Error
                    ' lblerrorPopUp.Text = "Failed to retrieve range limit"
                    ' chk_DealValidations = False
                    ' Exit Function
                    'End Select
                    '<\Commented By Imran on 19‐Dec‐2015 FA‐1236 ‐ Allow user to Quote without Notional>
                    'If (Notional > Convert.ToDouble(Session.Item("MaxLimit"))) Or (Notional < Convert.ToDouble(Session.Item("MinLimit"))) Then
                    ' lblerrorPopUp.Text = "Notional value out of range."
                    ' chk_DealValidations = False
                    ' Exit Function
                    'Else
                    ' chk_DealValidations = True
                    'End If
                    '<AvinashG. on 04‐Sep‐2014: >

                    'If ddlSolveForDRA.SelectedItem.Value.ToUpper = "COUPON" Then
                    '    Dim sEQC_DRAFCN_Allow_Negative_Coupon_Order = objReadConfig.ReadConfig(dsConfig, "EQC_DRAFCN_Allow_Negative_Coupon_Order", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper
                    '    Select Case sEQC_DRAFCN_Allow_Negative_Coupon_Order
                    '        Case "YES", "Y"
                    '            chk_DealValidations = True
                    '        Case "NO", "N"
                    '            If CDbl(lblClientYieldPopUpValue.Text.Replace(",", "")) < 0 Then
                    '                lblerrorPopUp.Text = "Cannot place order. Negative coupon value!"
                    '                chk_DealValidations = False
                    '                Exit Function
                    '            Else
                    '                chk_DealValidations = True
                    '            End If
                    '    End Select
                    'End If
                    'If ddlSolveForDRA.SelectedItem.Value.ToUpper = "CONVERSION_STRIKE" Then
                    '    Dim sEQC_DRAFCN_Allow_Strike_Beyond_100Pct = objReadConfig.ReadConfig(dsConfig, "EQC_DRAFCN_Allow_Strike_Beyond_100Pct", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper
                    '    Select Case sEQC_DRAFCN_Allow_Strike_Beyond_100Pct
                    '        Case "YES", "Y"
                    '            chk_DealValidations = True
                    '        Case "NO", "N"
                    '            Dim dblStrike As Double = 0
                    '            Select Case lblIssuerPopUpValue.Text.Trim.ToUpper
                    '                Case "JPM"
                    '                    dblStrike = CDbl(lblJPMPrice.Text.Replace(",", ""))
                    '                Case "HSBC"
                    '                    dblStrike = CDbl(lblHSBCPrice.Text.Replace(",", ""))
                    '                Case "UBS"
                    '                    dblStrike = CDbl(lblUBSPrice.Text.Replace(",", ""))
                    '                Case "CS"
                    '                    dblStrike = CDbl(lblCSPrice.Text.Replace(",", ""))
                    '                        Case "BAML"
                    '                            dblStrike = CDbl(lblBAMLPrice.Text.Replace(",", ""))
                    '                Case "BNPP"
                    '                    dblStrike = CDbl(lblBNPPPrice.Text.Replace(",", ""))
                    '            End Select
                    '            If dblStrike >= 100 Then
                    '                lblerrorPopUp.Text = "Cannot place order if strike is greater than or equal to 100.00!"
                    '                chk_DealValidations = False
                    '                Exit Function
                    '            Else
                    '                chk_DealValidations = True
                    '            End If
                    '    End Select
                    'End If
                    'Dim Notional As Double = Convert.ToDouble(txtOrderDRAFCN.Text)
                    'Select Case objELNRFQ.Get_EQCPRD_Limit(sPrd, sRangeCcy, dtRangeLimit)
                    '    Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                    '        If Not (dtRangeLimit Is Nothing) Or dtRangeLimit.Rows.Count < 1 Then
                    '            Dim result() As DataRow = dtRangeLimit.Select("EQCPPL_PPCode = '" + sPPCode + "'")
                    '            If result.Length > 0 Then
                    '                Dim lmtRow As DataRow
                    '                lmtRow = result(0)
                    '                Dim dblMin, dblMax As Double
                    '                dblMin = CDbl(If(IsDBNull(lmtRow("EQCPPL_Minm")), 0, CDbl(lmtRow("EQCPPL_Minm"))))
                    '                dblMax = CDbl(If(IsDBNull(lmtRow("EQCPPL_Maxm")), 0, CDbl(lmtRow("EQCPPL_Maxm"))))
                    '                        Select Case sEQC_DealerRedirection_OnPricer.ToUpper
                    '                            Case "Y", "YES"
                    '                                sEQC_DealerLoginGroups = objReadConfig.ReadConfig(dsConfig, "EQC_DealerLoginGroups", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NONE")
                    '                                Dim sLoginGrp As String
                    '                                sLoginGrp = LoginInfoGV.Login_Info.LoginGroup

                    '                                If sEQC_DealerLoginGroups.Split(CChar(",")).ToList().IndexOf(sLoginGrp) > -1 Then

                    '                                    If (Notional < dblMin) Then
                    '                    lblerrorPopUp.Text = "Can not place Order. Notional Size is smaller than the minimum permitted."
                    '                    chk_DealValidations = False
                    '                ElseIf (Notional > dblMax) Then
                    '                    lblerrorPopUp.Text = "Can not place order. Notional size is larger than the maximum permitted."
                    '                    chk_DealValidations = False
                    '                Else
                    '                    chk_DealValidations = True
                    '                End If
                    '                                Else
                    '                                    If (Notional < dblMin) Then
                    '                                        lblerrorPopUp.Text = "Can not place Order. Notional Size is smaller than the minimum permitted."
                    '                                        chk_DealValidations = False
                    '                                        Exit Function
                    '                                    ElseIf (Notional > dblMax) Then
                    '                                        lblerrorPopUp.Text = "Can not place order. Notional size is larger than the maximum permitted."
                    '                                        chk_DealValidations = False
                    '                                        Exit Function
                    '                                    Else
                    '                                        Select Case objELNRFQ.GetUserLimit(LoginInfoGV.Login_Info.LoginId, sRangeCcy, sPrd, dblUserLimit)
                    '                                            Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                    '                                                If dblUserLimit > 0 Then
                    '                                            If Notional > dblUserLimit Then
                    '                                                lblerrorPopUp.Text = "Notional Size is larger than your permitted limit. Do you want to redirect this order to dealer?"
                    '                                                btnRedirect.Visible = True
                    '                                                chk_DealValidations = False
                    '                                            Else
                    '                                                chk_DealValidations = True
                    '                                            End If

                    '                                                Else

                    '                                                    If dblUserLimit = 0 Then
                    '                                                        lblerrorPopUp.Text = "Limit not found or Zero limit found. Do you want to redirect this order to dealer?"
                    '                                                        btnRedirect.Visible = True
                    '                                                        chk_DealValidations = False
                    '                                                        LogException(LoginInfoGV.Login_Info.LoginId, "User/User Group Limit found 0(Zero) for  " + LoginInfoGV.Login_Info.LoginId + " for " + sRangeCcy + " for " + sPrd, LogType.FnqInfo, Nothing, _
                    '                                                                                                sSelfPath, "chk_DealValidations", ErrorLevel.Medium)
                    '                                                    Else
                    '                                                        LogException(LoginInfoGV.Login_Info.LoginId, "Invalid value(" + dblUserLimit.ToString + ") found for  " + LoginInfoGV.Login_Info.LoginId + " for " + sRangeCcy + " for " + sPrd, LogType.FnqInfo, Nothing, _
                    '                                                                                                sSelfPath, "chk_DealValidations", ErrorLevel.Medium)
                    '                                                        chk_DealValidations = False
                    '                                                    End If
                    '                                        End If
                    '                                            Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data, Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                    '                                                lblerrorPopUp.Text = "Cannot proceed. User/User Group limit not found."
                    '                                                chk_DealValidations = False
                    '                                        End Select
                    '                                    End If
                    '                                End If
                    '                            Case "N", "NO"
                    '                        If (Notional < dblMin) Then
                    '                            lblerrorPopUp.Text = "Can not place Order. Notional Size is smaller than the minimum permitted."
                    '                            chk_DealValidations = False
                    '                        ElseIf (Notional > dblMax) Then
                    '                            lblerrorPopUp.Text = "Can not place order. Notional size is larger than the maximum permitted."
                    '                            chk_DealValidations = False
                    '                        Else
                    '                            chk_DealValidations = True
                    '                        End If

                    '                        End Select


                    '                    Else
                    '                lblerrorPopUp.Text = "Range not set for " + sRangeCcy + " for " + sPPCode + "."
                    '                chk_DealValidations = False
                    '                        Exit Function
                    '                    End If
                    '                Else
                    '            lblerrorPopUp.Text = "Range not set for " + sRangeCcy + " for " + sPPCode + "."
                    '            chk_DealValidations = False
                    '                    Exit Function
                    '                End If
                    '            Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                    '                lblerrorPopUp.Text = "Failed to retrieve range limit"
                    '                chk_DealValidations = False
                    '                Exit Function
                    '            Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                    '        lblerrorPopUp.Text = "Range not set for " + sRangeCcy + " for " + sPPCode + "."
                    '        chk_DealValidations = False
                    '                Exit Function
                    '            Case Web_ELNRFQ.Database_Transaction_Response.Db_Error
                    '                lblerrorPopUp.Text = "Failed to retrieve range limit"
                    '                chk_DealValidations = False
                    '                Exit Function
                    '        End Select
            '</AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>

       
            '<Rushikesh End>

            chk_DealValidations = True        ''AshwiniP on 05-Oct-2016
      Catch ex As Exception
            lblerror.Text = "chk_DealValidations:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "chk_DealValidations", ErrorLevel.High)

            Throw ex
        End Try
    End Function

    Public Sub btnJPMDeal_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnJPMDeal.Click
        Dim hashRFQID As Hashtable
        Dim hashPPId As Hashtable
        Try
            hashPPId = New Hashtable
            hashRFQID = New Hashtable
            hashRFQID = CType(Session("Hash_Values"), Hashtable)
            hashPPId = CType(Session("PP_IdTable"), Hashtable)
            lblerror.Text = ""
            lblMsgPriceProvider.Text = ""
            If chk_DealValidations() = False Then
                Exit Sub
            End If
            Quote_ID = Convert.ToString(Session("JPMQuote"))
            Session.Remove("JPMQuote")
            rbHistory.SelectedValue = "Order History"
            If Convert.ToString(Session("flag")) = "I" Then
                Dim strJPMID As String
                strJPMID = CStr(hashRFQID(hashPPId("JPM")))
                Session.Remove("flag")
                Session("flag") = ""
                DealClicked(strJPMID)
            Else
                Session.Remove("flag")
                DealClicked(Quote_ID)
            End If
            ''<Dilkhush:22Dec2015 config based GridAuto Refresh>
            Select Case objReadConfig.ReadConfig(dsConfig, "EQC_RealTime_Quote_History", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                Case "Y", "YES"
                    btnLoad_Click(sender, e)
                Case "N", "NO"
                    ''Do Nothing
            End Select
            ''btnLoad_Click(sender, e)
            ''</Dilkhush:22Dec2015 config based GridAuto Refresh>
            System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "stopTimerJPMDeal", "StopPPTimerValue('" + btnJPMDeal.ClientID + "');", True)
            btnJPMprice.Text = "Price"
            JpmHiddenPrice.Value = ";Enable;Disable;Disable;Price"
            upnlChart.Update()
            ResetAll()
        Catch ex As Exception
            lblerror.Text = "btnJPMDeal_Click:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnJPMDeal_Click", ErrorLevel.High)
        End Try
    End Sub

    Public Sub btnCSDeal_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnCSDeal.Click
        Dim hashRFQID As Hashtable
        Dim hashPPId As Hashtable
        Try
            hashPPId = New Hashtable
            hashRFQID = New Hashtable
            hashRFQID = CType(Session("Hash_Values"), Hashtable)
            hashPPId = CType(Session("PP_IdTable"), Hashtable)
            lblerror.Text = ""
            lblMsgPriceProvider.Text = ""
            If chk_DealValidations() = False Then
                Exit Sub
            End If
            Quote_ID = Convert.ToString(Session("CSQuote"))
            Session.Remove("CSQuote")
            rbHistory.SelectedValue = "Order History"
            If Convert.ToString(Session("flag")) = "I" Then
                Session.Remove("flag")
                Session("flag") = ""
                Dim strCSID As String
                strCSID = CStr(hashRFQID(hashPPId("CS")))
                DealClicked(strCSID)
            Else
                Session.Remove("flag")
                DealClicked(Quote_ID)
            End If
            ''<Dilkhush:22Dec2015 config based GridAuto Refresh>
            Select Case objReadConfig.ReadConfig(dsConfig, "EQC_RealTime_Quote_History", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                Case "Y", "YES"
                    btnLoad_Click(sender, e)
                Case "N", "NO"
                    ''Do Nothing
            End Select
            ''btnLoad_Click(sender, e)
            ''</Dilkhush:22Dec2015 config based GridAuto Refresh>
            System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "stopTimerCSDeal", "StopPPTimerValue('" + btnCSDeal.ClientID + "');", True)
            btnCSPrice.Text = "Price"
            CsHiddenPrice.Value = ";Enable;Disable;Disable;Price"
            upnlChart.Update()
            ResetAll()
        Catch ex As Exception
            lblerror.Text = "btnCSDeal_Click:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnCSDeal_Click", ErrorLevel.High)
        End Try
    End Sub

    Public Sub btnBAMLDeal_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnBAMLDeal.Click
        Dim hashRFQID As Hashtable
        Dim hashPPId As Hashtable
        Try
            RestoreSolveAll()
            RestoreAll()
            hashPPId = New Hashtable
            hashRFQID = New Hashtable
            hashRFQID = CType(Session("Hash_Values"), Hashtable)
            hashPPId = CType(Session("PP_IdTable"), Hashtable)
            lblerror.Text = ""
            lblMsgPriceProvider.Text = ""
            If chk_DealValidations() = False Then
                Exit Sub
            End If
            Quote_ID = Convert.ToString(Session("BAMLQuote"))
            Session.Remove("BAMLQuote")
            rbHistory.SelectedValue = "Order History"
            If Convert.ToString(Session("flag")) = "I" Then
                Session.Remove("flag")
                Session("flag") = ""
                Dim strBAMLID As String
                strBAMLID = CStr(hashRFQID(hashPPId("BAML")))
                DealClicked(strBAMLID)
            Else
                Session.Remove("flag")
                DealClicked(Quote_ID)
            End If
            ''<Dilkhush:22Dec2015 config based GridAuto Refresh>
            Select Case objReadConfig.ReadConfig(dsConfig, "EQC_RealTime_Quote_History", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                Case "Y", "YES"
                    btnLoad_Click(sender, e)
                Case "N", "NO"
                    ''Do Nothing
            End Select
            ''btnLoad_Click(sender, e)
            ''</Dilkhush:22Dec2015 config based GridAuto Refresh>
            System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "stopTimerBAMLDeal", "StopPPTimerValue('" + btnBAMLDeal.ClientID + "');", True)
            btnBAMLPrice.Text = "Price"
            BAMLHiddenPrice.Value = ";Enable;Disable;Disable;Price"
            upnlChart.Update()
            ResetAll()
        Catch ex As Exception
            lblerror.Text = "btnBAMLDeal_Click:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnBAMLDeal_Click", ErrorLevel.High)

        End Try
    End Sub

    Public Sub btnBNPPDeal_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnBNPPDeal.Click
        Dim getBNPP As String = ""
        Dim hashRFQID As Hashtable
        Dim hashPPId As Hashtable
        Try
            RestoreSolveAll()
            RestoreAll()
            hashPPId = New Hashtable
            hashRFQID = New Hashtable
            hashRFQID = CType(Session("Hash_Values"), Hashtable)
            hashPPId = CType(Session("PP_IdTable"), Hashtable)
            lblerror.Text = ""
            lblMsgPriceProvider.Text = ""
            If chk_DealValidations() = False Then
                Exit Sub
            End If
            Quote_ID = Convert.ToString(Session("BNPPQuote"))
            Session.Remove("BNPPQuote")
            rbHistory.SelectedValue = "Order History"
            If Convert.ToString(Session("flag")) = "I" Then
                Dim strBNPPID As String
                strBNPPID = CStr(hashRFQID(hashPPId("BNPP")))
                Session.Remove("flag")
                Session("flag") = ""
                DealClicked(strBNPPID)
            Else
                Session.Remove("flag")
                DealClicked(Quote_ID)
            End If
            ''<Dilkhush:22Dec2015 config based GridAuto Refresh>
            Select Case objReadConfig.ReadConfig(dsConfig, "EQC_RealTime_Quote_History", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                Case "Y", "YES"
                    btnLoad_Click(sender, e)
                Case "N", "NO"
                    ''Do Nothing
            End Select
            ''btnLoad_Click(sender, e)
            ''</Dilkhush:22Dec2015 config based GridAuto Refresh>
            System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "stopTimerBNPPDeal", "StopPPTimerValue('" + btnBNPPDeal.ClientID + "');", True)
            btnBNPPPrice.Text = "Price"
            BNPPHiddenPrice.Value = ";Enable;Disable;Disable;Price"
            upnlChart.Update()
            ResetAll()
        Catch ex As Exception
            lblerror.Text = "btnBNPPDeal_Click:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnBNPPDeal_Click", ErrorLevel.High)
        End Try
    End Sub

    Public Sub btnDBIBDeal_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnDBIBDeal.Click
        Dim getDBIB As String = ""
        Dim hashRFQID As Hashtable
        Dim hashPPId As Hashtable
        Try
            RestoreSolveAll()
            RestoreAll()
            hashPPId = New Hashtable
            hashRFQID = New Hashtable
            hashRFQID = CType(Session("Hash_Values"), Hashtable)
            hashPPId = CType(Session("PP_IdTable"), Hashtable)
            lblerror.Text = ""
            lblMsgPriceProvider.Text = ""
            If chk_DealValidations() = False Then
                Exit Sub
            End If

            


            Quote_ID = Convert.ToString(Session("DBIBQuote"))
            Session.Remove("DBIBQuote")
            rbHistory.SelectedValue = "Order History"
            If Convert.ToString(Session("flag")) = "I" Then
                Dim strDBIBID As String
                strDBIBID = CStr(hashRFQID(hashPPId("DB")))
                Session.Remove("flag")
                Session("flag") = ""
                DealClicked(strDBIBID)
            Else
                Session.Remove("flag")
                DealClicked(Quote_ID)
            End If
            ''<Dilkhush:22Dec2015 config based GridAuto Refresh>
            Select Case objReadConfig.ReadConfig(dsConfig, "EQC_RealTime_Quote_History", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                Case "Y", "YES"
                    btnLoad_Click(sender, e)
                Case "N", "NO"
                    ''Do Nothing
            End Select
            ''btnLoad_Click(sender, e)
            ''</Dilkhush:22Dec2015 config based GridAuto Refresh>
            System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "stopTimerDBIBDeal", "StopPPTimerValue('" + btnDBIBDeal.ClientID + "');", True)
            btnDBIBPrice.Text = "Price"
            DBIBHiddenPrice.Value = ";Enable;Disable;Disable;Price"
            upnlChart.Update()
            ResetAll()
        Catch ex As Exception
            lblerror.Text = "btnDBIBDeal_Click:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnDBIBDeal_Click", ErrorLevel.High)
        End Try
    End Sub

    Public Sub btnOCBCDeal_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnOCBCDeal.Click
        Dim getOCBC As String = ""
        Dim hashRFQID As Hashtable
        Dim hashPPId As Hashtable
        Try
            RestoreSolveAll()
            RestoreAll()
            hashPPId = New Hashtable
            hashRFQID = New Hashtable
            hashRFQID = CType(Session("Hash_Values"), Hashtable)
            hashPPId = CType(Session("PP_IdTable"), Hashtable)
            lblerror.Text = ""
            lblMsgPriceProvider.Text = ""
            If chk_DealValidations() = False Then
                Exit Sub
            End If
            Quote_ID = Convert.ToString(Session("OCBCQuote"))
            Session.Remove("OCBCQuote")
            rbHistory.SelectedValue = "Order History"
            If Convert.ToString(Session("flag")) = "I" Then
                Dim strOCBCID As String
                strOCBCID = CStr(hashRFQID(hashPPId("OCBC")))
                Session.Remove("flag")
                Session("flag") = ""
                DealClicked(strOCBCID)
            Else
                Session.Remove("flag")
                DealClicked(Quote_ID)
            End If
            ''<Dilkhush:22Dec2015 config based GridAuto Refresh>
            Select Case objReadConfig.ReadConfig(dsConfig, "EQC_RealTime_Quote_History", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                Case "Y", "YES"
                    btnLoad_Click(sender, e)
                Case "N", "NO"
                    ''Do Nothing
            End Select
            ''btnLoad_Click(sender, e)
            ''</Dilkhush:22Dec2015 config based GridAuto Refresh>
            System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "stopTimerOCBCDeal", "StopPPTimerValue('" + btnOCBCDeal.ClientID + "');", True)
            btnOCBCPrice.Text = "Price"
            OCBCHiddenPrice.Value = ";Enable;Disable;Disable;Price"
            upnlChart.Update()
            ResetAll()
        Catch ex As Exception
            lblerror.Text = "btnOCBCDeal_Click:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnOCBCDeal_Click", ErrorLevel.High)
        End Try
    End Sub

    Public Sub btnCITIDeal_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnCITIDeal.Click
        Dim getCITI As String = ""
        Dim hashRFQID As Hashtable
        Dim hashPPId As Hashtable
        Try
            RestoreSolveAll()
            RestoreAll()
            hashPPId = New Hashtable
            hashRFQID = New Hashtable
            hashRFQID = CType(Session("Hash_Values"), Hashtable)
            hashPPId = CType(Session("PP_IdTable"), Hashtable)
            lblerror.Text = ""
            lblMsgPriceProvider.Text = ""
            If chk_DealValidations() = False Then
                Exit Sub
            End If
            Quote_ID = Convert.ToString(Session("CITIQuote"))
            Session.Remove("CITIQuote")
            rbHistory.SelectedValue = "Order History"
            If Convert.ToString(Session("flag")) = "I" Then
                Dim strCITIID As String
                strCITIID = CStr(hashRFQID(hashPPId("CITI")))
                Session.Remove("flag")
                Session("flag") = ""
                DealClicked(strCITIID)
            Else
                Session.Remove("flag")
                DealClicked(Quote_ID)
            End If
            ''<Dilkhush:22Dec2015 config based GridAuto Refresh>
            Select Case objReadConfig.ReadConfig(dsConfig, "EQC_RealTime_Quote_History", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                Case "Y", "YES"
                    btnLoad_Click(sender, e)
                Case "N", "NO"
                    ''Do Nothing
            End Select
            ''btnLoad_Click(sender, e)
            ''</Dilkhush:22Dec2015 config based GridAuto Refresh>
            System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "stopTimerCITIDeal", "StopPPTimerValue('" + btnCITIDeal.ClientID + "');", True)
            btnCITIPrice.Text = "Price"
            CITIHiddenPrice.Value = ";Enable;Disable;Disable;Price"
            upnlChart.Update()
            ResetAll()
        Catch ex As Exception
            lblerror.Text = "btnCITIDeal_Click:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnCITIDeal_Click", ErrorLevel.High)
        End Try
    End Sub
    Public Sub btnLEONTEQDeal_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnLEONTEQDeal.Click
        Dim getLEONTEQ As String = ""
        Dim hashRFQID As Hashtable
        Dim hashPPId As Hashtable
        Try
            RestoreSolveAll()
            RestoreAll()
            hashPPId = New Hashtable
            hashRFQID = New Hashtable
            hashRFQID = CType(Session("Hash_Values"), Hashtable)
            hashPPId = CType(Session("PP_IdTable"), Hashtable)
            lblerror.Text = ""
            lblMsgPriceProvider.Text = ""
            If chk_DealValidations() = False Then
                Exit Sub
            End If
            Quote_ID = Convert.ToString(Session("LEONTEQQuote"))
            Session.Remove("LEONTEQQuote")
            rbHistory.SelectedValue = "Order History"
            If Convert.ToString(Session("flag")) = "I" Then
                Dim strLEONTEQID As String
                strLEONTEQID = CStr(hashRFQID(hashPPId("LEONTEQ")))
                Session.Remove("flag")
                Session("flag") = ""
                DealClicked(strLEONTEQID)
            Else
                Session.Remove("flag")
                DealClicked(Quote_ID)
            End If
            ''<Dilkhush:22Dec2015 config based GridAuto Refresh>
            Select Case objReadConfig.ReadConfig(dsConfig, "EQC_RealTime_Quote_History", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                Case "Y", "YES"
                    btnLoad_Click(sender, e)
                Case "N", "NO"
                    ''Do Nothing
            End Select
            ''btnLoad_Click(sender, e)
            ''</Dilkhush:22Dec2015 config based GridAuto Refresh>
            System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "stopTimerLEONTEQDeal", "StopPPTimerValue('" + btnLEONTEQDeal.ClientID + "');", True)
            btnLEONTEQPrice.Text = "Price"
            LEONTEQHiddenPrice.Value = ";Enable;Disable;Disable;Price"
            upnlChart.Update()
            ResetAll()
        Catch ex As Exception
            lblerror.Text = "btnLEONTEQDeal_Click:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnLEONTEQDeal_Click", ErrorLevel.High)
        End Try
    End Sub
    Public Sub btnCOMMERZDeal_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnCOMMERZDeal.Click
        Dim getCOMMERZ As String = ""
        Dim hashRFQID As Hashtable
        Dim hashPPId As Hashtable
        Try
            RestoreSolveAll()
            RestoreAll()
            hashPPId = New Hashtable
            hashRFQID = New Hashtable
            hashRFQID = CType(Session("Hash_Values"), Hashtable)
            hashPPId = CType(Session("PP_IdTable"), Hashtable)
            lblerror.Text = ""
            lblMsgPriceProvider.Text = ""
            If chk_DealValidations() = False Then
                Exit Sub
            End If
            Quote_ID = Convert.ToString(Session("COMMERZQuote"))
            Session.Remove("COMMERZQuote")
            rbHistory.SelectedValue = "Order History"
            If Convert.ToString(Session("flag")) = "I" Then
                Dim strCOMMERZID As String
                strCOMMERZID = CStr(hashRFQID(hashPPId("COMMERZ")))
                Session.Remove("flag")
                Session("flag") = ""
                DealClicked(strCOMMERZID)
            Else
                Session.Remove("flag")
                DealClicked(Quote_ID)
            End If
            ''<Dilkhush:22Dec2015 config based GridAuto Refresh>
            Select Case objReadConfig.ReadConfig(dsConfig, "EQC_RealTime_Quote_History", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                Case "Y", "YES"
                    btnLoad_Click(sender, e)
                Case "N", "NO"
                    ''Do Nothing
            End Select
            ''btnLoad_Click(sender, e)
            ''</Dilkhush:22Dec2015 config based GridAuto Refresh>
            System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "stopTimerCOMMERZDeal", "StopPPTimerValue('" + btnCOMMERZDeal.ClientID + "');", True)
            btnCOMMERZPrice.Text = "Price"
            COMMERZHiddenPrice.Value = ";Enable;Disable;Disable;Price"
            upnlChart.Update()
            ResetAll()
        Catch ex As Exception
            lblerror.Text = "btnCOMMERZDeal_Click:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnCOMMERZDeal_Click", ErrorLevel.High)
        End Try
    End Sub
    Public Sub btnHSBCDeal_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnHSBCDeal.Click
        Dim hashRFQID As Hashtable
        Dim hashPPId As Hashtable
        Try
            RestoreSolveAll()
            RestoreAll()
            hashPPId = New Hashtable
            hashRFQID = New Hashtable
            hashRFQID = CType(Session("Hash_Values"), Hashtable)
            hashPPId = CType(Session("PP_IdTable"), Hashtable)
            lblerror.Text = ""
            lblMsgPriceProvider.Text = ""
            If chk_DealValidations() = False Then
                Exit Sub
            End If
            Quote_ID = Convert.ToString(Session("HSBCQuote"))
            Session.Remove("HSBCQuote")
            rbHistory.SelectedValue = "Order History"
            If Convert.ToString(Session("flag")) = "I" Then
                Dim strHSBCID As String
                strHSBCID = CStr(hashRFQID(hashPPId("HSBC")))
                Session.Remove("flag")
                Session("flag") = ""
                DealClicked(strHSBCID)
            Else
                Session.Remove("flag")
                DealClicked(Quote_ID)
            End If
            ''<Dilkhush:22Dec2015 config based GridAuto Refresh>
            Select Case objReadConfig.ReadConfig(dsConfig, "EQC_RealTime_Quote_History", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                Case "Y", "YES"
                    btnLoad_Click(sender, e)
                Case "N", "NO"
                    ''Do Nothing
            End Select
            ''btnLoad_Click(sender, e)
            ''</Dilkhush:22Dec2015 config based GridAuto Refresh>
            System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "stopTimerHSBCDeal", "StopPPTimerValue('" + btnHSBCDeal.ClientID + "');", True)
            btnHSBCPrice.Text = "Price"
            HsbcHiddenPrice.Value = ";Enable;Disable;Disable;Price"
            upnlChart.Update()
            ResetAll()
        Catch ex As Exception
            lblerror.Text = "btnHSBCDeal_Click:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnHSBCDeal_Click", ErrorLevel.High)
        End Try
    End Sub

    Public Sub btnUBSDeal_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnUBSDeal.Click
        Dim hashRFQID As Hashtable
        Dim hashPPId As Hashtable
        Try
            RestoreSolveAll()
            RestoreAll()
            hashPPId = New Hashtable
            hashRFQID = New Hashtable
            hashRFQID = CType(Session("Hash_Values"), Hashtable)
            hashPPId = CType(Session("PP_IdTable"), Hashtable)
            lblerror.Text = ""
            lblMsgPriceProvider.Text = ""
            If chk_DealValidations() = False Then
                Exit Sub
            End If
            Quote_ID = Convert.ToString(Session("UBSQuote"))
            Session.Remove("UBSQuote")
            rbHistory.SelectedValue = "Order History"
            If Convert.ToString(Session("flag")) = "I" Then
                Dim strUBSID As String
                strUBSID = CStr(hashRFQID(hashPPId("UBS")))
                Session.Remove("flag")
                Session("flag") = ""
                DealClicked(strUBSID)
                ''<Dilkhush:22Dec2015 config based GridAuto Refresh>
                Select Case objReadConfig.ReadConfig(dsConfig, "EQC_RealTime_Quote_History", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                    Case "Y", "YES"
                        btnLoad_Click(sender, e)
                    Case "N", "NO"
                        ''Do Nothing
                End Select
                ''btnLoad_Click(sender, e)
                ''</Dilkhush:22Dec2015 config based GridAuto Refresh>
            Else
                Session.Remove("flag")
                DealClicked(Quote_ID)
                ''<Dilkhush:22Dec2015 config based GridAuto Refresh>
                Select Case objReadConfig.ReadConfig(dsConfig, "EQC_RealTime_Quote_History", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                    Case "Y", "YES"
                        btnLoad_Click(sender, e)
                    Case "N", "NO"
                        ''Do Nothing
                End Select
                ''btnLoad_Click(sender, e)
                ''</Dilkhush:22Dec2015 config based GridAuto Refresh>
            End If
            System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "stopTimerUBSDeal", "StopPPTimerValue('" + btnUBSDeal.ClientID + "');", True)
            btnUBSPrice.Text = "Price"
            UbsHiddenPrice.Value = ";Enable;Disable;Disable;Price"
            upnlChart.Update()
            ResetAll()
        Catch ex As Exception
            lblerror.Text = "btnUBSDeal_Click:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnUBSDeal_Click", ErrorLevel.High)
        End Try
    End Sub

    Private Sub DealClicked(ByVal strId As String)
        Dim orderQuantity As String = ""
        Dim strType As String = ""
        Dim strLimitPrice1 As String = ""
        Dim strLimitPrice2 As String = ""
        Dim strLimitPrice3 As String = ""
        Dim strMargin As String = ""
        Dim strClientPrice As String = ""
        Dim strClientYield As String = ""
        Dim strBookingBranch As String = ""
        Dim strJavaScriptDealClicked As New StringBuilder
        Dim strRMNameforOrderConfirm As String = ""
        Dim strRMEmailIdforOrderConfirm As String = ""
        Dim strLoginUserEmail As String = ""
        Try
            fill_RFQRMList()    '''''Dilkhush 28Oct2016 Added to load RM on demand
            strJavaScriptDealClicked.AppendLine("StopTimer('" + lblTimer.ClientID + "','" + btnJPMDeal.ClientID + "');")
            strJavaScriptDealClicked.AppendLine("StopTimer('" + lblTimerHSBC.ClientID + "','" + btnHSBCDeal.ClientID + "');")
            strJavaScriptDealClicked.AppendLine("StopTimer('" + lblTimerCS.ClientID + "','" + btnCSDeal.ClientID + "');")
            strJavaScriptDealClicked.AppendLine("StopTimer('" + lblTimerBNPP.ClientID + "','" + btnBNPPDeal.ClientID + "');")
            strJavaScriptDealClicked.AppendLine("StopTimer('" + lblUBSTimer.ClientID + "','" + btnUBSDeal.ClientID + "');")
            strJavaScriptDealClicked.AppendLine("StopTimer('" + lblTimerDBIB.ClientID + "','" + btnDBIBDeal.ClientID + "');")
            strJavaScriptDealClicked.AppendLine("StopTimer('" + lblTimerOCBC.ClientID + "','" + btnOCBCDeal.ClientID + "');")
            strJavaScriptDealClicked.AppendLine("StopTimer('" + lblTimerCITI.ClientID + "','" + btnCITIDeal.ClientID + "');")
            strJavaScriptDealClicked.AppendLine("StopTimer('" + lblTimerLEONTEQ.ClientID + "','" + btnLEONTEQDeal.ClientID + "');")
            strJavaScriptDealClicked.AppendLine("StopTimer('" + lblTimerCOMMERZ.ClientID + "','" + btnCOMMERZDeal.ClientID + "');")
            strJavaScriptDealClicked.AppendLine("StopTimer('" + lblTimerBAML.ClientID + "','" + btnBAMLDeal.ClientID + "');")
            System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "strJavaScriptDealClicked", strJavaScriptDealClicked.ToString, True)
            lblerror.Text = ""
            strMargin = txtUpfrontPopUpValue.Text.Replace(",", "")
            strClientPrice = lblClientPricePopUpValue.Text
            strClientYield = ""
            strBookingBranch = ddlBookingBranchPopUpValue.SelectedValue
            ''orderQuantity = lblNotionalPopUpValue.Text
            orderQuantity = SetNumberFormat(lblNotionalPopUpValue.Text, 0) ''EQBOSDEV-228 Added by chaitali removing decimal
            strRMNameforOrderConfirm = ddlRM.SelectedValue
            If ddlOrderTypePopUpValue.SelectedItem.Text.ToUpper.Contains("LIMIT") Then
                ddlBasketSharesPopValue.Visible = True
                txtLimitPricePopUpValue.Width = New WebControls.Unit(75)
                ddlBasketSharesPopValue.Width = New WebControls.Unit(100)
                Select Case ddlBasketSharesPopValue.SelectedIndex
                    Case 0
                        strLimitPrice1 = CStr(Val(txtLimitPricePopUpValue.Text.Replace(",", "")))
                        strLimitPrice2 = ""
                        strLimitPrice3 = ""
                    Case 1
                        strLimitPrice1 = ""
                        strLimitPrice2 = CStr(Val(txtLimitPricePopUpValue.Text.Replace(",", "")))
                        strLimitPrice3 = ""
                    Case 2
                        strLimitPrice1 = ""
                        strLimitPrice2 = ""
                        strLimitPrice3 = CStr(Val(txtLimitPricePopUpValue.Text.Replace(",", "")))
                End Select
                strType = "Limit"
            Else
                ddlBasketSharesPopValue.Visible = False
                txtLimitPricePopUpValue.Width = New WebControls.Unit(175)
                strLimitPrice1 = CStr(Val(txtLimitPricePopUpValue.Text.Replace(",", "")))
                strLimitPrice2 = ""
                strLimitPrice3 = ""
                strType = "Market"
            End If
            strLoginUserEmail = objELNRFQ.web_Get_EmailOf_Login_User(LoginInfoGV.Login_Info.LoginId)
            If (lblEmail.Text.Trim <> strLoginUserEmail.Trim) And (lblEmail.Text.Trim <> "") Then
                strRMEmailIdforOrderConfirm = strLoginUserEmail & "," & lblEmail.Text
            Else
                strRMEmailIdforOrderConfirm = strLoginUserEmail
            End If
            Dim count As Integer = 0
            Dim sPoolID As String
            sPoolID = "0"
            If Not IsNothing(Request.QueryString("EXTLOD")) Then
                If UCase(Request.QueryString("EXTLOD")) = "HEDGE" Then
                    If Not IsNothing(Request.QueryString("PoolID")) Then
                        sPoolID = Request.QueryString("PoolID")
                    End If
                End If
            End If
            Dim sRedirectOrderID As String
            sRedirectOrderID = "0"
            If Not IsNothing(Request.QueryString("EXTLOD")) Then
                If UCase(Request.QueryString("EXTLOD")) = "REDIRECTEDHEDGE" Then
                    If Not IsNothing(Request.QueryString("RedirectedOrderId")) Then
                        sRedirectOrderID = Request.QueryString("RedirectedOrderId")
                    End If
                End If
            End If


            ''<Added by Rushikesh on 17-Sep-16 SCB requirement Pretrade Allocation>
            Dim strPreTradeXml As StringBuilder
            strPreTradeXml = savePretradeAllocation(strId)
            ''If savePretradeAllocation(strId) Then
            ''Else
            ''    Exit Sub
            ''End If
            ''<Added by Rushikesh on 17-Sep-16 SCB requirement Pretrade Allocation>



            Dim sOrderComment As String = ""
            sOrderComment = txtOrderCmt.Text.Trim
            ''<Start | Nikhil M. on 16-Sep-2016: Added for Deal confirmation reason>
            Dim strConfirmReason As String = ""
            ''strConfirmReason = drpConfirmDeal.SelectedText.ToString
            ''<End | Nikhil M. on 16-Sep-2016: Added for Deal confirmation reason>
            Select Case objELNRFQ.web_Get_orderPlaced_with_Margin_Price_Yield(orderQuantity.Replace(",", ""), strType, strLimitPrice1, strLimitPrice2, strLimitPrice3, _
                                                                              strId, sPoolID, sRedirectOrderID, LoginInfoGV.Login_Info.LoginId, sOrderComment, strMargin, strClientPrice, _
                                                                              strClientYield, strBookingBranch, _
                                                                              strRMNameforOrderConfirm, strRMEmailIdforOrderConfirm, strConfirmReason, strPreTradeXml.ToString) ''<Nikhil M. on 16-Sep-2016: Added "strConfirmReason"  Parameter >
                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                    lblerror.Text = "Order requested for RFQ " & strId
                    lblerror.ForeColor = Color.Blue
                    ShowHideConfirmationPopup(False)
                    If rbHistory.SelectedValue = "Order History" Then
                        fill_OrderGrid()
                        makeThisGridVisible(grdOrder)
                        ColumnVisibility()
                        upnlGrid.Update()
                    End If
                Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
            End Select
            btnJPMprice.Text = "Price"
            btnJPMDeal.CssClass = "btnDisabled"
            btnHSBCPrice.Text = "Price"
            btnHSBCDeal.CssClass = "btnDisabled"
            btnCSPrice.Text = "Price"
            btnCSDeal.CssClass = "btnDisabled"
            btnBNPPPrice.Text = "Price"
            btnBNPPDeal.CssClass = "btnDisabled"
            btnUBSPrice.Text = "Price"
            btnUBSDeal.CssClass = "btnDisabled"
            btnBAMLPrice.Text = "Price"
            btnBAMLDeal.CssClass = "btnDisabled"

            btnDBIBPrice.Text = "Price"
            btnDBIBDeal.CssClass = "btnDisabled"

            btnOCBCPrice.Text = "Price"
            btnOCBCDeal.CssClass = "btnDisabled"

            btnCITIPrice.Text = "Price"
            btnCITIDeal.CssClass = "btnDisabled"

            btnLEONTEQPrice.Text = "Price"
            btnLEONTEQDeal.CssClass = "btnDisabled"

            btnCOMMERZPrice.Text = "Price"
            btnCOMMERZDeal.CssClass = "btnDisabled"

            btnBNPPDeal.Visible = False
            btnBAMLDeal.Visible = False
            btnCSDeal.Visible = False
            btnJPMDeal.Visible = False
            btnHSBCDeal.Visible = False
            btnUBSDeal.Visible = False

            btnDBIBDeal.Visible = False
            btnOCBCDeal.Visible = False
            btnCITIDeal.Visible = False
            btnLEONTEQDeal.Visible = False
            btnCOMMERZDeal.Visible = False

            txtOrderDRAFCN.Enabled = True
            '<ashwiniP Start 21Sept16>
            lblTotalAmt.Visible = False
            lblTotalAmtVal.Visible = False
            lblAlloAmt.Visible = False
            lblAlloAmtVal.Visible = False
            lblRemainNotional.Visible = False
            lblRemainNotionalVal.Visible = False
            '<ashwiniP End>
            If UCase(Request.QueryString("EXTLOD")) = "REPRICEPOOL" Or UCase(Request.QueryString("EXTLOD")) = "HEDGE" Then
                EnableDisableForOrderPoolData(Convert.ToString(Session("DRARePricePPName")))
            End If
        Catch ex As Exception
            lblerror.Text = "DealClicked:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "DealClicked", ErrorLevel.High)
            Throw ex
        Finally

        End Try
    End Sub
#End Region

#Region "Tenor & DateCalcutaion"
  
    Private Sub txtTenorDRA_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtTenorDRA.TextChanged
        Dim TenorDRAInDays As Integer = 0
        Dim strTenorDRAType As String = String.Empty
        Dim TenorDRA As Integer = 0
        Try
            lblerror.Text = ""
            If ValidateTenor() = False Then   ''AshwiniP on 09-Nov-2016
                Exit Sub
            Else
                GetCommentary_DRA()
                Enable_Disable_Deal_Buttons()
                If SetFrequencytype(ddlTenorTypeDRA.SelectedValue.Trim.ToUpper, txtTenorDRA.Text.Trim, ddlKIFrequency.SelectedValue.Trim) Then
                Else
                    lblerror.Text = "Frequency is not valid."
                End If
                ResetAll()
            End If
        Catch ex As Exception
            lblerror.Text = "txtTenorDRA_TextChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "txtTenorDRA_TextChanged", ErrorLevel.High)
            Throw ex
        End Try
    End Sub
    ''AshwiniP on 09-Nov-2016
    Public Sub Disablebuttons()
        Try
            btnSolveAll.Enabled = False
            btnSolveAll.CssClass = "btnDisabled"
            btnCSPrice.Enabled = False
            btnCSPrice.CssClass = "btnDisabled"
            btnJPMprice.Enabled = False
            btnJPMprice.CssClass = "btnDisabled"
            btnBAMLPrice.Enabled = False
            btnBAMLPrice.CssClass = "btnDisabled"
            btnBNPPPrice.Enabled = False
            btnBNPPPrice.CssClass = "btnDisabled"
            btnUBSPrice.Enabled = False
            btnUBSPrice.CssClass = "btnDisabled"
            btnHSBCPrice.Enabled = False
            btnHSBCPrice.CssClass = "btnDisabled"
            btnDBIBPrice.Enabled = False
            btnDBIBPrice.CssClass = "btnDisabled"
            btnOCBCprice.Enabled = False
            btnOCBCprice.CssClass = "btnDisabled"
            btnCITIprice.Enabled = False
            btnCITIprice.CssClass = "btnDisabled"
            btnLEONTEQprice.Enabled = False
            btnLEONTEQprice.CssClass = "btnDisabled"
            btnCOMMERZprice.Enabled = False
            btnCOMMERZprice.CssClass = "btnDisabled"
        Catch ex As Exception
            lblerror.Text = "Disablebuttons:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "txtTenor_TextChanged", ErrorLevel.High)
        End Try
    End Sub
    ''AshwiniP on 09-Nov-2016: Config to allow tenor in months <START>
    Public Function ValidateTenor() As Boolean
        Try


            Dim interval1 As String = ddlTenorTypeDRA.SelectedValue
            If interval1 = "MONTH" Then
                interval1 = "M"
            ElseIf interval1 = "YEAR" Then
                interval1 = "Y"
            End If
            Dim monthcount As Integer = 0
            If interval1 = "Y" And CDbl(txtTenorDRA.Text) = 1 Then
                monthcount = 12
            ElseIf interval1 = "Y" And CDbl(txtTenorDRA.Text) <> 1 Then
                lblerror.Text = "Please enter valid tenor."
                Disablebuttons()
                Exit Function
            Else
                monthcount = CInt(txtTenorDRA.Text)
            End If
            Dim max_months As Integer = 0

            If ddlDRAType.SelectedValue.ToUpper = "FCN" Then
                max_months = CInt(objReadConfig.ReadConfig(dsConfig, "FCN_AllowedTenorInMonths", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "12").Trim.ToUpper())
            ElseIf ddlDRAType.SelectedValue.ToUpper = "DRA" Then
                max_months = CInt(objReadConfig.ReadConfig(dsConfig, "DRA_AllowedTenorInMonths", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "12").Trim.ToUpper())
            End If

            If monthcount > max_months Then
                lblerror.Text = "Please enter valid tenor."
                Disablebuttons()
                Exit Function
            End If

            ''<END>
            Return True

        Catch ex As Exception
            lblerror.Text = "ValidateTenor:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "ValidateTenor", ErrorLevel.High)
        End Try
    End Function

    Private Sub ddlTenorTypeDRA_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlTenorTypeDRA.SelectedIndexChanged
        Try
            lblerror.Text = ""
            If ValidateTenor() = False Then   ''AshwiniP on 09-Nov-2016
                Exit Sub
            Else
                GetCommentary_DRA()
                Enable_Disable_Deal_Buttons()
                If SetFrequencytype(ddlTenorTypeDRA.SelectedValue.Trim.ToUpper, txtTenorDRA.Text.Trim, ddlKIFrequency.SelectedValue.Trim) Then
                Else
                    lblerror.Text = "Frequency is not valid."
                End If
                ResetAll()
            End If
        Catch ex As Exception
            lblerror.Text = "ddlTenorTypeDRA_SelectedIndexChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "ddlTenorTypeDRA_SelectedIndexChanged", ErrorLevel.High)
        End Try
    End Sub


    Private Sub ddlDRAType_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlDRAType.SelectedIndexChanged
        Try
            lblerror.Text = ""
            Select Case ddlDRAType.SelectedValue.ToUpper
                Case "DRA"
                    txtGuPeriod.Enabled = True
                    lblGUPeriod.Visible = True
                    txtGuPeriod.Visible = True
                    lblGUType.Visible = True
                    lblAcc.Visible = True
                    lblAccSameasstrike.Visible = True
                Case "FCN"
                    txtGuPeriod.Text = ""
                    txtGuPeriod.Enabled = False
                    lblGUPeriod.Visible = False
                    txtGuPeriod.Visible = False
                    lblGUType.Visible = False
                    lblAcc.Visible = False
                    lblAccSameasstrike.Visible = False
            End Select
            clearFields()
            GetCommentary_DRA()
            Enable_Disable_Deal_Buttons()
            ResetAll()
            '<AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
            'getRange()
            '</AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
        Catch ex As Exception
            lblerror.Text = Exception(ex)
            lblerror.Text = "ddlDRAType_SelectedIndexChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "ddlDRAType_SelectedIndexChanged", ErrorLevel.High)

        End Try
    End Sub


#End Region

#Region "Timer,Button Visibility"

    Public Sub ColumnVisibility()
        Try
            If rbHistory.SelectedValue.Trim = "Quote History" Then
                makeThisGridVisible(grdDRAFCN)
                fill_DRA_FCN_Grid()
            ElseIf rbHistory.SelectedValue.Trim = "Order History" Then
                makeThisGridVisible(grdOrder)
                grdOrder.Columns(grdOrderEnum.EP_OfferPrice).Visible = True
                grdOrder.Columns(grdOrderEnum.EP_Upfront).Visible = False
                grdOrder.Columns(grdOrderEnum.EP_CouponPercentage).Visible = True
                grdOrder.Columns(grdOrderEnum.EP_Notional_Amount1).Visible = False
                grdOrder.Columns(grdOrderEnum.LimitPrice2).Visible = True
                grdOrder.Columns(grdOrderEnum.LimitPrice3).Visible = True
                grdOrder.Columns(grdOrderEnum.EP_Execution_Price1).Visible = True
                grdOrder.Columns(grdOrderEnum.EP_Execution_Price2).Visible = True
                grdOrder.Columns(grdOrderEnum.EP_Execution_Price3).Visible = True
                grdOrder.Columns(grdOrderEnum.EP_Client_Price).Visible = True
                grdOrder.Columns(grdOrderEnum.EP_Client_Yield).Visible = False
                grdOrder.Columns(grdOrderEnum.EP_RM_Margin).Visible = True
                grdOrder.Columns(grdOrderEnum.EP_AveragePrice).Visible = True
                grdOrder.Columns(grdOrderEnum.ER_GuaranteedDuration).Visible = False
                grdOrder.Columns(grdOrderEnum.ER_LeverageRatio).Visible = False
                grdOrder.Columns(grdOrderEnum.EP_KO).Visible = True
                grdOrder.Columns(grdOrderEnum.EP_ExternalQuoteId).Visible = True
                grdOrder.DataBind()
            End If
            upnlGrid.Update()
        Catch ex As Exception
            lblerror.Text = "ColumnVisibility:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "ColumnVisibility", ErrorLevel.High)
            Throw ex

        End Try
    End Sub
#End Region


#Region "Grid Data Bound,PageIndex,sort"
    'Mohit Lalwani on 22-Jan-2015
    Private Sub grdOrder_ItemCommand(ByVal source As Object, ByVal e As System.Web.UI.WebControls.DataGridCommandEventArgs) Handles grdOrder.ItemCommand
        Try
            If e.Item.ItemType = ListItemType.AlternatingItem OrElse e.Item.ItemType = ListItemType.Item OrElse e.Item.ItemType = ListItemType.EditItem OrElse e.Item.ItemType = ListItemType.SelectedItem Then
                If e.CommandName.ToUpper = "GETORDERDETAILS" Then

                    Label47.Text = "Issuer Order Remark"  'Added by Mohit/Rushi on 02-May-2016 FA-1420

                    ShowHideDeatils(True)
                    lblDetails.Text = "Order Details"
                    pnlDetailsPopup.Visible = True
                    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                    trDraAvgExePrc.Visible = True
                    trDraExePrc1.Visible = True
                    trDraExePrc2.Visible = True
                    trDraExePrc3.Visible = True
                    trDraLimitPrice.Visible = True
                    trDraOrderStatus.Visible = True
                    trDraOrderType.Visible = True
                    trDraSpot1.Visible = True
                    trDRAQuoteStatus.Visible = False
                    lblAlloDraOrderStatus.Text = ""
                    lblAlloDraType.Text = ""
                    lblAlloDraRFQID.Text = ""
                    lblAlloDraCp.Text = ""
                    lblAlloDraUnderlying.Text = ""
                    lblAlloDraNoteCcy.Text = ""
                    lblAlloDraStrike.Text = ""
                    lblAlloDraKIper.Text = ""
                    lblAlloDraKOper.Text = ""
                    lblAlloDraTenor.Text = ""
                    lblAlloDraPrice.Text = ""
                    lblAlloDraUpfront.Text = ""
                    lblAlloDraClientprice.Text = ""
                    lblAlloDraCoupon.Text = ""
                    lblAlloDraCouponFrequency.Text = ""
                    lblAlloDraGuarantee.Text = ""
                    lblAlloDraOrderSize.Text = ""
                    lblAlloDraOrderType.Text = ""
                    lblAlloDraLimitPrice.Text = ""
                    lblAlloDraRemarks.Text = ""
                    lblAlloDraSubmittedby.Text = ""
                    lblAlloDraExePrc1.Text = ""
                    lblAlloDraExePrc2.Text = ""
                    lblAlloDraExePrc3.Text = ""
                    lblAlloDraAvgExePrc.Text = ""
                    lblAlloDraSpot1.Text = ""
                    ''</added by Rushikesh on 29-Dec-15 to flush old value>
                    lblAlloDraOrderStatus.Text = grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.Order_Status).Text
                    lblAlloDraType.Text = grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.ER_Type).Text
                    lblAlloDraRFQID.Text = grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.ER_QuoteRequestId).Text
                    lblAlloDraCp.Text = grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.PP_CODE).Text
                    lblAlloDraUnderlying.Text = grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.ER_UnderlyingCode).Text
                    lblAlloDraNoteCcy.Text = grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.ER_CashCurrency).Text
                    lblAlloDraStrike.Text = grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.EP_StrikePercentage).Text
                    'Mohit 28-Dec-2015
                    If grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.ER_KI_Level).Text.Trim <> "" And grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.ER_KI_Level).Text.Trim <> "&nbsp;" And grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.ER_KI_Level).Text.Trim <> "0" Then
                        'Mohit 28-Dec-2015
                        lblAlloDraKIper.Text = SetNumberFormat(grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.ER_KI_Level).Text, 2) + "&nbsp(" + grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.ER_KI_Type).Text + ")"
                    Else
                    End If
                    'Mohit 28-Dec-2015
                    If grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.EP_KO).Text.Trim <> "" And grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.EP_KO).Text.Trim <> "&nbsp;" And grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.EP_KO).Text.Trim <> "0" Then
                        lblAlloDraKOper.Text = SetNumberFormat(grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.EP_KO).Text, 2) + "&nbsp(" + grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.ER_KO_Type).Text + ")"   'Mohit Lalwnai on 2-Feb-2016
                    Else
                    End If


                    lblAlloDraTenor.Text = grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.ER_Tenor).Text + "&nbsp;Month(s)"
                    lblAlloDraPrice.Text = grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.EP_OfferPrice).Text
                    lblAlloDraUpfront.Text = grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.EP_RM_Margin).Text         'Mohit Lalwani 27-Jan-2016	EQBOSDEV-230 - Main page blotter also give a vertical view of the order upon clicking
                    lblAlloDraClientprice.Text = SetNumberFormat(grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.EP_Client_Price).Text, 2)
                    lblAlloDraCoupon.Text = grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.EP_CouponPercentage).Text
                    lblAlloDraCouponFrequency.Text = grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.ER_KI_ObservationFrequency).Text

                    If grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.ER_Type).Text = "DRA" Then
                        AlloDraGuarantee.Visible = True
                        lblAlloDraGuarantee.Text = grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.ER_GuaranteedDuration).Text
                    Else
                        AlloDraGuarantee.Visible = False
                        '  lblAlloDraGuarantee.Text = item("GuaranteedDuration").Text
                    End If


                    ' lblAlloDraGuarantee.Text = item("GuaranteedDuration").Text
                    lblAlloDraOrderSize.Text = grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.Ordered_Qty).Text
                    lblAlloDraOrderType.Text = grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.ELN_Order_Type).Text
                    lblAlloDraLimitPrice.Text = grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.LimitPrice1).Text
                    ''lblAlloDraSpot1.Text = item("Quote_Request_ID").Text
                    ''lblAlloDraSpot2.Text = item("Quote_Request_ID").Text
                    ''lblAlloDraSpot3.Text = item("Quote_Request_ID").Text
                    lblAlloDraRemarks.Text = grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.EP_Order_Remark1).Text
                    Select Case objReadConfig.ReadConfig(dsConfig, "EQC_CaptureOrderComment", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper
                        Case "Y", "YES"
                            trDraOrderComment.Visible = True
                            lblAlloDraOrderComment.Text = grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.EP_OrderComment).Text
                        Case "N", "NO"
                            trDraOrderComment.Visible = False
                            lblAlloDraOrderComment.Text = ""
                    End Select


                    lblAlloDraSubmittedby.Text = grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.ER_Created_By).Text

                    lblAlloDraExePrc1.Text = grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.EP_Execution_Price1).Text
                    lblAlloDraExePrc2.Text = grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.EP_Execution_Price2).Text
                    lblAlloDraExePrc3.Text = grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.EP_Execution_Price3).Text
                    lblAlloDraAvgExePrc.Text = grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.EP_AveragePrice).Text


                    If grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.ELN_Order_Type).Text.ToUpper = "LIMIT" Then
                        Dim sLimitPrc As String = ""
                        Dim lim1, lim2, lim3 As String
                        Dim stosksLost(3) As String
                        stosksLost = grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.ER_UnderlyingCode).Text.Split(CChar(","))
                        lim1 = FormatNumber(Replace(grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.LimitPrice1).Text, "&nbsp;", "0"), 2)
                        lim2 = FormatNumber(Replace(grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.LimitPrice2).Text, "&nbsp;", "0"), 2)
                        lim3 = FormatNumber(Replace(grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.LimitPrice3).Text, "&nbsp;", "0"), 2)
                        If lim1 <> "&nbsp;" And lim1 <> "0.00" And lim1 <> "" Then
                            sLimitPrc = lim1 + " (" + stosksLost(0) + ")"
                        ElseIf lim2 <> "&nbsp;" And lim2 <> "0.00" And lim2 <> "" Then
                            sLimitPrc = lim2 + " (" + stosksLost(1) + ")"
                        ElseIf lim3 <> "&nbsp;" And lim3 <> "0.00" And lim3 <> "" Then
                            sLimitPrc = lim3 + " (" + stosksLost(2) + ")"
                        End If
                        lblAlloDraSpot1.Visible = True
                        lblAlloDraSpot1.Text = sLimitPrc
                    Else
                        lblAlloDraSpot1.Visible = False
                    End If

                    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                    upnlDetails.Update()
                ElseIf e.CommandName.ToUpper = "GENERATEDOCUMENT" Then
                    Generate_Deal(grdOrder.Items(e.Item.ItemIndex).Cells(grdOrderEnum.ER_QuoteRequestId).Text)
                    '/Added by Mohit lalwani on 14-Mar-2016 
                End If
            End If
        Catch ex As Exception
            lblerror.Text = "grdOrder_ItemCommand:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "grdOrder_ItemCommand", ErrorLevel.High)
        End Try
    End Sub
    '/Mohit Lalwani on 22-Jan-2015
    Private Sub grdOrder_ItemDataBound(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.DataGridItemEventArgs) Handles grdOrder.ItemDataBound
        Try
            If e.Item.ItemType = ListItemType.AlternatingItem Or e.Item.ItemType = ListItemType.Item Or e.Item.ItemType = ListItemType.EditItem Then
                If e.Item.Cells(grdOrderEnum.Ordered_Qty).Text <> "&nbsp;" Then
                    e.Item.Cells(grdOrderEnum.Ordered_Qty).Text = SetNumberFormat(e.Item.Cells(grdOrderEnum.Ordered_Qty).Text, 0)  ''EQBOSDEV-228  Replaced '2' by '0' on 21-jan-16 for removing decimals from notional by chaitali F
                End If
                If e.Item.Cells(grdOrderEnum.Filled_Qty).Text <> "&nbsp;" Then
                    e.Item.Cells(grdOrderEnum.Filled_Qty).Text = SetNumberFormat(e.Item.Cells(grdOrderEnum.Filled_Qty).Text, 0) ''EQBOSDEV-228 Added by chaitali removing decimal
                End If
                If e.Item.Cells(grdOrderEnum.EP_OfferPrice).Text <> "&nbsp;" Then
                    e.Item.Cells(grdOrderEnum.EP_OfferPrice).Text = SetNumberFormat(e.Item.Cells(grdOrderEnum.EP_OfferPrice).Text, 2)
                End If
                If e.Item.Cells(grdOrderEnum.EP_StrikePercentage).Text <> "&nbsp;" Then
                    e.Item.Cells(grdOrderEnum.EP_StrikePercentage).Text = SetNumberFormat(e.Item.Cells(grdOrderEnum.EP_StrikePercentage).Text, 2)
                End If
                If e.Item.Cells(grdOrderEnum.EP_AveragePrice).Text <> "&nbsp;" Then
                    '<AvinashG. on 11-Mar-2016: FA1363 Roundiing from 4->5 >
                    '' e.Item.Cells(grdOrderEnum.EP_AveragePrice).Text = SetNumberFormat(e.Item.Cells(grdOrderEnum.EP_AveragePrice).Text, 4)
                    e.Item.Cells(grdOrderEnum.EP_AveragePrice).Text = SetNumberFormat(e.Item.Cells(grdOrderEnum.EP_AveragePrice).Text, 5)
                    '<AvinashG. on 11-Mar-2016: FA1363 Roundiing from 4->5 >
                End If
                If e.Item.Cells(grdOrderEnum.EP_CouponPercentage).Text <> "&nbsp;" Then
                    e.Item.Cells(grdOrderEnum.EP_CouponPercentage).Text = SetNumberFormat(e.Item.Cells(grdOrderEnum.EP_CouponPercentage).Text, 2)
                End If

                If e.Item.Cells(grdOrderEnum.EP_Notional_Amount1).Text <> "&nbsp;" Then
                    e.Item.Cells(grdOrderEnum.EP_Notional_Amount1).Text = SetNumberFormat(e.Item.Cells(grdOrderEnum.EP_Notional_Amount1).Text, 0)  '' EQBOSDEV-228 Replaced '2' by '0' on 21-jan-16 for removing decimals from notional by chaitali F
                End If
                If e.Item.Cells(grdOrderEnum.LimitPrice1).Text <> "&nbsp;" Then
                    e.Item.Cells(grdOrderEnum.LimitPrice1).Text = SetNumberFormat(e.Item.Cells(grdOrderEnum.LimitPrice1).Text, 4) ''16April:Changed from 2 digit to 4 digit decimal,told by Kalyan
                End If
                If e.Item.Cells(grdOrderEnum.LimitPrice2).Text <> "&nbsp;" Then
                    e.Item.Cells(grdOrderEnum.LimitPrice2).Text = SetNumberFormat(e.Item.Cells(grdOrderEnum.LimitPrice2).Text, 4) ''16April:Changed from 2 digit to 4 digit decimal,told by Kalyan
                End If
                If e.Item.Cells(grdOrderEnum.LimitPrice3).Text <> "&nbsp;" Then
                    e.Item.Cells(grdOrderEnum.LimitPrice3).Text = SetNumberFormat(e.Item.Cells(grdOrderEnum.LimitPrice3).Text, 4) ''16April:Changed from 2 digit to 4 digit decimal,told by Kalyan
                End If
                If e.Item.Cells(grdOrderEnum.EP_Execution_Price1).Text <> "&nbsp;" Then
                    e.Item.Cells(grdOrderEnum.EP_Execution_Price1).Text = SetNumberFormat(e.Item.Cells(grdOrderEnum.EP_Execution_Price1).Text, 4) ''KBM on 24-March, changed to 4 decimal
                End If
                If e.Item.Cells(grdOrderEnum.EP_Execution_Price2).Text <> "&nbsp;" Then
                    e.Item.Cells(grdOrderEnum.EP_Execution_Price2).Text = SetNumberFormat(e.Item.Cells(grdOrderEnum.EP_Execution_Price2).Text, 4) ''KBM on 24-March, changed to 4 decimal
                End If
                If e.Item.Cells(grdOrderEnum.EP_Execution_Price3).Text <> "&nbsp;" Then
                    e.Item.Cells(grdOrderEnum.EP_Execution_Price3).Text = SetNumberFormat(e.Item.Cells(grdOrderEnum.EP_Execution_Price3).Text, 4) ''KBM on 24-March, changed to 4 decimal
                End If
                If e.Item.Cells(grdOrderEnum.EP_Client_Price).Text <> "&nbsp;" Then
                    e.Item.Cells(grdOrderEnum.EP_Client_Price).Text = SetNumberFormat(e.Item.Cells(grdOrderEnum.EP_Client_Price).Text, 2)
                End If
                If e.Item.Cells(grdOrderEnum.EP_RM_Margin).Text <> "&nbsp;" Then
                    e.Item.Cells(grdOrderEnum.EP_RM_Margin).Text = SetNumberFormat(e.Item.Cells(grdOrderEnum.EP_RM_Margin).Text, 2)
                End If
                        If e.Item.Cells(grdOrderEnum.EP_KO).Text <> "&nbsp;" Then
                            e.Item.Cells(grdOrderEnum.EP_KO).Text = SetNumberFormat(e.Item.Cells(grdOrderEnum.EP_KO).Text, 2)
            End If
            End If
        Catch ex As Exception
            lblerror.Text = "grdOrder_ItemDataBound:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "grdOrder_ItemDataBound", ErrorLevel.High)

        End Try
    End Sub

    Private Sub grdOrder_PageIndexChanged(ByVal source As Object, ByVal e As System.Web.UI.WebControls.DataGridPageChangedEventArgs) Handles grdOrder.PageIndexChanged
        Dim dtGrid As New DataTable("Dummy")
        Try
            grdOrder.EditItemIndex = -1
            grdOrder.CurrentPageIndex = e.NewPageIndex
            dtGrid = CType(Session("Order"), DataTable)
            grdOrder.DataSource = dtGrid
            grdOrder.DataBind()
            grdOrder.Visible = True
        Catch ex As Exception
            lblerror.Text = "grdOrder_PageIndexChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "grdOrder_PageIndexChanged", ErrorLevel.High)
        End Try
    End Sub

    Private Sub grdDRAFCN_ItemCommand(ByVal source As Object, ByVal e As System.Web.UI.WebControls.DataGridCommandEventArgs) Handles grdDRAFCN.ItemCommand
        Dim strNewTenorDRA As String = String.Empty
        Dim strNewTenorDRAType As String = String.Empty
        Dim strNewDurationDRA As String = String.Empty
        Dim strNewDurationTypeDRA As String = String.Empty
        Dim lblAdvisoryFlagValue As String = String.Empty
        Try
            lblMsgPriceProvider.Text = ""
            lblerror.Text = ""

            If e.Item.ItemType = ListItemType.AlternatingItem Or e.Item.ItemType = ListItemType.Item Or e.Item.ItemType = ListItemType.EditItem OrElse e.Item.ItemType = ListItemType.SelectedItem Then
                If e.CommandName.ToUpper = "SELECT" Then
                ShowHideConfirmationPopup(False)
                ResetAll()
                    grdDRAFCN.SelectedItemStyle.BackColor = Color.FromArgb(242, 242, 243)
                Dim strDRASolveFor As String = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.Solve_For).Text
                If strDRASolveFor = "Strike(%)" Then
                    ddlSolveForDRA.SelectedValue = "CONVERSION_STRIKE"
                    txtStrikeDRAFCN.Text = ""
                    txtStrikeDRAFCN.Enabled = False
                    txtDRAPrice.Enabled = True
                    txtCoupon.Enabled = True
                    lblSolveForType.Text = "Strike / Acc (%)"
                ElseIf strDRASolveFor = "Coupon(%)" Then
                    ddlSolveForDRA.SelectedValue = "COUPON"
                    txtCoupon.Text = ""
                    txtCoupon.Enabled = False
                    txtDRAPrice.Enabled = True
                    txtStrikeDRAFCN.Enabled = True
                    lblSolveForType.Text = "Coupon (%)"
                Else
                    ddlSolveForDRA.SelectedValue = "PRICE"
                    txtDRAPrice.Text = ""
                    txtDRAPrice.Enabled = False
                    txtCoupon.Enabled = True
                    txtStrikeDRAFCN.Enabled = True
                    lblSolveForType.Text = "IB Price (%)"
                End If
                Dim strDRAPrice As String = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.Price_Per).Text
                If strDRAPrice = "&nbsp;" Then
                        txtDRAPrice.Text = "0.00"
                Else
                    txtDRAPrice.Text = strDRAPrice
                    End If
                    ''<Dilkhush 11Jan2016 on grid selection calculate Upfront as per config>
                    '<AvinashG. on 27-Jun-2015:  FA-911 - EQ RFQ and Order: At par lock for DRA FCN, BOS Requirement>
                    Select Case objReadConfig.ReadConfig(dsConfig, "EQC_Follow_AtPar_Lock", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper
                        Case "Y", "YES"
                            If ddlSolveForDRA.SelectedValue.ToUpper <> "PRICE" Then
                                txtUpfrontDRA.Text = SetNumberFormat((100 - Convert.ToDouble(txtDRAPrice.Text)).ToString, 2) ''Rushikesh 27Nov2015: Formating
                                txtUpfrontDRA.Enabled = True ''<Rushikesh D. on 15-May16 EQBOSDEV-360>
                            Else
                                ''<Rushikesh D. on 15-May16 EQBOSDEV-360>
                                txtUpfrontDRA.Text = "0.00"
                                txtUpfrontDRA.Enabled = False
                                ''</Rushikesh D. on 15-May16 EQBOSDEV-360>
                            End If
                        Case "N", "NO"

                    End Select
                    '</AvinashG. on 27-Jun-2015:  FA-911 - EQ RFQ and Order: At par lock for DRA FCN, BOS Requirement>
                    ''</Dilkhush 11Jan2016 on grid selection calculate Upfront as per config>


                Dim strDRAStrike As String = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.Strike_Per).Text
                If strDRAStrike = "&nbsp;" Then
                        txtStrikeDRAFCN.Text = "0.00"
                Else
                    txtStrikeDRAFCN.Text = strDRAStrike
                End If
                Dim strDRACoupon As String = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.Coupon_Per).Text
                If strDRACoupon = "&nbsp;" Then
                        txtCoupon.Text = "0.00"
                Else
                    txtCoupon.Text = strDRACoupon
                End If
                Dim strDRAShare As String = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.Share).Text
                ddlExchangeDRAFCN.Items.Clear()
                ddlExchangeDRAFCN.DataSource = Nothing
                ddlExchangeDRAFCN.DataBind()
                ddlExchangeDRAFCN.Enabled = False
                ddlShareDRA.Enabled = False
                ddlShareDRA.Items.Clear()
                    'ddlShareDRA.DataSource = Nothing
                    'ddlShareDRA.DataBind()
                ddlShareDRA.Text = ""
                lblDRABaseCcy.Text = ""
                chkAddShare2.Checked = False
                ddlExchangeDRAFCN2.Items.Clear()
                ddlExchangeDRAFCN2.DataSource = Nothing
                ddlExchangeDRAFCN2.DataBind()
                ddlExchangeDRAFCN2.Enabled = False
                ddlShareDRA2.Enabled = False
                ddlShareDRA2.Items.Clear()
                    'ddlShareDRA2.DataSource = Nothing
                    'ddlShareDRA2.DataBind()
                lblBaseCurrency2.Text = ""
                chkAddShare3.Checked = False
                ddlExchangeDRAFCN3.Items.Clear()
                ddlExchangeDRAFCN3.DataSource = Nothing
                ddlExchangeDRAFCN3.DataBind()
                ddlExchangeDRAFCN3.Enabled = False
                ddlShareDRA3.Enabled = False
                ddlShareDRA3.Items.Clear()
                    'ddlShareDRA3.DataSource = Nothing
                    'ddlShareDRA3.DataBind()
                ddlShareDRA3.Text = ""
                lblBaseCurrency3.Text = ""
                Dim arrExchanges As String()
                Dim arrShares As String()
                Dim dtBaseCCY As DataTable
                    Dim dt As DataTable
                arrExchanges = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.Exchange).Text.Split(CChar(","))
                arrShares = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.Share).Text.Split(CChar(","))
                If arrExchanges.Length > 0 Then
                    chkAddShare1.Checked = True
                    chkAddShare1_CheckedChanged(Nothing, Nothing)
                    ddlExchangeDRAFCN.Enabled = True
                    ddlShareDRA.Enabled = True
                        FillDRAddl_exchange(ddlExchangeDRAFCN)
                        setShare1(arrExchanges(0), arrShares(0))
                    Select Case objReadConfig.ReadConfig(dsConfig, "EQC_Allow_ALL_AsExchangeOption", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                        Case "Y", "YES"
                                '' ddlShareDRA.SelectedIndex = ddlShareDRA.Items.IndexOf(ddlShareDRA.Items.FindItemByValue(arrShares(0)))
                                ''   ddlShareDRA.Text = ddlShareDRA.Text
                            lblExchangeDRAFCN.Text = setExchangeByShare(ddlShareDRA)
                        Case "N", "NO"
                            Try
                                ddlExchangeDRAFCN.SelectedValue = arrExchanges(0)
                            Catch ex As Exception
                                lblerror.Text = "Exchange missing from setup."
                            End Try
                                ''fill_DRA_FCN_Share()
                                ''ddlShareDRA.SelectedIndex = ddlShareDRA.Items.IndexOf(ddlShareDRA.Items.FindItemByValue(arrShares(0)))
                                ''   ddlShareDRA.Text = ddlShareDRA.Text
                            lblExchangeDRAFCN.Text = setExchangeByShare(ddlShareDRA)
                        End Select
                        If ddlShareDRA.SelectedItem IsNot Nothing Then
                            ddlShareDRA.Text = ddlShareDRA.SelectedItem.Text
                        End If
                    dtBaseCCY = New DataTable("BaseCcy")
		     ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                        Select Case objELNRFQ.DB_GetBASECCY(ddlShareDRA.SelectedValue, dtBaseCCY)
                            Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                                lblDRABaseCcy.Text = dtBaseCCY.Rows(0)(0).ToString
                            Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                            Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                        End Select
			      ''AshwiniP on 23Sept2016
                        dt = New DataTable("Dummy")
                        Select Case objELNRFQ.DB_UnderlyingRiskRatingShare(ddlShareDRA.SelectedValue, dt)
                            Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                                lblPRRVal.Text = dt.Rows(0)(0).ToString
                                lblAdvisoryFlagValue = dt.Rows(0)(1).ToString       ''Changed by Chitralekha on 13-Oct-16
                                If lblPRRVal.Text = "NA" Then
                                    lblPRRVal.ForeColor = Color.Red
                                Else
                                    lblPRRVal.ForeColor = Color.Green
                                End If
                                ''Added by Chitralekha on 13-Oct-16
                                If lblAdvisoryFlagValue = "Y" Then
                                    lblAdvisoryFlagVal.ForeColor = Color.Green
                                    lblAdvisoryFlagVal.Text = "Yes"
                                Else
                                    lblAdvisoryFlagVal.ForeColor = Color.Red
                                    lblAdvisoryFlagVal.Text = "No"
                                End If
                                ''Ended by Chitralekha on 13-Oct-16
                            Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                            Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                        End Select
                    If arrExchanges.Length >= 2 Then
                        chkAddShare2.Checked = True
                        chkAddShare2_CheckedChanged(Nothing, Nothing)
                        ddlExchangeDRAFCN2.Enabled = True
                        ddlShareDRA2.Enabled = True
                            FillDRAddl_exchange(ddlExchangeDRAFCN2)
                            setShare2(arrExchanges(1), arrShares(1))
                        Select Case objReadConfig.ReadConfig(dsConfig, "EQC_Allow_ALL_AsExchangeOption", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                            Case "Y", "YES"
                                    ''ddlShareDRA2.SelectedIndex = ddlShareDRA2.Items.IndexOf(ddlShareDRA2.Items.FindItemByValue(arrShares(1)))
                                    ''   ddlShareDRA2.Text = ddlShareDRA2.Text
                                lblExchangeDRAFCN2.Text = setExchangeByShare(ddlShareDRA2)
                            Case "N", "NO"
                                Try
                                    ddlExchangeDRAFCN2.SelectedValue = arrExchanges(1)
                                Catch ex As Exception
                                    lblerror.Text = "Exchange missing from setup."
                                End Try
                                    'fill_DRA_FCN_Share2()  ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                                    ''ddlShareDRA2.SelectedIndex = ddlShareDRA2.Items.IndexOf(ddlShareDRA2.Items.FindItemByValue(arrShares(1)))
                                    ''    ddlShareDRA2.Text = ddlShareDRA2.Text
                                lblExchangeDRAFCN2.Text = setExchangeByShare(ddlShareDRA2)
                            End Select
                            If ddlShareDRA2.SelectedItem IsNot Nothing Then
                                ddlShareDRA2.Text = ddlShareDRA2.SelectedItem.Text
                            End If
                        dtBaseCCY = New DataTable("BaseCcy")
			 ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                            Select Case objELNRFQ.DB_GetBASECCY(ddlShareDRA2.SelectedValue, dtBaseCCY)
                                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                                    lblBaseCurrency2.Text = dtBaseCCY.Rows(0)(0).ToString
                                Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                                Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                            End Select
                            ''AshwiniP on 23Sept2016
                            dt = New DataTable("Dummy")
                            Select Case objELNRFQ.DB_UnderlyingRiskRatingShare(ddlShareDRA2.SelectedValue, dt)
                                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                                    lblPRRVal2.Text = dt.Rows(0)(0).ToString

                                    lblAdvisoryFlagVal2.Text = dt.Rows(0)(1).ToString   ''Changed by Chitralekha on 13-Oct-16

                                    If lblPRRVal2.Text = "NA" Then
                                        lblPRRVal2.ForeColor = Color.Red
                                    Else
                                        lblPRRVal2.ForeColor = Color.Green
                                    End If
                                    ''Added by Chitralekha on 13-Oct-16
                                    If lblAdvisoryFlagVal2.Text = "Y" Then
                                        lblAdvisoryFlagVal2.ForeColor = Color.Green
                                        lblAdvisoryFlagVal2.Text = "Yes"
                                    Else
                                        lblAdvisoryFlagVal2.ForeColor = Color.Red
                                        lblAdvisoryFlagVal2.Text = "No"
                                    End If
                                    ''Ended by Chitralekha on 13-Oct-16
                                Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                                Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                            End Select
                    End If

                    If arrExchanges.Length = 3 Then
                        chkAddShare3.Checked = True
                        ddlExchangeDRAFCN3.Enabled = True
                        ddlShareDRA3.Enabled = True
                            FillDRAddl_exchange(ddlExchangeDRAFCN3)
                            setShare3(arrExchanges(2), arrShares(2))
                        Select Case objReadConfig.ReadConfig(dsConfig, "EQC_Allow_ALL_AsExchangeOption", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                            Case "Y", "YES"
                                    'fill_DRA_FCN_Share3()  ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                                    ''ddlShareDRA3.SelectedIndex = ddlShareDRA3.Items.IndexOf(ddlShareDRA3.Items.FindItemByValue(arrShares(2)))
                                    ''    ddlShareDRA3.Text = ddlShareDRA3.Text
                                lblExchangeDRAFCN3.Text = setExchangeByShare(ddlShareDRA3)
                            Case "N", "NO"
                                Try
                                    ddlExchangeDRAFCN3.SelectedValue = arrExchanges(2)
                                Catch ex As Exception
                                    lblerror.Text = "Exchange missing from setup."
                                End Try
                                    'fill_DRA_FCN_Share3()  ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                                    ''ddlShareDRA3.SelectedIndex = ddlShareDRA3.Items.IndexOf(ddlShareDRA3.Items.FindItemByValue(arrShares(2)))
                                    ''   ddlShareDRA3.Text = ddlShareDRA3.Text
                                lblExchangeDRAFCN3.Text = setExchangeByShare(ddlShareDRA3)
                                dtBaseCCY = New DataTable("BaseCcy")
                            End Select
                            If ddlShareDRA3.SelectedItem IsNot Nothing Then
                                ddlShareDRA3.Text = ddlShareDRA3.SelectedItem.Text
                            End If
			 ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                            Select Case objELNRFQ.DB_GetBASECCY(ddlShareDRA3.SelectedValue, dtBaseCCY)
                                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                                    lblBaseCurrency3.Text = dtBaseCCY.Rows(0)(0).ToString
                                Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                                Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                            End Select
			       ''AshwiniP on 23Sept2016
                            Select Case objELNRFQ.DB_UnderlyingRiskRatingShare(ddlShareDRA3.SelectedValue, dt)
                                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                                    lblPRRVal3.Text = dt.Rows(0)(0).ToString

                                    lblAdvisoryFlagVal3.Text = dt.Rows(0)(1).ToString   ''Changed by Chitralekha on 13-Oct-16

                                    If lblPRRVal3.Text = "NA" Then
                                        lblPRRVal3.ForeColor = Color.Red
                                    Else
                                        lblPRRVal3.ForeColor = Color.Green
                                    End If
                                    ''Added by Chitralekha on 13-Oct-16
                                    If lblAdvisoryFlagVal3.Text = "Y" Then
                                        lblAdvisoryFlagVal3.ForeColor = Color.Green
                                        lblAdvisoryFlagVal3.Text = "Yes"
                                    Else
                                        lblAdvisoryFlagVal3.ForeColor = Color.Red
                                        lblAdvisoryFlagVal3.Text = "No"
                                    End If
                                    ''Ended by Chitralekha on 13-Oct-16
                                Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                                Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                            End Select
                    End If
                End If
                Dim strDRATenor As String = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.RFQTenor).Text
                    For i = 0 To strDRATenor.Length - 1
                        If IsNumeric(strDRATenor.Substring(i, 1)) = True Then
                            strNewTenorDRA = strNewTenorDRA + strDRATenor.Substring(i, 1)
                        End If
                    Next
                    txtTenorDRA.Text = strNewTenorDRA
                    For i = 0 To strDRATenor.Length - 1
                        If IsNumeric(strDRATenor.Substring(i, 1)) = False Then
                            strNewTenorDRAType = (strNewTenorDRAType + strDRATenor.Substring(i, 1)).Trim
                        End If
                    Next

                    'ddlTenorTypeDRA.SelectedIndex = ddlTenorTypeDRA.FindItemByText(strNewTenorDRAType).Index
                    ddlTenorTypeDRA.SelectedIndex = ddlTenorTypeDRA.FindItemByValue(strNewTenorDRAType).Index   '<RiddhiS. on 13-Oct-2016: Unable to find item by text previously>

                Dim strKILevel As String = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.KI_Level).Text
                If strKILevel = "&nbsp;" Then
                    txtKILevel.Text = ""
                Else
                    txtKILevel.Text = strKILevel
                End If
                Dim strDRAKIType As String = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.KI_Type).Text
                If strDRAKIType.ToUpper = "NONE" Then
                    chkKI.Checked = False
                    txtKILevel.Enabled = False
                    ddlKIType.Enabled = False
                    ddlKIType.BackColor = Color.LightGray
                    txtKILevel.BackColor = Color.LightGray
                Else
                        chkKI.Checked = True
                        ddlKIType.SelectedIndex = ddlKIType.FindItemByValue(grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.KI_Type).Text.ToUpper).Index ''<Nikhil M. on 17-Oct-2016: Added . toupper to find the Value>
                    txtKILevel.Enabled = True
                    ddlKIType.Enabled = True
                    ddlKIType.BackColor = Color.White
                    txtKILevel.BackColor = Color.White
                End If

                Dim strDRAGUPeriod As String = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.GU_Period).Text
                For i = 0 To strDRAGUPeriod.Length - 1
                    If IsNumeric(strDRAGUPeriod.Substring(i, 1)) = True Then
                        strNewDurationDRA = strNewDurationDRA + strDRAGUPeriod.Substring(i, 1)
                    End If
                Next
                txtGuPeriod.Text = strNewDurationDRA
                If grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.KI_Frequency).Text.Trim.ToUpper = "MONTHLY" Then
                    txtGuPeriod.Text = txtGuPeriod.Text
                ElseIf grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.KI_Frequency).Text.Trim.ToUpper = "BIMONTHLY" Then
                    txtGuPeriod.Text = CStr(Val(txtGuPeriod.Text) / 2)
                ElseIf grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.KI_Frequency).Text.Trim.ToUpper = "QUARTERLY" Then
                    txtGuPeriod.Text = CStr(Val(txtGuPeriod.Text) / 3)
                ElseIf grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.KI_Frequency).Text.Trim.ToUpper = "SEMIANNUALLY" Then
                    txtGuPeriod.Text = CStr(Val(txtGuPeriod.Text) / 6)
                ElseIf grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.KI_Frequency).Text.Trim.ToUpper = "ANNUALLY" Then
                    txtGuPeriod.Text = CStr(Val(txtGuPeriod.Text) / 12)
                End If
                For i = 0 To strDRAGUPeriod.Length - 1
                    If IsNumeric(strDRAGUPeriod.Substring(i, 1)) = False Then
                        strNewDurationTypeDRA = (strNewDurationTypeDRA + strDRAGUPeriod.Substring(i, 1)).Trim
                    End If
                Next
                Dim strDRAKIfreq As String = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.KI_Frequency).Text
                ddlKIFrequency.SelectedValue = strDRAKIfreq.ToUpper
                lblKOLevelSameAsCoupon.Text = strDRAKIfreq
                    Dim strDRAKoType As String = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.KO_Type).Text
                    '<AvinashG. on 29-Sep-2016:>
                    ddlKOType.SelectedValue = strDRAKoType.ToUpper
                    '<AvinashG. on 29-Sep-2016:>
                Dim strKOLevel As String = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.KO_Level).Text
                If strKOLevel = "&nbsp;" Then
                Else
                    txtKOLevel.Text = strKOLevel
                        txtKOLevel.Enabled = True
                        ddlKOType.Enabled = True
                    chkKO.Checked = True
                    txtKOLevel.BackColor = Color.White
                End If
                Dim strDRAQty As String = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.Order_Quantity).Text
                ''txtOrderDRAFCN.Text = strDRAQty
		 txtOrderDRAFCN.Text = SetNumberFormat(strDRAQty, 0) ''EQBOSDEV-228 Added by chaitali removing decimal
                Dim strDRAType As String = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.Type).Text
                If strDRAType.ToUpper.Trim = "DRA" Then
                    txtGuPeriod.Enabled = True
                    lblGUPeriod.Visible = True
                    txtGuPeriod.Visible = True
                    lblGUType.Visible = True
                    ddlDRAType.SelectedValue = strDRAType.ToUpper.Trim
                    lblAcc.Visible = True
                    lblAccSameasstrike.Visible = True
                Else
                    txtGuPeriod.Enabled = False
                    lblGUPeriod.Visible = False
                    txtGuPeriod.Visible = False
                    lblGUType.Visible = False
                    ddlDRAType.SelectedValue = strDRAType.ToUpper.Trim
                    lblAcc.Visible = False
                    lblAccSameasstrike.Visible = False
                End If

                    ddlNoteCcy.SelectedIndex = ddlNoteCcy.FindItemByText(grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.Currency).Text).Index
                    lblNoteCcy.Text = "(" & grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.Currency).Text & ")"
                    grdDRAFCN.SelectedItemStyle.BackColor = Color.FromArgb(242, 242, 243)
                ElseIf e.CommandName.ToUpper = "CREATEPOOLDRAFCN" Then
                    Dim strTradeDate As String = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.Quoted_At).Text
                    If CDate(strTradeDate).ToString("dd-MMM-yy") = Today.ToString("dd-MMM-yy") Then
                        Dim strDRAType As String = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.Type).Text
                        If strDRAType.ToUpper.Trim = "DRA" Then
                            Response.Redirect(sPoolRedirectionPath + "&PRD=DRA&RFQID=" + DirectCast(DirectCast(grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.RFQ_ID).Controls(1), System.Web.UI.Control), System.Web.UI.WebControls.LinkButton).Text, False)
                        ElseIf strDRAType.ToUpper.Trim = "FCN" Then
                            Response.Redirect(sPoolRedirectionPath + "&PRD=FCN&RFQID=" + DirectCast(DirectCast(grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.RFQ_ID).Controls(1), System.Web.UI.Control), System.Web.UI.WebControls.LinkButton).Text, False)
                        End If
                    Else
                        lblerror.Text = "Cannot create pool from quotes other than today. Please use today's quotes only."
                    End If
                    'Added by Mohit lalwani on 14-Mar-2016 
                ElseIf e.CommandName.ToUpper = "GENERATEDOCUMENT" Then
                    Generate_DRAFCN(DirectCast(DirectCast(grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.RFQ_ID).Controls(1), System.Web.UI.Control), System.Web.UI.WebControls.LinkButton).Text)
                    '/Added by Mohit lalwani on 14-Mar-2016 
                    'Mohit lalwani on  25-Jan-2015
                ElseIf e.CommandName.ToUpper = "GETRFQDETAILS" Then
                    ShowHideDeatils(True)
                    lblDetails.Text = "RFQ Details"
                    Label47.Text = "Issuer Remark"  'Added by Mohit/Rushi on 02-May-2016 FA-1420

                    pnlDetailsPopup.Visible = True

                    trDraAvgExePrc.Visible = False
                    trDraExePrc1.Visible = False
                    trDraExePrc2.Visible = False
                    trDraExePrc3.Visible = False
                    trDraLimitPrice.Visible = False
                    trDraOrderStatus.Visible = False
                    trDraOrderType.Visible = False
                    trDraSpot1.Visible = False
                    trDRAQuoteStatus.Visible = True
                    trDraOrderComment.Visible = False

                    lblAlloDraOrderStatus.Text = ""
                    lblAlloDraType.Text = ""
                    lblAlloDraRFQID.Text = ""
                    lblAlloDraCp.Text = ""
                    lblAlloDraUnderlying.Text = ""
                    lblAlloDraNoteCcy.Text = ""
                    lblAlloDraStrike.Text = ""
                    lblAlloDraKIper.Text = ""
                    lblAlloDraKOper.Text = ""
                    lblAlloDraTenor.Text = ""
                    lblAlloDraPrice.Text = ""
                    lblAlloDraUpfront.Text = ""
                    lblAlloDraClientprice.Text = ""
                    lblAlloDraCoupon.Text = ""
                    lblAlloDraCouponFrequency.Text = ""
                    lblAlloDraGuarantee.Text = ""
                    lblAlloDraOrderSize.Text = ""
                    lblAlloDraOrderType.Text = ""
                    lblAlloDraLimitPrice.Text = ""
                    lblAlloDraRemarks.Text = ""
                    lblAlloDraSubmittedby.Text = ""
                    lblAlloDraExePrc1.Text = ""
                    lblAlloDraExePrc2.Text = ""
                    lblAlloDraExePrc3.Text = ""
                    lblAlloDraAvgExePrc.Text = ""
                    lblAlloDraSpot1.Text = ""

                    lblDRAQuoteStatus.Text = "" 'Mohit
                    ' grdELNRFQ.Items(e.Item.ItemIndex).Cells(grdELNRFQEnum.Expiry_Date).Text
                    ''</added by Rushikesh on 29-Dec-15 to flush old value>
                    lblDRAQuoteStatus.Text = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.Quote_Status).Text
                    'lblAlloDraOrderStatus.Text = item("Order_Status").Text
                    lblAlloDraType.Text = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.Type).Text
                    lblAlloDraRFQID.Text = DirectCast(DirectCast(grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.RFQ_ID).Controls(1), System.Web.UI.Control), System.Web.UI.WebControls.LinkButton).Text
                    lblAlloDraCp.Text = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.Provider_Name).Text
                    lblAlloDraUnderlying.Text = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.Share).Text
                    lblAlloDraNoteCcy.Text = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.Currency).Text
                    lblAlloDraStrike.Text = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.Strike_Per).Text
                    'Mohit 28-Dec-2015
                    If grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.KI_Level).Text.Trim <> "" And grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.KI_Level).Text.Trim <> "&nbsp;" And grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.KI_Level).Text.Trim <> "0" Then
                        'Mohit 28-Dec-2015
                        lblAlloDraKIper.Text = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.KI_Level).Text + "&nbsp(" + grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.KI_Type).Text + ")"
                    Else
                    End If
                    'Mohit 28-Dec-2015
                    If grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.KO_Level).Text.Trim <> "" And grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.KO_Level).Text.Trim <> "&nbsp;" And grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.KO_Level).Text.Trim <> "0" Then
                        lblAlloDraKOper.Text = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.KO_Level).Text + "&nbsp(" + grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.KO_Type).Text + ")"
                    Else
                    End If

                    lblAlloDraTenor.Text = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.Tenor).Text + "&nbsp;Month(s)"
                    lblAlloDraPrice.Text = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.Price_Per).Text


                    ''<Rushikesh D. on 15-May16 EQBOSDEV-360>
                    Select Case objReadConfig.ReadConfig(dsConfig, "EQC_Follow_AtPar_Lock", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper
                        Case "Y", "YES"
                            lblAlloDraClientprice.Text = SetNumberFormat("100", 2)
                            If lblAlloDraClientprice.Text = "" Or lblAlloDraClientprice.Text = "&nbsp;" Or lblAlloDraPrice.Text = "" Or lblAlloDraPrice.Text = "&nbsp;" Then
                                lblAlloDraUpfront.Text = ""
                            Else
                                lblAlloDraUpfront.Text = SetNumberFormat((Val(lblAlloDraClientprice.Text) - Val(lblAlloDraPrice.Text)), 2)
                            End If
                        Case "N", "NO"
                            lblAlloDraClientprice.Text = SetNumberFormat(grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.Client_Price).Text, 2)
                            lblAlloDraUpfront.Text = SetNumberFormat(grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.Upfront).Text, 2)
                    End Select
                    ''</Rushikesh D. on 15-May16 EQBOSDEV-360>


                    lblAlloDraCoupon.Text = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.Coupon_Per).Text
                    lblAlloDraCouponFrequency.Text = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.KI_Frequency).Text
                    If grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.Type).Text = "DRA" Then
                        AlloDraGuarantee.Visible = True
                        lblAlloDraGuarantee.Text = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.GU_Period).Text
                    Else
                        AlloDraGuarantee.Visible = False
                        '  lblAlloDraGuarantee.Text = item("GuaranteedDuration").Text
                    End If


                    lblAlloDraOrderSize.Text = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.Order_Quantity).Text
                    lblAlloDraOrderType.Text = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.KI_Type).Text
                    ' lblAlloDraLimitPrice.Text = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.).Text
                    ''lblAlloDraSpot1.Text = item("Quote_Request_ID").Text
                    ''lblAlloDraSpot2.Text = item("Quote_Request_ID").Text
                    ''lblAlloDraSpot3.Text = item("Quote_Request_ID").Text
                    lblAlloDraRemarks.Text = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.Remark).Text
                    lblAlloDraSubmittedby.Text = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.ER_Created_By).Text
                    'lblAlloDraExePrc1.Text = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.EXE).Text
                    'lblAlloDraExePrc2.Text = item("Execution_Price2").Text
                    'lblAlloDraExePrc3.Text = item("Execution_Price3").Text
                    'lblAlloDraAvgExePrc.Text = item("AvgPrice").Text
                    'If item("ELN_Order_Type").Text.ToUpper = "LIMIT" Then
                    '    Dim sLimitPrc As String = ""
                    '    Dim lim1, lim2, lim3 As String
                    '    Dim stosksLost(3) As String
                    '    stosksLost = item("Underlying").Text.Split(CChar(","))
                    '    lim1 = FormatNumber(Replace(item("LimitPrice1").Text, "&nbsp;", "0"), 2)
                    '    lim2 = FormatNumber(Replace(item("LimitPrice2").Text, "&nbsp;", "0"), 2)
                    '    lim3 = FormatNumber(Replace(item("LimitPrice3").Text, "&nbsp;", "0"), 2)
                    '    If lim1 <> "&nbsp;" And lim1 <> "0.00" And lim1 <> "" Then
                    '        sLimitPrc = lim1 + " (" + stosksLost(0) + ")"
                    '    ElseIf lim2 <> "&nbsp;" And lim2 <> "0.00" And lim2 <> "" Then
                    '        sLimitPrc = lim2 + " (" + stosksLost(1) + ")"
                    '    ElseIf lim3 <> "&nbsp;" And lim3 <> "0.00" And lim3 <> "" Then
                    '        sLimitPrc = lim3 + " (" + stosksLost(2) + ")"
                    '    End If
                    '    lblAlloDraSpot1.Visible = True
                    '    lblAlloDraSpot1.Text = sLimitPrc
                    'Else
                    '    lblAlloDraSpot1.Visible = False
                    'End If
                    upnlDetails.Update()
                    RestoreAll()
                    RestoreSolveAll()
                    upnlGrid.Update()
                    '/Mohit lalwani on  25-Jan-2015

                Else
                grdDRAFCN.SelectedItemStyle.BackColor = Color.White
            End If
            txtBasketShares.Text = ""
            Prepare_DRAFCN_Basket()
            End If
            '<AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
            'getRange()
            '</AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
            upnl2.Update()
            grdDRAFCN.Visible = True
            GetCommentary_DRA()
            If (txtBasketShares.Text.Trim = "" And tabContainer.ActiveTabIndex = prdTab.DRA) Or (txtBasketShares.Text.Trim = "" And tabContainer.ActiveTabIndex = prdTab.FCN) Then
                System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "hideShowEmailDRAFCN1", "try{ hideEmail(); }catch(e) {}", True)
            Else
                System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "hideShowEmailDRAFCN2", "try{ showEmail(); } catch(e){ }", True)			'Mohit Lalwani on 26-Oct-2016
            End If
        Catch ex As Exception
            lblerror.Text = "grdDRAFCN_ItemCommand: Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "grdDRAFCN_ItemCommand", ErrorLevel.High)

        End Try
    End Sub



    Private Sub grdDRAFCN_ItemDataBound(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.DataGridItemEventArgs) Handles grdDRAFCN.ItemDataBound
        Try
            If e.Item.ItemType = ListItemType.AlternatingItem Or e.Item.ItemType = ListItemType.Item Or e.Item.ItemType = ListItemType.EditItem Or e.Item.ItemType = ListItemType.SelectedItem Then
                If e.Item.Cells(grdDRAFCNEnum.Order_Quantity).Text <> "&nbsp;" Then
                    e.Item.Cells(grdDRAFCNEnum.Order_Quantity).Text = SetNumberFormat(e.Item.Cells(grdDRAFCNEnum.Order_Quantity).Text, 0)  '' EQBOSDEV-228 Replaced '2' by '0' on 21-jan-16 for removing decimals from notional by chaitali F
                End If
                If e.Item.Cells(grdDRAFCNEnum.Price_Per).Text <> "&nbsp;" Then
                    e.Item.Cells(grdDRAFCNEnum.Price_Per).Text = SetNumberFormat(e.Item.Cells(grdDRAFCNEnum.Price_Per).Text, 2)
                End If
                If e.Item.Cells(grdDRAFCNEnum.Strike_Per).Text <> "&nbsp;" Then
                    e.Item.Cells(grdDRAFCNEnum.Strike_Per).Text = SetNumberFormat(e.Item.Cells(grdDRAFCNEnum.Strike_Per).Text, 2)
                End If
                If e.Item.Cells(grdDRAFCNEnum.Coupon_Per).Text <> "&nbsp;" Then
                    e.Item.Cells(grdDRAFCNEnum.Coupon_Per).Text = SetNumberFormat(e.Item.Cells(grdDRAFCNEnum.Coupon_Per).Text, 2)
                End If
                If e.Item.Cells(grdDRAFCNEnum.KI_Level).Text <> "&nbsp;" Then
                    e.Item.Cells(grdDRAFCNEnum.KI_Level).Text = SetNumberFormat(e.Item.Cells(grdDRAFCNEnum.KI_Level).Text, 2)
                End If

                If e.Item.Cells(grdDRAFCNEnum.KO_Level).Text <> "&nbsp;" Then
                    e.Item.Cells(grdDRAFCNEnum.KO_Level).Text = SetNumberFormat(e.Item.Cells(grdDRAFCNEnum.KO_Level).Text, 2)
                End If
                Select Case objReadConfig.ReadConfig(dsConfig, "EQC_ShowRFQByClubbing_OnPricer", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper
                    Case "Y", "YES"
                        If e.Item.ItemIndex = 0 Then
                            e.Item.CssClass = "Grp1"
                        Else
                            If (e.Item.Cells(grdDRAFCNEnum.ClubbingRFQId).Text.ToString = "" Or e.Item.Cells(grdDRAFCNEnum.ClubbingRFQId).Text.ToString = "&nbsp;") And (grdDRAFCN.Items(e.Item.ItemIndex - 1).Cells(grdDRAFCNEnum.ClubbingRFQId).Text.ToString = "" Or grdDRAFCN.Items(e.Item.ItemIndex - 1).Cells(grdDRAFCNEnum.ClubbingRFQId).Text.ToString = "&nbsp;") Then
                                e.Item.CssClass = If(grdDRAFCN.Items(e.Item.ItemIndex - 1).CssClass = "Grp2", "Grp1", "Grp2")
                            Else
                                If (e.Item.Cells(grdDRAFCNEnum.ClubbingRFQId).Text.ToString = grdDRAFCN.Items(e.Item.ItemIndex - 1).Cells(grdDRAFCNEnum.ClubbingRFQId).Text.ToString) Then
                                    e.Item.CssClass = grdDRAFCN.Items(e.Item.ItemIndex - 1).CssClass
                                Else
                                    e.Item.CssClass = If(grdDRAFCN.Items(e.Item.ItemIndex - 1).CssClass = "Grp2", "Grp1", "Grp2")
                                End If
                            End If

                        End If
                    Case "N", "NO"
                End Select
                ''Added by Chitralekha on 1-Oct-16
                If e.Item.Cells(grdDRAFCNEnum.BestPrice_YN).Text = "Y" Then
                    e.Item.CssClass = "BestPriceHighlight"

                End If
                ''Ended by Chitralekha on 1-Oct-16
            End If

        Catch ex As Exception
            lblerror.Text = "grdDRAFCN_ItemDataBound:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "grdDRAFCN_ItemDataBound", ErrorLevel.High)

        End Try
    End Sub

    Private Sub grdDRAFCN_PageIndexChanged(ByVal source As Object, ByVal e As System.Web.UI.WebControls.DataGridPageChangedEventArgs) Handles grdDRAFCN.PageIndexChanged
        Dim dtGrid As New DataTable("Dummy")
        Try
            grdDRAFCN.EditItemIndex = -1
            fill_DRA_FCN_Grid()
            grdDRAFCN.CurrentPageIndex = e.NewPageIndex
            dtGrid = CType(Session("DRA_FCN"), DataTable)
            grdDRAFCN.DataSource = dtGrid
            grdDRAFCN.DataBind()
            grdDRAFCN.Visible = True
        Catch ex As Exception
            lblerror.Text = "grdDRAFCN_PageIndexChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "grdDRAFCN_PageIndexChanged", ErrorLevel.High)
        End Try
    End Sub

    Private Sub grdDRAFCN_SortCommand(ByVal source As Object, ByVal e As System.Web.UI.WebControls.DataGridSortCommandEventArgs) Handles grdDRAFCN.SortCommand
        Try
            numberdiv = CType(ViewState("NumberForSort_" + e.SortExpression), Int32)
            numberdiv = numberdiv + 1
            ViewState("NumberForSort_" + e.SortExpression) = numberdiv
            If CType(Session("DRA_FCN"), DataTable) Is Nothing Then Exit Sub
            Dim dtSortRevData As DataTable = CType(Session("DRA_FCN"), DataTable)
            Dim dvRevData As DataView
            dvRevData = dtSortRevData.DefaultView
            If (numberdiv Mod 2) = 0 Then
                dvRevData.Sort = e.SortExpression & " DESC"
            Else
                dvRevData.Sort = e.SortExpression & " ASC"
            End If
            grdDRAFCN.DataSource = dvRevData
            grdDRAFCN.DataBind()
        Catch ex As Exception
            lblerror.Text = "grdDRAFCN_SortCommand:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "grdDRAFCN_SortCommand", ErrorLevel.High)
        End Try
    End Sub

    Private Sub grdOrder_SortCommand(ByVal source As Object, ByVal e As System.Web.UI.WebControls.DataGridSortCommandEventArgs) Handles grdOrder.SortCommand
        Try
            numberdiv = CType(ViewState("NumberForSort_" + e.SortExpression), Int32)
            numberdiv = numberdiv + 1
            ViewState("NumberForSort_" + e.SortExpression) = numberdiv
            If CType(Session("Order"), DataTable) Is Nothing Then Exit Sub
            Dim dtSortRevData As DataTable = CType(Session("Order"), DataTable)
            Dim dvRevData As DataView
            dvRevData = dtSortRevData.DefaultView
            If (numberdiv Mod 2) = 0 Then
                dvRevData.Sort = e.SortExpression & " DESC"
            Else
                dvRevData.Sort = e.SortExpression & " ASC"
            End If
            grdOrder.DataSource = dvRevData
            grdOrder.DataBind()
            grdOrder.Visible = True
        Catch ex As Exception
            lblerror.Text = "grdOrder_SortCommand:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "grdOrder_SortCommand", ErrorLevel.High)

        End Try
    End Sub

#End Region

#Region "Refresh Grid,Chart"

    Public Sub btnLoad_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnLoad.Click
        Try
            RestoreSolveAll()
            RestoreAll()
            CheckBestPrice()
            rbHistory_SelectedIndexChanged(Nothing, Nothing)
            If btnSolveAll.Visible = True Then
                If rblShareData.SelectedValue = "GRAPHDATA" Then
                    Call Fill_All_Charts()
                End If
            End If
            upnlGrid.Update()
            If UCase(Request.QueryString("EXTLOD")) = "REPRICEPOOL" Or UCase(Request.QueryString("EXTLOD")) = "HEDGE" Then
                EnableDisableForOrderPoolData(Convert.ToString(Session("DRARePricePPName")))
            End If
        Catch ex As Exception
            lblerror.Text = "btnLoad_Click:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnLoad_Click", ErrorLevel.High)
            Throw ex
	End Try
    End Sub
#End Region

#Region "Price"

    Public Function Chk_validation() As Boolean
        Try
            '<AvinashG. on 17-Feb-2016: FA-1273 ELN/DRA/FCN/Acc/Dec: Invalid Tenor Issue >
            If (txtTenorDRA.Text.Contains(".")) Then
                lblerror.ForeColor = Color.Red
                lblerror.Text = "Please enter valid tenor(e.g. 1, 2, 3)."
                Chk_validation = False
                Exit Function
            End If
            '</AvinashG. on 17-Feb-2016: FA-1273 ELN/DRA/FCN/Acc/Dec: Invalid Tenor Issue >
            If chkAddShare1.Checked Then
                ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                'If ddlShareDRA.SelectedItem Is Nothing Then
                If ddlShareDRA.SelectedValue Is Nothing Then
                    lblerror.Text = "Please select valid share. "
                    Chk_validation = False
                    Exit Function
                ElseIf ddlShareDRA.SelectedValue = "" Then
                    lblerror.Text = "Please select valid share."
                    Chk_validation = False
                    Exit Function
                Else
                    Chk_validation = True
                End If
            End If
            If chkAddShare2.Checked Then
	     ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                'If ddlShareDRA2.SelectedItem Is Nothing Then
                If ddlShareDRA2.SelectedValue Is Nothing Then
                    lblerror.Text = "Please select valid share. "
                    Chk_validation = False
                    Exit Function
                ElseIf ddlShareDRA2.SelectedValue = "" Then
                    lblerror.Text = "Please select valid share."
                    Chk_validation = False
                    Exit Function
                Else
                    Chk_validation = True
                End If
            End If

            If chkAddShare3.Checked Then
	     ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                'If ddlShareDRA3.SelectedItem Is Nothing Then
                If ddlShareDRA3.SelectedValue Is Nothing Then
                    lblerror.Text = "Please select valid share. "
                    Chk_validation = False
                    Exit Function
                ElseIf ddlShareDRA3.SelectedValue = "" Then
                    lblerror.Text = "Please select valid share."
                    Chk_validation = False
                    Exit Function
                Else
                    Chk_validation = True
                End If
            End If

            If ddlSolveForDRA.SelectedValue = "CONVERSION_STRIKE" Then
                If (txtDRAPrice.Text = "" OrElse Val(txtDRAPrice.Text) = 0) Then
                    lblerror.Text = " Please enter valid price. "
                    Chk_validation = False
                    Exit Function
                Else
                    If (Val(txtDRAPrice.Text) > 0 And Val(txtDRAPrice.Text.Replace(",", "")) < 100) Then
                        Chk_validation = True
                    Else
                        lblerror.Text = " Price % must be greater than 0 and less than 100."
                        Chk_validation = False
                        Exit Function
                    End If
                End If
                If (txtCoupon.Text = "" OrElse Val(txtCoupon.Text) = 0) Then
                    lblerror.Text = " Please enter valid coupon. "
                    Chk_validation = False
                    Exit Function
                ElseIf (Val(txtCoupon.Text.Replace(",", "")) > 999) Then
                    lblerror.Text = " Please enter valid coupon. "
                    Chk_validation = False
                    Exit Function
                Else
                    If (Val(txtCoupon.Text) < 0) Then
                        lblerror.Text = " Coupon % cannot be negative."
                        Chk_validation = False
                        Exit Function
                    Else
                        Chk_validation = True
                    End If
                End If
            ElseIf ddlSolveForDRA.SelectedValue = "COUPON" Then
                If (txtDRAPrice.Text = "" OrElse Val(txtDRAPrice.Text) = 0) Then
                    lblerror.Text = " Please enter valid price. "
                    Chk_validation = False
                    Exit Function
                Else
                    If (Val(txtDRAPrice.Text.Replace(",", "")) > 0 And Val(txtDRAPrice.Text.Replace(",", "")) < 100) Then
                        Chk_validation = True
                    Else
                        lblerror.Text = " Price % must be greater than 0 and less than 100."
                        Chk_validation = False
                        Exit Function
                    End If
                End If
                If (txtStrikeDRAFCN.Text = "" OrElse Val(txtStrikeDRAFCN.Text) = 0) Then
                    lblerror.Text = " Please enter valid strike. "
                    Chk_validation = False
                    Exit Function
                Else
                    If (Val(txtStrikeDRAFCN.Text.Replace(",", "")) > 0 And Val(txtStrikeDRAFCN.Text.Replace(",", "")) < 100) Then
                        Chk_validation = True
                    Else
                        lblerror.Text = " Strike % must be greater than 0 and less than 100."
                        Chk_validation = False
                        Exit Function
                    End If
                End If
            Else
                If (txtCoupon.Text = "" OrElse Val(txtCoupon.Text) = 0) Then
                    lblerror.Text = " Please enter valid coupon. "
                    Chk_validation = False
                    Exit Function
                ElseIf (Val(txtCoupon.Text.Replace(",", "")) > 999) Then
                    lblerror.Text = " Please enter valid coupon. "
                    Chk_validation = False
                    Exit Function
                Else
                    If (Val(txtCoupon.Text) < 0) Then
                        lblerror.Text = " Coupon % cannot be negative."
                        Chk_validation = False
                        Exit Function
                    Else
                        Chk_validation = True
                    End If
                End If
                If (txtStrikeDRAFCN.Text = "" OrElse Val(txtStrikeDRAFCN.Text) = 0) Then
                    lblerror.Text = " Please enter valid strike. "
                    Chk_validation = False
                    Exit Function
                Else
                    If (Val(txtStrikeDRAFCN.Text) > 0 And Val(txtStrikeDRAFCN.Text.Replace(",", "")) < 100) Then
                        Chk_validation = True
                    Else
                        lblerror.Text = " Strike % must be greater than 0 and less than 100."
                        Chk_validation = False
                        Exit Function
                    End If
                End If
            End If

            ''AshwiniP on 09-Nov-2016
            If ValidateTenor() = False Then
                lblerror.Text = "Please enter valid tenor."
                Chk_validation = False
                Exit Function
            Else
                Chk_validation = True
            End If

            Dim strNumberOfMonths As String = ""
            strNumberOfMonths = DRA_Get_NumberOf_Months_From_KIFrequency_GU_Periods().ToString
            '<AvinashG. on 17-Feb-2016: FA-1272 Incorrect Error message shown for FCN: Adding condition for product type>
            If Val(txtTenorDRA.Text) > 0 Then
                If ddlDRAType.SelectedValue.ToUpper = "DRA" AndAlso Not CheckGUVsTenor(ddlTenorTypeDRA.SelectedText, txtTenorDRA.Text, "Month", strNumberOfMonths) Then
                    lblerror.Text = "Guaranteed period should not be greater than or equal to the tenor."
                    Chk_validation = False
                    Exit Function
                Else
                    Chk_validation = True
                End If
            Else
                lblerror.Text = "Invalid tenor."
                Chk_validation = False
                Exit Function
            End If
  
            If txtBasketShares.Text = "" Then
                lblerror.Text = "Please select share(s) for basket."
                Chk_validation = False
                Exit Function
            End If
            If chkKI.Checked = True Then
                If Val(txtKILevel.Text.Replace(",", "")) > 0 Then
                    If Val(txtKILevel.Text.Replace(",", "")) > 999 Then
                        lblerror.Text = "Please enter valid KI % of Initial."
                        Chk_validation = False
                        Exit Function
                    Else
                        Chk_validation = True
                    End If
                Else
                    lblerror.Text = "KI % of Initial should be greater than 0."
                    Chk_validation = False
                    Exit Function
                End If
            End If

            If chkKO.Checked = True Then
                If Val(txtKOLevel.Text.Replace(",", "")) > 0 Then
                    If Val(txtKOLevel.Text.Replace(",", "")) > 999 Then
                        lblerror.Text = "Please enter valid KO % of Initial."
                        Chk_validation = False
                        Exit Function
                    Else
                        Chk_validation = True
                    End If
                Else
                    lblerror.Text = "KO % of Initial should be greater than 0."
                    Chk_validation = False
                    Exit Function
                End If
            End If

            If chkKI.Checked = True And chkKO.Checked = True Then
                If Val(txtKILevel.Text.Replace(",", "")) < Val(txtKOLevel.Text.Replace(",", "")) Then
                    Chk_validation = True
                Else
                    lblerror.Text = "KI %  should be less than that of KO %."
                    Chk_validation = False
                    Exit Function
                End If
            End If
            '<AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
            'If Val(txtOrderDRAFCN.Text) = 0 Then
            ' lblerror.Text = "Please enter valid notional"
            ' Chk_validation = False
            ' Exit Function
            'Else
            ' ''Accept notional
            ' Chk_validation = True
            'End If
            '</AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
            ''''<Dilkhush/Avinash/Rushi 19May2016 Handle unexpected characters>
            If Qty_Validate(txtOrderDRAFCN.Text) = False Then
                Chk_validation = False
                Exit Function
            End If
            ''<Dilkhush/Avinash/Rushi 19May2016 Handle unexpected characters>
            ''<Rushikesh D. on 15-May16 EQBOSDEV-360>
            If Val(txtUpfrontDRA.Text) = 0 Or Val(txtUpfrontDRA.Text.Replace(",", "")) >= 100 Then
                If Val(txtUpfrontDRA.Text) = 0 Then
                    Select Case objReadConfig.ReadConfig(dsConfig, "EQC_Follow_AtPar_Lock", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper
                        Case "Y", "YES"
                            If ddlSolveForDRA.SelectedValue.ToUpper <> "PRICE" Then
                                lblerror.Text = "Please enter valid upfront %."
                                Chk_validation = False
                                Exit Function
                            Else
                                Chk_validation = True
                            End If
                        Case "N", "NO"
                            lblerror.Text = "Please enter valid upfront %."
                            Chk_validation = False
                            Exit Function
                    End Select
                Else
                    lblerror.Text = "Please enter valid upfront %."
                    Chk_validation = False
                    Exit Function
                End If
            Else
                ''<Dilkhush 10May2016 Adde if condition to stop -ve upfront>
                If (Val(txtUpfrontDRA.Text) < 0) Then
                    lblerror.Text = "Upfront % cannot be negative."
                    Chk_validation = False
                    Exit Function
                Else
                    ''<Dilkhush 10May2016 Adde condition to stop -ve upfront>
                    Chk_validation = True
                End If
            End If
            ''</Rushikesh D. on 15-May16 EQBOSDEV-360>


            If ddlSolveForDRA.SelectedValue.Trim.ToUpper = "CONVERSION_STRIKE" Then
                Chk_validation = True
            Else
                If Val(txtKILevel.Text.Replace(",", "")) < Val(txtStrikeDRAFCN.Text.Replace(",", "")) Then
                    Chk_validation = True
                Else
                    lblerror.Text = "KI % of Initial should be less than strike(%)."
                    Chk_validation = False
                    Exit Function
                End If

            End If

            ''''02Nov2016 Mohit/Dilkhush Added to check frequency is valid or not on priceall or single price.
            If SetFrequencytype(ddlTenorTypeDRA.SelectedValue.Trim.ToUpper, txtTenorDRA.Text.Trim, ddlKIFrequency.SelectedValue.Trim) Then
            Else
                lblerror.Text = "Frequency is not valid."
                Chk_validation = False
                Exit Function
            End If

        Catch ex As Exception
            lblerror.Text = "Chk_validation:Error occurred in Processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "Chk_validation", ErrorLevel.High)
            Throw ex

        End Try
    End Function


    Public Sub solveRFQ(ByVal PP_CODE As String, ByVal lblTimer As Label, ByVal btnDeal As Button, ByVal btnPrice As Button, ByRef lblPrice As Label)
        Dim PP_ID As String = ""
        Dim dtPriceProvider As DataTable
        Dim dr() As DataRow
        Dim strJavaScripthdnSolveSingleRequest As New StringBuilder
        Try
            dtPriceProvider = New DataTable("Price Provider")
            dtPriceProvider = CType(Session("Provide_Id"), DataTable)
            dr = dtPriceProvider.Select("PP_CODE = '" & PP_CODE & "' ")
            PP_ID = dr(0).Item("PP_ID").ToString
            Prepare_DRAFCN_Basket()
            '<AvinashG. on 16-Feb-2016: Optimization>
            If FillRFQDataTable(PP_ID) = True Then            ''AshwiniP on 05-Oct-2016 : Notional validation at the time of pricing 
            Else
                Exit Sub
            End If
            ''Get_DRAFCNRFQData_TOXML(PP_ID)
            '<AvinashG. on 16-Feb-2016: Optimization>
            Quote_ID = Convert.ToString(Session("Quote_ID"))
            lblerror.Text = "RFQ " & Quote_ID & "  generated."
            lblerror.ForeColor = Color.Blue
            lblMsgPriceProvider.Text = ""
            If (PP_CODE = "JPM") Then
                strJavaScripthdnSolveSingleRequest.AppendLine("document.getElementById('JPMwait').style.visibility = 'visible';")
                Session.Add("JPMQuote", Quote_ID)
            ElseIf (PP_CODE = "HSBC") Then
                strJavaScripthdnSolveSingleRequest.AppendLine("document.getElementById('HSBCwait').style.visibility = 'visible';")
                Session.Add("HSBCQuote", Quote_ID)
            ElseIf (PP_CODE = "CS") Then
                strJavaScripthdnSolveSingleRequest.AppendLine("document.getElementById('CSwait').style.visibility = 'visible';")
                Session.Add("CSQuote", Quote_ID)
            ElseIf (PP_CODE = "UBS") Then
                strJavaScripthdnSolveSingleRequest.AppendLine("document.getElementById('UBSwait').style.visibility = 'visible';")
                Session.Add("UBSQuote", Quote_ID)
            ElseIf (PP_CODE = "BAML") Then
                strJavaScripthdnSolveSingleRequest.AppendLine("document.getElementById('BAMLwait').style.visibility = 'visible';")
                Session.Add("BAMLQuote", Quote_ID)
            ElseIf (PP_CODE = "BNPP") Then
                strJavaScripthdnSolveSingleRequest.AppendLine("document.getElementById('BNPPwait').style.visibility = 'visible';")
                Session.Add("BNPPQuote", Quote_ID)
            ElseIf (PP_CODE = "DB") Then
                strJavaScripthdnSolveSingleRequest.AppendLine("document.getElementById('DBIBwait').style.visibility = 'visible';")
                Session.Add("DBIBQuote", Quote_ID)
            ElseIf (PP_CODE = "OCBC") Then
                strJavaScripthdnSolveSingleRequest.AppendLine("document.getElementById('OCBCwait').style.visibility = 'visible';")
                Session.Add("OCBCQuote", Quote_ID)
            ElseIf (PP_CODE = "CITI") Then
                strJavaScripthdnSolveSingleRequest.AppendLine("document.getElementById('CITIwait').style.visibility = 'visible';")
                Session.Add("CITIQuote", Quote_ID)
            ElseIf (PP_CODE = "LEONTEQ") Then
                strJavaScripthdnSolveSingleRequest.AppendLine("document.getElementById('LEONTEQwait').style.visibility = 'visible';")
                Session.Add("LEONTEQQuote", Quote_ID)
            ElseIf (PP_CODE = "COMMERZ") Then
                strJavaScripthdnSolveSingleRequest.AppendLine("document.getElementById('COMMERZwait').style.visibility = 'visible';")
                Session.Add("COMMERZQuote", Quote_ID)
            End If
            If ddlSolveForDRA.SelectedValue.ToUpper = "PRICE" Then
                strJavaScripthdnSolveSingleRequest.AppendLine("getPrice('" + Quote_ID + "','" + lblPrice.ClientID + "','" + lblTimer.ClientID + "','" + btnDeal.ClientID + "','" + btnPrice.ClientID + "');")
            ElseIf ddlSolveForDRA.SelectedValue.ToUpper = "CONVERSION_STRIKE" Then
                strJavaScripthdnSolveSingleRequest.AppendLine("getStrike('" + Quote_ID + "','" + lblPrice.ClientID + "','" + lblTimer.ClientID + "','" + btnDeal.ClientID + "','" + btnPrice.ClientID + "');")
            Else
                strJavaScripthdnSolveSingleRequest.AppendLine("getCoupon('" + Quote_ID + "','" + lblPrice.ClientID + "','" + lblTimer.ClientID + "','" + btnDeal.ClientID + "','" + btnPrice.ClientID + "');")
            End If
            System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "strJavaScripthdnSolveSingleRequest", strJavaScripthdnSolveSingleRequest.ToString, True)
            grdDRAFCN.SelectedItemStyle.BackColor = Color.White
        Catch ex As Exception
            lblerror.Text = "solveRFQ:Error occurred in Processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "solveRFQ", ErrorLevel.High)
            Throw ex
        End Try
    End Sub

    Public Sub btnhdnSolveSingleRequest_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnhdnSolveSingleRequest.Click
        Try
            Session.Remove("flag")
            Session("flag") = ""
            setToZero_ELN_AllIssuerPrice_ClientYield_ClientPrice()
            rbHistory.SelectedValue = "Quote History"
            fill_DRA_FCN_Grid()                             '<RiddhiS. on 16-Oct-2016: To shift to Quote History on Single Price>
            makeThisGridVisible(grdDRAFCN)
            If Chk_validation() = False Then
                Exit Sub
            End If
            If Session("hdnPP").ToString = "JPM" Then
                AllHiddenPrice.Value = "Disable;Disable"
                btnJPMprice.Enabled = False
                btnJPMprice.CssClass = "btnDisabled"
                btnSolveAll.Enabled = False
                btnSolveAll.CssClass = "btnDisabled"
                lblJPMPrice.Text = ""
                lblerror.Text = ""
                lblJPMlimit.Text = "" 'Mohit Lalwani on 1-Feb-2016
                JpmHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                solveRFQ("JPM", lblTimer, btnJPMDeal, btnJPMprice, lblJPMPrice)
            ElseIf Session("hdnPP").ToString = "HSBC" Then
                AllHiddenPrice.Value = "Disable;Disable"
                btnHSBCPrice.Enabled = False
                btnHSBCPrice.CssClass = "btnDisabled"
                btnSolveAll.Enabled = False
                btnSolveAll.CssClass = "btnDisabled"
                lblHSBCPrice.Text = ""
                lblHSBClimit.Text = "" 'Mohit Lalwani on 1-Feb-2016
                lblerror.Text = ""
                HsbcHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                solveRFQ("HSBC", lblTimerHSBC, btnHSBCDeal, btnHSBCPrice, lblHSBCPrice)
            ElseIf Session("hdnPP").ToString = "CS" Then
                AllHiddenPrice.Value = "Disable;Disable"
                btnCSPrice.Enabled = False
                btnCSPrice.CssClass = "btnDisabled"
                btnSolveAll.Enabled = False
                btnSolveAll.CssClass = "btnDisabled"
                lblCSPrice.Text = ""
                lblCSLimit.Text = "" 'Mohit Lalwani on 1-Feb-2016
                lblerror.Text = ""
                CsHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                solveRFQ("CS", lblTimerCS, btnCSDeal, btnCSPrice, lblCSPrice)
            ElseIf Session("hdnPP").ToString = "UBS" Then
                AllHiddenPrice.Value = "Disable;Disable"
                btnUBSPrice.Enabled = False
                btnUBSPrice.CssClass = "btnDisabled"
                btnSolveAll.Enabled = False
                btnSolveAll.CssClass = "btnDisabled"
                lblUBSPrice.Text = ""
                lblUBSlimit.Text = "" 'Mohit Lalwani on 1-Feb-2016
                lblerror.Text = ""
                UbsHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                solveRFQ("UBS", lblUBSTimer, btnUBSDeal, btnUBSPrice, lblUBSPrice)
            ElseIf Session("hdnPP").ToString = "BNPP" Then
                AllHiddenPrice.Value = "Disable;Disable"
                btnBNPPPrice.Enabled = False
                btnBNPPPrice.CssClass = "btnDisabled"
                btnSolveAll.Enabled = False
                btnSolveAll.CssClass = "btnDisabled"
                lblBNPPPrice.Text = ""
                lblBNPPlimit.Text = "" 'Mohit Lalwani on 1-Feb-2016
                lblerror.Text = ""
                BNPPHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                solveRFQ("BNPP", lblTimerBNPP, btnBNPPDeal, btnBNPPPrice, lblBNPPPrice)
            ElseIf Session("hdnPP").ToString = "BAML" Then
                AllHiddenPrice.Value = "Disable;Disable"
                btnBAMLPrice.Enabled = False
                btnBAMLPrice.CssClass = "btnDisabled"
                btnSolveAll.Enabled = False
                btnSolveAll.CssClass = "btnDisabled"
                lblBAMLlimit.Text = "" 'Mohit Lalwani on 1-Feb-2016
                lblerror.Text = ""
                lblBAMLPrice.Text = ""
                BAMLHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                solveRFQ("BAML", lblTimerBAML, btnBAMLDeal, btnBAMLPrice, lblBAMLPrice)
            ElseIf Session("hdnPP").ToString = "DB" Then
                AllHiddenPrice.Value = "Disable;Disable"
                btnDBIBPrice.Enabled = False
                btnDBIBPrice.CssClass = "btnDisabled"
                btnSolveAll.Enabled = False
                btnSolveAll.CssClass = "btnDisabled"
                lblDBIBPrice.Text = ""
                lblDBIBlimit.Text = "" 'Mohit Lalwani on 1-Feb-2016
                lblerror.Text = ""
                DBIBHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                solveRFQ("DB", lblTimerDBIB, btnDBIBDeal, btnDBIBPrice, lblDBIBPrice)
            ElseIf Session("hdnPP").ToString = "OCBC" Then
                AllHiddenPrice.Value = "Disable;Disable"
                btnOCBCPrice.Enabled = False
                btnOCBCPrice.CssClass = "btnDisabled"
                btnSolveAll.Enabled = False
                btnSolveAll.CssClass = "btnDisabled"
                lblOCBCPrice.Text = ""
                lblOCBClimit.Text = ""
                lblerror.Text = ""
                OCBCHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                solveRFQ("OCBC", lblTimerOCBC, btnOCBCDeal, btnOCBCPrice, lblOCBCPrice)
            ElseIf Session("hdnPP").ToString = "CITI" Then
                AllHiddenPrice.Value = "Disable;Disable"
                btnCITIPrice.Enabled = False
                btnCITIPrice.CssClass = "btnDisabled"
                btnSolveAll.Enabled = False
                btnSolveAll.CssClass = "btnDisabled"
                lblCITIPrice.Text = ""
                lblCITIlimit.Text = ""
                lblerror.Text = ""
                CITIHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                solveRFQ("CITI", lblTimerCITI, btnCITIDeal, btnCITIPrice, lblCITIPrice)
            ElseIf Session("hdnPP").ToString = "LEONTEQ" Then
                AllHiddenPrice.Value = "Disable;Disable"
                btnLEONTEQPrice.Enabled = False
                btnLEONTEQPrice.CssClass = "btnDisabled"
                btnSolveAll.Enabled = False
                btnSolveAll.CssClass = "btnDisabled"
                lblLEONTEQPrice.Text = ""
                lblLEONTEQlimit.Text = ""
                lblerror.Text = ""
                LEONTEQHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                solveRFQ("LEONTEQ", lblTimerLEONTEQ, btnLEONTEQDeal, btnLEONTEQPrice, lblLEONTEQPrice)
            ElseIf Session("hdnPP").ToString = "COMMERZ" Then
                AllHiddenPrice.Value = "Disable;Disable"
                btnCOMMERZPrice.Enabled = False
                btnCOMMERZPrice.CssClass = "btnDisabled"
                btnSolveAll.Enabled = False
                btnSolveAll.CssClass = "btnDisabled"
                lblCOMMERZPrice.Text = ""
                lblCOMMERZlimit.Text = ""
                lblerror.Text = ""
                COMMERZHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                solveRFQ("COMMERZ", lblTimerCOMMERZ, btnCOMMERZDeal, btnCOMMERZPrice, lblCOMMERZPrice)
            End If
            ''<Dilkhush:22Dec2015 config based GridAuto Refresh>
            Select Case objReadConfig.ReadConfig(dsConfig, "EQC_RealTime_Quote_History", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                Case "Y", "YES"
                    btnLoad_Click(sender, e)
                Case "N", "NO"
                    ''Do Nothing
            End Select
            ''btnLoad_Click(sender, e)
            ''</Dilkhush:22Dec2015 config based GridAuto Refresh>
            Session.Remove("hdnPP")
            If rblShareData.SelectedValue = "GRAPHDATA" Then
                Fill_All_Charts()
            End If
        Catch ex As Exception
            lblerror.Text = "btnhdnSolveSingleRequest_Click:Error occurred in Processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnhdnSolveSingleRequest_Click", ErrorLevel.High)
            Throw ex
        End Try
    End Sub

    Public Sub btnJPMprice_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnJPMprice.Click
        Try
            ''<IMRAN/Dilkhush:30Dec2015: Commented to restore view state on last>
            ''RestoreSolveAll()
            ''RestoreAll()
            'chkConfirmDeal.Visible = False ''<Nikhil M. on 08-Sep-2016: Added For Deal Conformation >
            'chkConfirmDeal.Checked = False ''<Nikhil M. on 08-Sep-2016: Added For Deal Conformation >
            ''<Start : Nikhil M. on 16-Sep-2016: Add For Dropdown>
            drpConfirmDeal.Items.Clear()
            drpConfirmDeal.ClearSelection()
            ''<End : Nikhil M. on 16-Sep-2016: Add For Dropdown>
            If btnJPMprice.Text <> "Order" Then
                Session.Add("hdnPP", "JPM")
                btnhdnSolveSingleRequest_Click(sender, e)
            Else
                '<AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
                'If txtOrderDRAFCN.Text = "0.00" Or txtOrderDRAFCN.Text = "" Or txtOrderDRAFCN.Text = "&nbsp;" Then ''<RushikeshD on 2-Feb-16 for not zero notional check>
                If txtOrderDRAFCN.Text = "" Or txtOrderDRAFCN.Text = "&nbsp;" Or Val(txtOrderDRAFCN.Text) = 0 Then
                    lblerror.ForeColor = Color.Red
                    lblerror.Text = "Can not place Order. Notional Size can not be 0."
                    Exit Sub
                End If
                If checkIssuerLimit("JPM") Then
                    If 1 = 1 Then
                        Set_Order_Pop_Up_Items("JPM")
                        ShowHideConfirmationPopup(True)
                        fill_RMList()
                        fill_RFQRMList()    '''''Dilkhush 28Oct2016 Added to load RM on demand
                        ''<Start | Nikhil M. on 20-Sep-2016: Added for confirm Deal Reason>
                        GetBestPriceConfirm(JpmHiddenPrice.Value)
                        ''<End | Nikhil M. on 20-Sep-2016: Added for confirm Deal Reason>
                    Else
                        btnJPMDeal_Click(sender, e)
                    End If
                End If
                '</AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
                btnJPMprice.Text = "Order"
                End If
            ''<IMRAN/Dilkhush 30Dec2015: TO restore button view state>
            RestoreSolveAll()
            RestoreAll()
            If UCase(Request.QueryString("EXTLOD")) = "REPRICEPOOL" Or UCase(Request.QueryString("EXTLOD")) = "HEDGE" Then
                EnableDisableForOrderPoolData(Convert.ToString(Session("DRARePricePPName")))
            End If
        Catch ex As Exception
            lblerror.Text = "btnJPMprice_Click:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnJPMprice_Click", ErrorLevel.High)
        End Try
    End Sub


    Public Sub btnHSBCPrice_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnHSBCPrice.Click
        Try
            ''<IMRAN/Dilkhush:30Dec2015: Commented to restore view state on last>
            ''RestoreSolveAll()
            ''RestoreAll()
            'chkConfirmDeal.Visible = False ''<Nikhil M. on 08-Sep-2016: Added For Deal Conformation >
            'chkConfirmDeal.Checked = False ''<Nikhil M. on 08-Sep-2016: Added For Deal Conformation >
            ''<Start : Nikhil M. on 16-Sep-2016: Add For Dropdown>
            drpConfirmDeal.Items.Clear()
            drpConfirmDeal.ClearSelection()
            ''<End : Nikhil M. on 16-Sep-2016: Add For Dropdown>
            If btnHSBCPrice.Text <> "Order" Then
                Session.Add("hdnPP", "HSBC")
                btnhdnSolveSingleRequest_Click(sender, e)
            Else
                '<AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
                If txtOrderDRAFCN.Text = "" Or txtOrderDRAFCN.Text = "&nbsp;" OrElse Val(txtOrderDRAFCN.Text) = 0 Then  ''<RushikeshD on 2-Feb-16 for not zero notional check>
                    lblerror.ForeColor = Color.Red
                    lblerror.Text = "Can not place Order. Notional Size can not be 0."
                    Exit Sub
                End If
                If checkIssuerLimit("HSBC") Then
                    If 1 = 1 Then
                        Set_Order_Pop_Up_Items("HSBC")
                        ShowHideConfirmationPopup(True)
                        fill_RMList()
                        fill_RFQRMList()    '''''Dilkhush 28Oct2016 Added to load RM on demand
                        ''<Start | Nikhil M. on 20-Sep-2016: Added for confirm Deal Reason>
                        GetBestPriceConfirm(HsbcHiddenPrice.Value)
                        ''<End | Nikhil M. on 20-Sep-2016: Added for confirm Deal Reason>
                    Else
                        btnHSBCDeal_Click(sender, e)
                    End If
                End If
                '</AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
                btnHSBCPrice.Text = "Order"
                End If
            ''<IMRAN/Dilkhush 30Dec2015: TO restore button view state>
            RestoreSolveAll()
            RestoreAll()
            If UCase(Request.QueryString("EXTLOD")) = "REPRICEPOOL" Or UCase(Request.QueryString("EXTLOD")) = "HEDGE" Then
                EnableDisableForOrderPoolData(Convert.ToString(Session("DRARePricePPName")))
            End If
        Catch ex As Exception
            lblerror.Text = "btnHSBCPrice_Click:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnHSBCPrice_Click", ErrorLevel.High)
        End Try
    End Sub

    Public Sub btnCSPrice_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnCSPrice.Click
        Try
            ''<IMRAN/Dilkhush:30Dec2015: Commented to restore view state on last>
            ''RestoreSolveAll()
            ''RestoreAll()
            'chkConfirmDeal.Visible = False ''<Nikhil M. on 08-Sep-2016: Added For Deal Conformation >
            'chkConfirmDeal.Checked = False ''<Nikhil M. on 08-Sep-2016: Added For Deal Conformation >
            ''<Start : Nikhil M. on 16-Sep-2016: Add For Dropdown>
            drpConfirmDeal.Items.Clear()
            drpConfirmDeal.ClearSelection()
            ''<End : Nikhil M. on 16-Sep-2016: Add For Dropdown>
            If btnCSPrice.Text <> "Order" Then
                Session.Add("hdnPP", "CS")
                btnhdnSolveSingleRequest_Click(sender, e)
            Else
                '<AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
                'If txtOrderDRAFCN.Text = "0.00" Or txtOrderDRAFCN.Text = "" Or txtOrderDRAFCN.Text = "&nbsp;" Then ''<RushikeshD on 2-Feb-16 for not zero notional check>
                If txtOrderDRAFCN.Text = "" Or txtOrderDRAFCN.Text = "&nbsp;" Or Val(txtOrderDRAFCN.Text) = 0 Then
                    lblerror.ForeColor = Color.Red
                    lblerror.Text = "Can not place Order. Notional Size can not be 0."
                    Exit Sub
                End If
                If checkIssuerLimit("CS") Then
                    If 1 = 1 Then
                        Set_Order_Pop_Up_Items("CS")
                        ShowHideConfirmationPopup(True)
                        fill_RMList()
                        fill_RFQRMList()    '''''Dilkhush 28Oct2016 Added to load RM on demand
                        ''<Start | Nikhil M. on 20-Sep-2016: Added for confirm Deal Reason>
                        GetBestPriceConfirm(CsHiddenPrice.Value)
                        ''<End | Nikhil M. on 20-Sep-2016: Added for confirm Deal Reason>
                    Else
                        btnCSDeal_Click(sender, e)
                    End If
                End If
                '</AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>

                btnCSPrice.Text = "Order"
                End If
            ''<IMRAN/Dilkhush 30Dec2015: TO restore button view state>
            RestoreSolveAll()
            RestoreAll()
            If UCase(Request.QueryString("EXTLOD")) = "REPRICEPOOL" Or UCase(Request.QueryString("EXTLOD")) = "HEDGE" Then
                EnableDisableForOrderPoolData(Convert.ToString(Session("DRARePricePPName")))
            End If
        Catch ex As Exception
            lblerror.Text = "btnCSPrice_Click:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnCSPrice_Click", ErrorLevel.High)
        End Try
    End Sub

    Public Sub btnUBSPrice_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnUBSPrice.Click
        Try
            ''<IMRAN/Dilkhush:30Dec2015: Commented to restore view state on last>
            ''RestoreSolveAll()
            ''RestoreAll()
            'chkConfirmDeal.Visible = False ''<Nikhil M. on 08-Sep-2016: Added For Deal Conformation >
            'chkConfirmDeal.Checked = False ''<Nikhil M. on 08-Sep-2016: Added For Deal Conformation >
            ''<Start : Nikhil M. on 16-Sep-2016: Add For Dropdown>
            drpConfirmDeal.Items.Clear()
            drpConfirmDeal.ClearSelection()
            ''<End : Nikhil M. on 16-Sep-2016: Add For Dropdown>
            If btnUBSPrice.Text <> "Order" Then
                Session.Add("hdnPP", "UBS")
                btnhdnSolveSingleRequest_Click(sender, e)
            Else
                '<AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
                'If txtOrderDRAFCN.Text = "0.00" Or txtOrderDRAFCN.Text = "" Or txtOrderDRAFCN.Text = "&nbsp;" Then ''<RushikeshD on 2-Feb-16 for not zero notional check>
                If txtOrderDRAFCN.Text = "" Or txtOrderDRAFCN.Text = "&nbsp;" Or Val(txtOrderDRAFCN.Text) = 0 Then
                    lblerror.ForeColor = Color.Red
                    lblerror.Text = "Can not place Order. Notional Size can not be 0."
                    Exit Sub
                End If
                If checkIssuerLimit("UBS") Then
                    If 1 = 1 Then
                        Set_Order_Pop_Up_Items("UBS")
                        ShowHideConfirmationPopup(True)
                        fill_RMList()
                        fill_RFQRMList()    '''''Dilkhush 28Oct2016 Added to load RM on demand
                    Else
                        btnUBSDeal_Click(sender, e)
                    End If
                End If
                '</AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
                btnUBSPrice.Text = "Order"
            End If
            ''<IMRAN/Dilkhush 30Dec2015: TO restore button view state>
            RestoreSolveAll()
            RestoreAll()
            If UCase(Request.QueryString("EXTLOD")) = "REPRICEPOOL" Or UCase(Request.QueryString("EXTLOD")) = "HEDGE" Then
                EnableDisableForOrderPoolData(Convert.ToString(Session("DRARePricePPName")))
            End If
        Catch ex As Exception
            lblerror.Text = "btnUBSPrice_Click:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnUBSPrice_Click", ErrorLevel.High)
        End Try
    End Sub

    Public Function setRedirectedConfirmOrderPopUp(ByVal RedirectedOrderId As String) As Boolean

        'Select Case objReadConfig.ReadConfig(dsConfig, "EQC_AllowHongKongForOrderPlacement", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
        '    Case "Y", "YES"
        '        ddlBookingBranchPopUpValue.Enabled = True
        '    Case "N", "NO"
        '        ddlBookingBranchPopUpValue.Enabled = False
        'End Select

        Dim dtROrderDetails As DataTable
        dtROrderDetails = New DataTable("ROrderDetailsOrder")



        If Not IsNothing(Request.QueryString("RedirectedOrderId")) Then
            If RedirectedOrderId.Trim <> "" Then
                        lblIssuerPopUpCaption.Text = "Issuer"
                objELNRFQ.Get_ELN_Redirected_Order_Details(RedirectedOrderId, dtROrderDetails)
                ddlBookingBranchPopUpValue.SelectedValue = dtROrderDetails.Rows(0).Item("EP_Deal_Booking_Branch").ToString
                ddlOrderTypePopUpValue.SelectedValue = dtROrderDetails.Rows(0).Item("EP_OrderType").ToString
                If ddlOrderTypePopUpValue.SelectedValue = "Limit" Then
                    ddlBasketSharesPopValue.Visible = True
                    txtLimitPricePopUpValue.Enabled = True
                    txtLimitPricePopUpValue.Style.Add("width", "65px !important")
                    ddlBasketSharesPopValue.Style.Add("width", "80px !important")
                    If dtROrderDetails.Rows(0).Item("ER_LimitPrice1").ToString().Trim <> "" And dtROrderDetails.Rows(0).Item("ER_LimitPrice1").ToString().Trim <> "&nbsp;" And dtROrderDetails.Rows(0).Item("ER_LimitPrice1").ToString().Trim <> "0" Then
                        ddlBasketSharesPopValue.SelectedIndex = 0
                        txtLimitPricePopUpValue.Text = dtROrderDetails.Rows(0).Item("ER_LimitPrice1").ToString().Trim
                    ElseIf dtROrderDetails.Rows(0).Item("ER_LimitPrice2").ToString().Trim <> "" And dtROrderDetails.Rows(0).Item("ER_LimitPrice2").ToString().Trim <> "&nbsp;" And dtROrderDetails.Rows(0).Item("ER_LimitPrice2").ToString().Trim <> "0" Then
                        ddlBasketSharesPopValue.SelectedIndex = 1
                        txtLimitPricePopUpValue.Text = dtROrderDetails.Rows(0).Item("ER_LimitPrice2").ToString().Trim
                    ElseIf dtROrderDetails.Rows(0).Item("ER_LimitPrice3").ToString().Trim <> "" And dtROrderDetails.Rows(0).Item("ER_LimitPrice3").ToString().Trim <> "&nbsp;" And dtROrderDetails.Rows(0).Item("ER_LimitPrice3").ToString().Trim <> "0" Then
                        ddlBasketSharesPopValue.SelectedIndex = 2
                        txtLimitPricePopUpValue.Text = dtROrderDetails.Rows(0).Item("ER_LimitPrice3").ToString().Trim
                    End If
                End If
            Else
                ddlBasketSharesPopValue.Visible = False
                txtLimitPricePopUpValue.Enabled = False
            End If
        End If



    End Function
    ''KBM on 19-March-2014
    Public Function Set_Order_Pop_Up_Items(ByVal Issuer As String) As Boolean
        Try
            'AvinashG. on 09-Jul-2016
            chkUpfrontOverride.Checked = False
            chkUpfrontOverride.Visible = False

            ''AshwiniP on 23Sept16 
            Session.Remove("dtDRAFCNPreTradeAllocation")
            Dim tempDt As DataTable
            tempDt = New DataTable("tempDt")
            tempDt.Columns.Add("RM_Name", GetType(String))
            tempDt.Columns.Add("Account_Number", GetType(String))
            tempDt.Columns.Add("AlloNotional", GetType(String))
            tempDt.Columns.Add("Cust_ID", GetType(String))
            tempDt.Columns.Add("DocId", GetType(String))
            tempDt.Columns.Add("EPOF_OrderId", GetType(String))
            tempDt.Rows.InsertAt(tempDt.NewRow(), 0)
            Session.Add("dtDRAFCNPreTradeAllocation", tempDt)
            grdRMData.DataSource = tempDt
            grdRMData.DataBind()
            For Each row As GridViewRow In grdRMData.Rows
                If row.RowType = DataControlRowType.DataRow Then
                    row.Cells(0).Controls.OfType(Of CheckBox)().FirstOrDefault().Checked = True
                End If
                OnCheckedChanged(CType(grdRMData.Rows((0)).Cells(0).FindControl("CheckBox1"), CheckBox), Nothing)

            Next
            ''grdRMData.Visible = False

            lblIssuerPopUpValue.Text = Issuer
            'Select Case objReadConfig.ReadConfig(dsConfig, "EQC_AllowHongKongForOrderPlacement", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
            '    Case "Y", "YES"
            '        ddlBookingBranchPopUpValue.Enabled = True
            '    Case "N", "NO"
            '        ddlBookingBranchPopUpValue.Enabled = False
            'End Select
                    lblIssuerPopUpCaption.Text = "Issuer"
            ddlBasketSharesPopValue.Items.Clear()
            Dim strbasketforddl() As String
            strbasketforddl = txtBasketShares.Text.Split(CChar(","))
            For Each share In strbasketforddl
                ddlBasketSharesPopValue.Items.Add(New DropDownListItem(share, share)) 'Mohit Lalwani on 8-Aug-2016
            Next
            '<AvinashG on 11-Dec-2015  EQBOSDEV-174 - New UI for Order Confirmation Popup >
            ''lblProductNamePopUpValue.Text = "(" & ddlDRAType.SelectedItem.Text & ")"
            lblProductNamePopUpValue.Text = If(ddlDRAType.SelectedItem.Text.ToUpper = "DRA", "Daily Range Accrual Note.", "Fixed Coupon Note.")
            '</AvinashG on 11-Dec-2015  EQBOSDEV-174 - New UI for Order Confirmation Popup >
            lblNotionalPopUpCaption.Text = "Notional"
            lblUpfrontPopUpCaption.Text = "Upfront (%)"
            txtUpfrontPopUpValue.Enabled = True
                    '<Added by Mohit Lalwani on 19-Nov-2015 EQBOSDEV-132 - The order confirmation box do not contain critical information like KO level and strike for FCN>
                    lblKOPopUpValue.Text = txtKOLevel.Text
                    lblKOTypePopUpValue.Text = lblKOLevelSameAsCoupon.Text

                    tdStrikeCaption.Visible = True
                    tdStrikeValue.Visible = True
                    tdTenorPopUpCaption.Visible = True
                    tdTenorPopUpValue.Visible = True
                    lblTenorPopUpValue.Text = txtTenorDRA.Text
                    lblTenorTypePopUpValue.Text = ddlTenorTypeDRA.SelectedItem.Text
            ''OptionalTRAccDeccum.Visible = False

            '  ddlBookingBranchPopUpValue.Enabled = False '<RiddhiS. on 03-Oct-2016: Booking Branch should be disabled and filled on selected CIF/PAN>
                    If ddlSolveForDRA.SelectedValue.Trim.ToUpper.Contains("CONVERSION_STRIKE") Then
                        Select Case UCase(Issuer)
                            Case "JPM"
                                lblStrikePopUpValue.Text = lblJPMPrice.Text
                            Case "CS"
                                lblStrikePopUpValue.Text = lblCSPrice.Text
                            Case "UBS"
                                lblStrikePopUpValue.Text = lblUBSPrice.Text
                            Case "HSBC"
                                lblStrikePopUpValue.Text = lblHSBCPrice.Text
                            Case "BAML"
                                lblStrikePopUpValue.Text = lblBAMLPrice.Text
                            Case "BNPP"
                        lblStrikePopUpValue.Text = lblBNPPPrice.Text
                    Case "DB"
                        lblStrikePopUpValue.Text = lblDBIBPrice.Text
                    Case "OCBC"
                        lblStrikePopUpValue.Text = lblOCBCPrice.Text
                    Case "CITI"
                        lblStrikePopUpValue.Text = lblCITIPrice.Text
                    Case "LEONTEQ"
                        lblStrikePopUpValue.Text = lblLEONTEQPrice.Text
                    Case "COMMERZ"
                        lblStrikePopUpValue.Text = lblCOMMERZPrice.Text
                End Select
                    Else
                        lblStrikePopUpValue.Text = txtStrikeDRAFCN.Text
                    End If
                    'Mohit 25Nov2015
                    tdKICaption.Visible = True
                    If chkKI.Checked = False Then
                        '    tdKICaption.Visible = False
                        tdKIValue.Visible = False
                    Else
                        tdKIValue.Visible = True
                        'If chkKI.Checked Then
                            lblKIPopUpValue.Text = txtKILevel.Text
                            lblKITypePopUpValue.Text = ddlKIType.SelectedItem.Text
                        'Else
                        '    lblKIPopUpValue.Text = ""
                        '    lblKITypePopUpValue.Text = ""
                        'End If
                    End If

                    '</Added by Mohit Lalwani on 19-Nov-2015 EQBOSDEV-132 - The order confirmation box do not contain critical information like KO level and strike for FCN>
            lblIssuerPricePopUpCaption.Text = "IB Price (%)"
            lblClientPricePopUpCaption.Text = "Client Price (%)"
            lblClientYieldPopUpCaption.Text = "Coupon (%p.a.)"
            ddlOrderTypePopUpValue.SelectedIndex = 0
            If ddlOrderTypePopUpValue.SelectedIndex = 0 Then
                ddlBasketSharesPopValue.Visible = False
                txtLimitPricePopUpValue.Width = New WebControls.Unit(175)
            End If
            txtLimitPricePopUpValue.Text = "0"
            txtLimitPricePopUpValue.Enabled = False
	     ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
            lblUnderlyingPopUpValue.Text = If(txtBasketShares.Text = "", ddlShareDRA.SelectedValue, txtBasketShares.Text).ToString
            ''lblNotionalPopUpValue.Text = txtOrderDRAFCN.Text
	     lblNotionalPopUpValue.Text = SetNumberFormat(txtOrderDRAFCN.Text, 0) '' EQBOSDEV-228 Added by chaitali removing decimal
            lblTotalAmtVal.Text = lblNotionalPopUpValue.Text ''AshwiniP 23Sep2016
            lblRemainNotionalVal.Text = lblTotalAmtVal.Text  ''AshwiniP 26Sep2016
            txtUpfrontPopUpValue.Text = txtUpfrontDRA.Text
            lblCurrencyPopUpValue.Text = "(" + ddlNoteCcy.SelectedItem.Text + ")"
            lblClientYieldPopUpValue.Text = txtUpfrontDRA.Text
            Select Case UCase(Issuer)
                Case "JPM"
                    lblClientPricePopUpValue.Text = lblJPMClientPrice.Text
                    Select Case ddlSolveForDRA.SelectedValue.Trim
                        Case "CONVERSION_STRIKE"
                            lblIssuerPricePopUpValue.Text = txtDRAPrice.Text
                            lblClientYieldPopUpValue.Text = txtCoupon.Text
                        Case "COUPON"
                            lblIssuerPricePopUpValue.Text = txtDRAPrice.Text
                            lblClientYieldPopUpValue.Text = lblJPMPrice.Text
                        Case "PRICE"
                            lblIssuerPricePopUpValue.Text = lblJPMPrice.Text
                            lblClientYieldPopUpValue.Text = txtCoupon.Text
                    End Select
                Case "CS"
                    lblClientPricePopUpValue.Text = lblCSClientPrice.Text
                    Select Case ddlSolveForDRA.SelectedValue.Trim
                        Case "CONVERSION_STRIKE"
                            lblIssuerPricePopUpValue.Text = txtDRAPrice.Text
                            lblClientYieldPopUpValue.Text = txtCoupon.Text
                        Case "COUPON"
                            lblIssuerPricePopUpValue.Text = txtDRAPrice.Text
                            lblClientYieldPopUpValue.Text = lblCSPrice.Text
                        Case "PRICE"
                            lblIssuerPricePopUpValue.Text = lblCSPrice.Text
                            lblClientYieldPopUpValue.Text = txtCoupon.Text
                    End Select
                Case "UBS"
                    lblClientPricePopUpValue.Text = lblUBSClientPrice.Text
                    Select Case ddlSolveForDRA.SelectedValue.Trim
                        Case "CONVERSION_STRIKE"
                            lblIssuerPricePopUpValue.Text = txtDRAPrice.Text
                            lblClientYieldPopUpValue.Text = txtCoupon.Text
                        Case "COUPON"
                            lblIssuerPricePopUpValue.Text = txtDRAPrice.Text
                            lblClientYieldPopUpValue.Text = lblUBSPrice.Text
                        Case "PRICE"
                            lblIssuerPricePopUpValue.Text = lblUBSPrice.Text
                            lblClientYieldPopUpValue.Text = txtCoupon.Text
                    End Select
                Case "HSBC"
                    lblClientPricePopUpValue.Text = lblHSBCClientPrice.Text
                    Select Case ddlSolveForDRA.SelectedValue.Trim
                        Case "CONVERSION_STRIKE"
                            lblIssuerPricePopUpValue.Text = txtDRAPrice.Text
                            lblClientYieldPopUpValue.Text = txtCoupon.Text
                        Case "COUPON"
                            lblIssuerPricePopUpValue.Text = txtDRAPrice.Text
                            lblClientYieldPopUpValue.Text = lblHSBCPrice.Text
                        Case "PRICE"
                            lblIssuerPricePopUpValue.Text = lblHSBCPrice.Text
                            lblClientYieldPopUpValue.Text = txtCoupon.Text
                    End Select
                        Case "BAML"
                            lblClientPricePopUpValue.Text = lblBAMLClientPrice.Text
                    Select Case ddlSolveForDRA.SelectedValue.Trim
                        Case "CONVERSION_STRIKE"
                            lblIssuerPricePopUpValue.Text = txtDRAPrice.Text
                            lblClientYieldPopUpValue.Text = txtCoupon.Text
                        Case "COUPON"
                            lblIssuerPricePopUpValue.Text = txtDRAPrice.Text
                                    lblClientYieldPopUpValue.Text = lblBAMLPrice.Text
                        Case "PRICE"
                                    lblIssuerPricePopUpValue.Text = lblBAMLPrice.Text
                            lblClientYieldPopUpValue.Text = txtCoupon.Text
                    End Select
                Case "BNPP"
                    lblClientPricePopUpValue.Text = lblBNPPClientPrice.Text
                    Select Case ddlSolveForDRA.SelectedValue.Trim
                        Case "CONVERSION_STRIKE"
                            lblIssuerPricePopUpValue.Text = txtDRAPrice.Text
                            lblClientYieldPopUpValue.Text = txtCoupon.Text
                        Case "COUPON"
                            lblIssuerPricePopUpValue.Text = txtDRAPrice.Text
                            lblClientYieldPopUpValue.Text = lblBNPPPrice.Text
                        Case "PRICE"
                            lblIssuerPricePopUpValue.Text = lblBNPPPrice.Text
                            lblClientYieldPopUpValue.Text = txtCoupon.Text
                    End Select
                Case "DB"
                    lblClientPricePopUpValue.Text = lblDBIBClientPrice.Text
                    Select Case ddlSolveForDRA.SelectedValue.Trim
                        Case "CONVERSION_STRIKE"
                            lblIssuerPricePopUpValue.Text = txtDRAPrice.Text
                            lblClientYieldPopUpValue.Text = txtCoupon.Text
                        Case "COUPON"
                            lblIssuerPricePopUpValue.Text = txtDRAPrice.Text
                            lblClientYieldPopUpValue.Text = lblDBIBPrice.Text
                        Case "PRICE"
                            lblIssuerPricePopUpValue.Text = lblDBIBPrice.Text
                            lblClientYieldPopUpValue.Text = txtCoupon.Text
                    End Select
                Case "OCBC"
                    lblClientPricePopUpValue.Text = lblOCBCClientPrice.Text
                    Select Case ddlSolveForDRA.SelectedValue.Trim
                        Case "CONVERSION_STRIKE"
                            lblIssuerPricePopUpValue.Text = txtDRAPrice.Text
                            lblClientYieldPopUpValue.Text = txtCoupon.Text
                        Case "COUPON"
                            lblIssuerPricePopUpValue.Text = txtDRAPrice.Text
                            lblClientYieldPopUpValue.Text = lblOCBCPrice.Text
                        Case "PRICE"
                            lblIssuerPricePopUpValue.Text = lblOCBCPrice.Text
                            lblClientYieldPopUpValue.Text = txtCoupon.Text
                    End Select
                Case "CITI"
                    lblClientPricePopUpValue.Text = lblCITIClientPrice.Text
                    Select Case ddlSolveForDRA.SelectedValue.Trim
                        Case "CONVERSION_STRIKE"
                            lblIssuerPricePopUpValue.Text = txtDRAPrice.Text
                            lblClientYieldPopUpValue.Text = txtCoupon.Text
                        Case "COUPON"
                            lblIssuerPricePopUpValue.Text = txtDRAPrice.Text
                            lblClientYieldPopUpValue.Text = lblCITIPrice.Text
                        Case "PRICE"
                            lblIssuerPricePopUpValue.Text = lblCITIPrice.Text
                            lblClientYieldPopUpValue.Text = txtCoupon.Text
                    End Select
                Case "LEONTEQ"
                    lblClientPricePopUpValue.Text = lblLEONTEQClientPrice.Text
                    Select Case ddlSolveForDRA.SelectedValue.Trim
                        Case "CONVERSION_STRIKE"
                            lblIssuerPricePopUpValue.Text = txtDRAPrice.Text
                            lblClientYieldPopUpValue.Text = txtCoupon.Text
                        Case "COUPON"
                            lblIssuerPricePopUpValue.Text = txtDRAPrice.Text
                            lblClientYieldPopUpValue.Text = lblLEONTEQPrice.Text
                        Case "PRICE"
                            lblIssuerPricePopUpValue.Text = lblLEONTEQPrice.Text
                            lblClientYieldPopUpValue.Text = txtCoupon.Text
                    End Select
                Case "COMMERZ"
                    lblClientPricePopUpValue.Text = lblCOMMERZClientPrice.Text
                    Select Case ddlSolveForDRA.SelectedValue.Trim
                        Case "CONVERSION_STRIKE"
                            lblIssuerPricePopUpValue.Text = txtDRAPrice.Text
                            lblClientYieldPopUpValue.Text = txtCoupon.Text
                        Case "COUPON"
                            lblIssuerPricePopUpValue.Text = txtDRAPrice.Text
                            lblClientYieldPopUpValue.Text = lblCOMMERZPrice.Text
                        Case "PRICE"
                            lblIssuerPricePopUpValue.Text = lblCOMMERZPrice.Text
                            lblClientYieldPopUpValue.Text = txtCoupon.Text
                    End Select
            End Select
            Select Case objReadConfig.ReadConfig(dsConfig, "EQC_Follow_AtPar_Lock", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper
                Case "Y", "YES"
                    txtUpfrontPopUpValue.Text = SetNumberFormat((100 - Convert.ToDouble(lblIssuerPricePopUpValue.Text)).ToString, 2)  ''<Dilkhush 09May2016 (100-price)/>
                    txtUpfrontPopUpValue.Enabled = False
                Case "N", "NO"
                    txtUpfrontPopUpValue.Text = txtUpfrontDRA.Text ''<Dilkhush 09May2016 same upfront which is inputed/>
                    txtUpfrontPopUpValue.Enabled = True
            End Select
            lblerrorPopUp.Text = ""
            chkUpfrontOverride.Checked = False
            chkUpfrontOverride.Visible = False

            ' ''<Nikhil M. on 20-Oct-2016: Added for Hide/Visible the Allocation fgrid>
            If IsNothing(Request.QueryString("PoolID")) Then
                grdRMData.Visible = True
                btnAddAllocation.Visible = True
                tblRw1.Visible = True
                tblRw2.Visible = True
                tblRw3.Visible = True
                UPanle11111.Update()
            End If
            ''<Nikhil M. on 17-Oct-2016: Added for hidning the COntrol on hedge>

            If Not IsNothing(Request.QueryString("RedirectedOrderId")) Then
                Dim sROrderID As String
                sROrderID = Request.QueryString("RedirectedOrderId")
                If sROrderID.Trim <> "" Then

                    setRedirectedConfirmOrderPopUp(sROrderID)

                End If
            End If
            Return True
        Catch ex As Exception
            lblerror.Text = "set_Order_Pop_Up_Items:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "set_Order_Pop_UP_Items", ErrorLevel.High)
            Throw ex
            Return False
        End Try

    End Function

    Public Sub btnBNPPPrice_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnBNPPPrice.Click
        Try
            ''<IMRAN/Dilkhush:30Dec2015: Commented to restore view state on last>
            ''RestoreSolveAll()
            ''RestoreAll()
            'chkConfirmDeal.Visible = False ''<Nikhil M. on 08-Sep-2016: Added For Deal Conformation >
            'chkConfirmDeal.Checked = False ''<Nikhil M. on 08-Sep-2016: Added For Deal Conformation >
            ''<Start : Nikhil M. on 16-Sep-2016: Add For Dropdown>
            drpConfirmDeal.Items.Clear()
            drpConfirmDeal.ClearSelection()
            ''<End : Nikhil M. on 16-Sep-2016: Add For Dropdown>
            If btnBNPPPrice.Text <> "Order" Then
                Session.Add("hdnPP", "BNPP")
                btnhdnSolveSingleRequest_Click(sender, e)
            Else
                '<AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
                    'If txtOrderDRAFCN.Text = "0.00" Or txtOrderDRAFCN.Text = "" Or txtOrderDRAFCN.Text = "&nbsp;" Then ''<RushikeshD on 2-Feb-16 for not zero notional check>
                If txtOrderDRAFCN.Text = "" Or txtOrderDRAFCN.Text = "&nbsp;" Or Val(txtOrderDRAFCN.Text) = 0 Then
                    lblerror.ForeColor = Color.Red
                    lblerror.Text = "Can not place Order. Notional Size can not be 0."
                    Exit Sub
                End If
                If checkIssuerLimit("BNPP") Then
                    If 1 = 1 Then
                        Set_Order_Pop_Up_Items("BNPP")
                        ShowHideConfirmationPopup(True)
                        fill_RMList()
                        fill_RFQRMList()    '''''Dilkhush 28Oct2016 Added to load RM on demand
                        ''<Start | Nikhil M. on 20-Sep-2016: Added for confirm Deal Reason>
                        GetBestPriceConfirm(BNPPHiddenPrice.Value)
                        ''<End | Nikhil M. on 20-Sep-2016: Added for confirm Deal Reason>
                    Else
                        btnBNPPDeal_Click(sender, e)
                    End If
                End If
                '</AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
                btnBNPPPrice.Text = "Order"
            End If
            ''<IMRAN/Dilkhush 30Dec2015: TO restore button view state>
            RestoreSolveAll()
            RestoreAll()
            If UCase(Request.QueryString("EXTLOD")) = "REPRICEPOOL" Or UCase(Request.QueryString("EXTLOD")) = "HEDGE" Then
                EnableDisableForOrderPoolData(Convert.ToString(Session("DRARePricePPName")))
            End If
        Catch ex As Exception
            lblerror.Text = "btnBNPPPrice_Click:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnBNPPPrice_Click", ErrorLevel.High)
        End Try
    End Sub

    Public Sub btnDBIBPrice_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnDBIBPrice.Click
        Try
            ''<IMRAN/Dilkhush:30Dec2015: Commented to restore view state on last>
            ''RestoreSolveAll()
            ''RestoreAll()
            'chkConfirmDeal.Visible = False ''<Nikhil M. on 08-Sep-2016: Added For Deal Conformation >
            'chkConfirmDeal.Checked = False ''<Nikhil M. on 08-Sep-2016: Added For Deal Conformation >
            ''<Start : Nikhil M. on 16-Sep-2016: Add For Dropdown>
            drpConfirmDeal.Items.Clear()
            drpConfirmDeal.ClearSelection()
            ''<End : Nikhil M. on 16-Sep-2016: Add For Dropdown>
            If btnDBIBPrice.Text <> "Order" Then
                Session.Add("hdnPP", "DB")
                btnhdnSolveSingleRequest_Click(sender, e)
            Else
                '<AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
                'If txtOrderDRAFCN.Text = "0.00" Or txtOrderDRAFCN.Text = "" Or txtOrderDRAFCN.Text = "&nbsp;" Then ''<RushikeshD on 2-Feb-16 for not zero notional check>
                If txtOrderDRAFCN.Text = "" Or txtOrderDRAFCN.Text = "&nbsp;" Or Val(txtOrderDRAFCN.Text) = 0 Then
                    lblerror.ForeColor = Color.Red
                    lblerror.Text = "Can not place Order. Notional Size can not be 0."
                    Exit Sub
                End If
                If checkIssuerLimit("DB") Then
                    If 1 = 1 Then
                        Set_Order_Pop_Up_Items("DB")
                        ShowHideConfirmationPopup(True)
                        fill_RMList()
                        fill_RFQRMList()    '''''Dilkhush 28Oct2016 Added to load RM on demand
                        ''<Start | Nikhil M. on 20-Sep-2016: Added for confirm Deal Reason>
                        GetBestPriceConfirm(DBIBHiddenPrice.Value)
                        ''<End | Nikhil M. on 20-Sep-2016: Added for confirm Deal Reason>
                    Else
                        btnDBIBDeal_Click(sender, e)
                    End If
                End If
                '</AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
                btnDBIBPrice.Text = "Order"
            End If
            ''<IMRAN/Dilkhush 30Dec2015: TO restore button view state>
            RestoreSolveAll()
            RestoreAll()
            If UCase(Request.QueryString("EXTLOD")) = "REPRICEPOOL" Or UCase(Request.QueryString("EXTLOD")) = "HEDGE" Then
                EnableDisableForOrderPoolData(Convert.ToString(Session("DRARePricePPName")))
            End If
        Catch ex As Exception
            lblerror.Text = "btnDBIBPrice_Click:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnDBIBPrice_Click", ErrorLevel.High)
        End Try
    End Sub

    Public Sub btnOCBCPrice_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnOCBCPrice.Click
        Try
            ''<IMRAN/Dilkhush:30Dec2015: Commented to restore view state on last>
            ''RestoreSolveAll()
            ''RestoreAll()
            'chkConfirmDeal.Visible = False ''<Nikhil M. on 08-Sep-2016: Added For Deal Conformation >
            'chkConfirmDeal.Checked = False ''<Nikhil M. on 08-Sep-2016: Added For Deal Conformation >
            ''<Start : Nikhil M. on 16-Sep-2016: Add For Dropdown>
            drpConfirmDeal.Items.Clear()
            drpConfirmDeal.ClearSelection()
            ''<End : Nikhil M. on 16-Sep-2016: Add For Dropdown>
            If btnOCBCPrice.Text <> "Order" Then
                Session.Add("hdnPP", "OCBC")
                btnhdnSolveSingleRequest_Click(sender, e)
            Else
                '<AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
                'If txtOrderDRAFCN.Text = "0.00" Or txtOrderDRAFCN.Text = "" Or txtOrderDRAFCN.Text = "&nbsp;" Then ''<RushikeshD on 2-Feb-16 for not zero notional check>
                If txtOrderDRAFCN.Text = "" Or txtOrderDRAFCN.Text = "&nbsp;" Or Val(txtOrderDRAFCN.Text) = 0 Then
                    lblerror.ForeColor = Color.Red
                    lblerror.Text = "Can not place Order. Notional Size can not be 0."
                    Exit Sub
                End If
                If checkIssuerLimit("OCBC") Then
                    If 1 = 1 Then
                        Set_Order_Pop_Up_Items("OCBC")
                        ShowHideConfirmationPopup(True)
                        fill_RMList()
                        fill_RFQRMList()    '''''Dilkhush 28Oct2016 Added to load RM on demand
                        ''<Start | Nikhil M. on 20-Sep-2016: Added for confirm Deal Reason>
                        GetBestPriceConfirm(OCBCHiddenPrice.Value)
                        ''<End | Nikhil M. on 20-Sep-2016: Added for confirm Deal Reason>
                    Else
                        btnOCBCDeal_Click(sender, e)
                    End If
                End If
                '</AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
                btnOCBCPrice.Text = "Order"
            End If
            ''<IMRAN/Dilkhush 30Dec2015: TO restore button view state>
            RestoreSolveAll()
            RestoreAll()
            If UCase(Request.QueryString("EXTLOD")) = "REPRICEPOOL" Or UCase(Request.QueryString("EXTLOD")) = "HEDGE" Then
                EnableDisableForOrderPoolData(Convert.ToString(Session("DRARePricePPName")))
            End If
        Catch ex As Exception
            lblerror.Text = "btnOCBCPrice_Click:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnOCBCPrice_Click", ErrorLevel.High)
        End Try
    End Sub

    Public Sub btnCITIPrice_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnCITIPrice.Click
        Try
            ''<IMRAN/Dilkhush:30Dec2015: Commented to restore view state on last>
            ''RestoreSolveAll()
            ''RestoreAll()
            'chkConfirmDeal.Visible = False ''<Nikhil M. on 08-Sep-2016: Added For Deal Conformation >
            'chkConfirmDeal.Checked = False ''<Nikhil M. on 08-Sep-2016: Added For Deal Conformation >
            ''<Start : Nikhil M. on 16-Sep-2016: Add For Dropdown>
            drpConfirmDeal.Items.Clear()
            drpConfirmDeal.ClearSelection()
            ''<End : Nikhil M. on 16-Sep-2016: Add For Dropdown>
            If btnCITIPrice.Text <> "Order" Then
                Session.Add("hdnPP", "CITI")
                btnhdnSolveSingleRequest_Click(sender, e)
            Else
                '<AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
                'If txtOrderDRAFCN.Text = "0.00" Or txtOrderDRAFCN.Text = "" Or txtOrderDRAFCN.Text = "&nbsp;" Then ''<RushikeshD on 2-Feb-16 for not zero notional check>
                If txtOrderDRAFCN.Text = "" Or txtOrderDRAFCN.Text = "&nbsp;" Or Val(txtOrderDRAFCN.Text) = 0 Then
                    lblerror.ForeColor = Color.Red
                    lblerror.Text = "Can not place Order. Notional Size can not be 0."
                    Exit Sub
                End If
                If checkIssuerLimit("CITI") Then
                    If 1 = 1 Then
                        Set_Order_Pop_Up_Items("CITI")
                        ShowHideConfirmationPopup(True)
                        fill_RMList()
                        fill_RFQRMList()    '''''Dilkhush 28Oct2016 Added to load RM on demand
                        ''<Start | Nikhil M. on 20-Sep-2016: Added for confirm Deal Reason>
                        GetBestPriceConfirm(CITIHiddenPrice.Value)
                        ''<End | Nikhil M. on 20-Sep-2016: Added for confirm Deal Reason>
                    Else
                        btnCITIDeal_Click(sender, e)
                    End If
                End If
                '</AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
                btnCITIPrice.Text = "Order"
            End If
            ''<IMRAN/Dilkhush 30Dec2015: TO restore button view state>
            RestoreSolveAll()
            RestoreAll()
            If UCase(Request.QueryString("EXTLOD")) = "REPRICEPOOL" Or UCase(Request.QueryString("EXTLOD")) = "HEDGE" Then
                EnableDisableForOrderPoolData(Convert.ToString(Session("DRARePricePPName")))
            End If
        Catch ex As Exception
            lblerror.Text = "btnCITIPrice_Click:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnCITIPrice_Click", ErrorLevel.High)
        End Try
    End Sub
    Public Sub btnLEONTEQPrice_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnLEONTEQPrice.Click
        Try
            ''<IMRAN/Dilkhush:30Dec2015: Commented to restore view state on last>
            ''RestoreSolveAll()
            ''RestoreAll()
            'chkConfirmDeal.Visible = False ''<Nikhil M. on 08-Sep-2016: Added For Deal Conformation >
            'chkConfirmDeal.Checked = False ''<Nikhil M. on 08-Sep-2016: Added For Deal Conformation >
            ''<Start : Nikhil M. on 16-Sep-2016: Add For Dropdown>
            drpConfirmDeal.Items.Clear()
            drpConfirmDeal.ClearSelection()
            ''<End : Nikhil M. on 16-Sep-2016: Add For Dropdown>
            If btnLEONTEQPrice.Text <> "Order" Then
                Session.Add("hdnPP", "LEONTEQ")
                btnhdnSolveSingleRequest_Click(sender, e)
            Else
                '<AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
                'If txtOrderDRAFCN.Text = "0.00" Or txtOrderDRAFCN.Text = "" Or txtOrderDRAFCN.Text = "&nbsp;" Then ''<RushikeshD on 2-Feb-16 for not zero notional check>
                If txtOrderDRAFCN.Text = "" Or txtOrderDRAFCN.Text = "&nbsp;" Or Val(txtOrderDRAFCN.Text) = 0 Then
                    lblerror.ForeColor = Color.Red
                    lblerror.Text = "Can not place Order. Notional Size can not be 0."
                    Exit Sub
                End If
                If checkIssuerLimit("LEONTEQ") Then
                    If 1 = 1 Then
                        Set_Order_Pop_Up_Items("LEONTEQ")
                        ShowHideConfirmationPopup(True)
                        fill_RMList()
                        fill_RFQRMList()    '''''Dilkhush 28Oct2016 Added to load RM on demand
                        ''<Start | Nikhil M. on 20-Sep-2016: Added for confirm Deal Reason>
                        GetBestPriceConfirm(LEONTEQHiddenPrice.Value)
                        ''<End | Nikhil M. on 20-Sep-2016: Added for confirm Deal Reason>
                    Else
                        btnLEONTEQDeal_Click(sender, e)
                    End If
                End If
                '</AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
                btnLEONTEQPrice.Text = "Order"
            End If
            ''<IMRAN/Dilkhush 30Dec2015: TO restore button view state>
            RestoreSolveAll()
            RestoreAll()
            If UCase(Request.QueryString("EXTLOD")) = "REPRICEPOOL" Or UCase(Request.QueryString("EXTLOD")) = "HEDGE" Then
                EnableDisableForOrderPoolData(Convert.ToString(Session("DRARePricePPName")))
            End If
        Catch ex As Exception
            lblerror.Text = "btnLEONTEQPrice_Click:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnLEONTEQPrice_Click", ErrorLevel.High)
        End Try
    End Sub
    Public Sub btnCOMMERZPrice_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnCOMMERZPrice.Click
        Try
            ''<IMRAN/Dilkhush:30Dec2015: Commented to restore view state on last>
            ''RestoreSolveAll()
            ''RestoreAll()
            'chkConfirmDeal.Visible = False ''<Nikhil M. on 08-Sep-2016: Added For Deal Conformation >
            'chkConfirmDeal.Checked = False ''<Nikhil M. on 08-Sep-2016: Added For Deal Conformation >
            ''<Start : Nikhil M. on 16-Sep-2016: Add For Dropdown>
            drpConfirmDeal.Items.Clear()
            drpConfirmDeal.ClearSelection()
            ''<End : Nikhil M. on 16-Sep-2016: Add For Dropdown>
            If btnCOMMERZPrice.Text <> "Order" Then
                Session.Add("hdnPP", "COMMERZ")
                btnhdnSolveSingleRequest_Click(sender, e)
            Else
                '<AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
                'If txtOrderDRAFCN.Text = "0.00" Or txtOrderDRAFCN.Text = "" Or txtOrderDRAFCN.Text = "&nbsp;" Then ''<RushikeshD on 2-Feb-16 for not zero notional check>
                If txtOrderDRAFCN.Text = "" Or txtOrderDRAFCN.Text = "&nbsp;" Or Val(txtOrderDRAFCN.Text) = 0 Then
                    lblerror.ForeColor = Color.Red
                    lblerror.Text = "Can not place Order. Notional Size can not be 0."
                    Exit Sub
                End If
                If checkIssuerLimit("COMMERZ") Then
                    If 1 = 1 Then
                        Set_Order_Pop_Up_Items("COMMERZ")
                        ShowHideConfirmationPopup(True)
                        fill_RMList()
                        fill_RFQRMList()    '''''Dilkhush 28Oct2016 Added to load RM on demand
                        ''<Start | Nikhil M. on 20-Sep-2016: Added for confirm Deal Reason>
                        GetBestPriceConfirm(COMMERZHiddenPrice.Value)
                        ''<End | Nikhil M. on 20-Sep-2016: Added for confirm Deal Reason>
                    Else
                        btnCOMMERZDeal_Click(sender, e)
                    End If
                End If
                '</AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
                btnCOMMERZPrice.Text = "Order"
            End If
            ''<IMRAN/Dilkhush 30Dec2015: TO restore button view state>
            RestoreSolveAll()
            RestoreAll()
            If UCase(Request.QueryString("EXTLOD")) = "REPRICEPOOL" Or UCase(Request.QueryString("EXTLOD")) = "HEDGE" Then
                EnableDisableForOrderPoolData(Convert.ToString(Session("DRARePricePPName")))
            End If
        Catch ex As Exception
            lblerror.Text = "btnCOMMERZPrice_Click:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnCOMMERZPrice_Click", ErrorLevel.High)
        End Try
    End Sub
    Public Sub btnBAMLPrice_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnBAMLPrice.Click
        Try
            ''<IMRAN/Dilkhush:30Dec2015: Commented to restore view state on last>
            ''RestoreSolveAll()
            ''RestoreAll()
            'chkConfirmDeal.Visible = False ''<Nikhil M. on 08-Sep-2016: Added For Deal Conformation >
            'chkConfirmDeal.Checked = False ''<Nikhil M. on 08-Sep-2016: Added For Deal Conformation >
            ''<Start : Nikhil M. on 16-Sep-2016: Add For Dropdown>
            drpConfirmDeal.Items.Clear()
            drpConfirmDeal.ClearSelection()
            ''<End : Nikhil M. on 16-Sep-2016: Add For Dropdown>
            If btnBAMLPrice.Text <> "Order" Then
                Session.Add("hdnPP", "BAML")
                btnhdnSolveSingleRequest_Click(sender, e)
            Else
                '<AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
                'If txtOrderDRAFCN.Text = "0.00" Or txtOrderDRAFCN.Text = "" Or txtOrderDRAFCN.Text = "&nbsp;" Then ''<RushikeshD on 2-Feb-16 for not zero notional check>
                If txtOrderDRAFCN.Text = "" Or txtOrderDRAFCN.Text = "&nbsp;" Or Val(txtOrderDRAFCN.Text) = 0 Then
                    lblerror.ForeColor = Color.Red
                    lblerror.Text = "Can not place Order. Notional Size can not be 0."
                    Exit Sub
                End If
                If checkIssuerLimit("BAML") Then
                    If 1 = 1 Then
                        Set_Order_Pop_Up_Items("BAML")
                        ShowHideConfirmationPopup(True)
                        fill_RMList()
                        fill_RFQRMList()    '''''Dilkhush 28Oct2016 Added to load RM on demand
                        ''<Start | Nikhil M. on 20-Sep-2016: Added for confirm Deal Reason>
                        GetBestPriceConfirm(BAMLHiddenPrice.Value)
                        ''<End | Nikhil M. on 20-Sep-2016: Added for confirm Deal Reason>
                    Else
                        btnBAMLDeal_Click(sender, e)
                    End If
                End If
                '</AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
                btnBAMLPrice.Text = "Order"
            End If
            ''<IMRAN/Dilkhush 30Dec2015: TO restore button view state>
            RestoreSolveAll()
            RestoreAll()
            If UCase(Request.QueryString("EXTLOD")) = "REPRICEPOOL" Or UCase(Request.QueryString("EXTLOD")) = "HEDGE" Then
                EnableDisableForOrderPoolData(Convert.ToString(Session("DRARePricePPName")))
            End If

        Catch ex As Exception
            lblerror.Text = "btnBAMLPrice_Click:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnBAMLPrice_Click", ErrorLevel.High)

        End Try
    End Sub

    Public Sub Solve_All_Requests(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnhdnSolveAllRequests.Click
        Dim all_RFQ_IDs As String = String.Empty
        Dim dtUpdate As DataTable
        Dim strQuoteId1 As String = String.Empty
        Dim dtPriceProvider As DataTable
        Dim strJavaScriptAllRequest As New StringBuilder
        Try
            If Chk_validation() = False Then
                Exit Sub
            End If
            ResetMinMaxNotional() 'Mohit Lalwani on 1-Feb-2016
            strJavaScriptAllRequest.AppendLine("document.getElementById('PriceAllWait').style.visibility = 'visible';")
            getAllId = New Hashtable
            getPPId = New Hashtable
            clearFields()
            flag = "I"
            Session.Add("flag", flag)
            dtUpdate = New DataTable("Dummy")
            rbHistory.SelectedValue = "Quote History"
            Dim dtLogin As DataTable
            Dim dr As DataRow()
            Dim dr1 As DataRow()
            dtLogin = CType(Session("PP_Login"), DataTable)
            dtPriceProvider = New DataTable("Price Provider")
            dtPriceProvider = CType(Session("Provide_Id"), DataTable)
            If dtLogin.Rows.Count > 0 Then
                dr = dtLogin.Select("PP_CODE = '" & "JPM" & "' ")
                If dr.Length > 0 Then
                    If btnJPMprice.Visible = True Then
                        If btnJPMprice.Enabled = True Then
                            dr1 = dtPriceProvider.Select("PP_CODE = '" & "JPM" & "' ")
                            JPM_ID = dr1(0).Item("PP_ID").ToString
                            '<AvinashG. on 16-Feb-2016: Optimization>
                            If FillRFQDataTable(JPM_ID) = True Then           ''AshwiniP on 05-Oct-2016 : Notional validation at the time of pricing 
                            Else
                                Exit Sub
                            End If
                            'Get_DRAFCNRFQData_TOXML(JPM_ID)
                            '</AvinashG. on 16-Feb-2016: Optimization>
                            all_RFQ_IDs = Convert.ToString(Session("Quote_ID"))
                            If ddlSolveForDRA.SelectedValue = "PRICE" Then
                                strJavaScriptAllRequest.AppendLine("document.getElementById('JPMwait').style.visibility = 'visible';")
                                strJavaScriptAllRequest.AppendLine("getPrice('" + Convert.ToString(Session("Quote_ID")) + "','" + lblJPMPrice.ClientID + "','" + lblTimer.ClientID + "','" + btnJPMDeal.ClientID + "','" + btnJPMprice.ClientID + "');")
                                JpmHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                            ElseIf ddlSolveForDRA.SelectedValue = "CONVERSION_STRIKE" Then
                                strJavaScriptAllRequest.AppendLine("document.getElementById('JPMwait').style.visibility = 'visible';")
                                strJavaScriptAllRequest.AppendLine("getStrike('" + Convert.ToString(Session("Quote_ID")) + "','" + lblJPMPrice.ClientID + "','" + lblTimer.ClientID + "','" + btnJPMDeal.ClientID + "','" + btnJPMprice.ClientID + "');")
                                JpmHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                            Else
                                strJavaScriptAllRequest.AppendLine("document.getElementById('JPMwait').style.visibility = 'visible';")
                                strJavaScriptAllRequest.AppendLine("getCoupon('" + Convert.ToString(Session("Quote_ID")) + "','" + lblJPMPrice.ClientID + "','" + lblTimer.ClientID + "','" + btnJPMDeal.ClientID + "','" + btnJPMprice.ClientID + "');")
                                JpmHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                            End If
                            strQuoteId1 = all_RFQ_IDs
                            getPPId.Add("JPM", JPM_ID)
                            getAllId.Add(JPM_ID, strQuoteId1)
                            End If
                        End If
                    End If
                End If
                dr = dtLogin.Select("PP_CODE = '" & "CS" & "' ")
                If dr.Length > 0 Then
                    If btnCSPrice.Visible = True Then
                        If btnCSPrice.Enabled = True Then
                        'If chkCS.Checked = True Then ''<Nikhil M. on 17-Sep-2016: Remove chkBox Dependency >
                                dr1 = dtPriceProvider.Select("PP_CODE = '" & "CS" & "' ")
                                CS_ID = dr1(0).Item("PP_ID").ToString
                                '<AvinashG. on 16-Feb-2016: Optimization>
                        If FillRFQDataTable(CS_ID) = True Then            ''AshwiniP on 05-Oct-2016 : Notional validation at the time of pricing 
                        Else
                            Exit Sub
                        End If
                                'Get_DRAFCNRFQData_TOXML(CS_ID)
                                '</AvinashG. on 16-Feb-2016: Optimization>
                                If ddlSolveForDRA.SelectedValue = "PRICE" Then
                                    strJavaScriptAllRequest.AppendLine("document.getElementById('CSwait').style.visibility = 'visible';")
                                    strJavaScriptAllRequest.AppendLine("getPrice('" + Convert.ToString(Session("Quote_ID")) + "','" + lblCSPrice.ClientID + "','" + lblTimerCS.ClientID + "','" + btnCSDeal.ClientID + "','" + btnCSPrice.ClientID + "');")
                                    CsHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                                ElseIf ddlSolveForDRA.SelectedValue = "CONVERSION_STRIKE" Then
                                    strJavaScriptAllRequest.AppendLine("document.getElementById('CSwait').style.visibility = 'visible';")
                                    strJavaScriptAllRequest.AppendLine("getStrike('" + Convert.ToString(Session("Quote_ID")) + "','" + lblCSPrice.ClientID + "','" + lblTimerCS.ClientID + "','" + btnCSDeal.ClientID + "','" + btnCSPrice.ClientID + "');")
                                    CsHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                                Else
                                    strJavaScriptAllRequest.AppendLine("document.getElementById('CSwait').style.visibility = 'visible';")
                                    strJavaScriptAllRequest.AppendLine("getCoupon('" + Convert.ToString(Session("Quote_ID")) + "','" + lblCSPrice.ClientID + "','" + lblTimerCS.ClientID + "','" + btnCSDeal.ClientID + "','" + btnCSPrice.ClientID + "');")
                                    CsHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                                End If
                                If all_RFQ_IDs = "" Then
                                    all_RFQ_IDs = Convert.ToString(Session("Quote_ID"))
                                    strQuoteId1 = all_RFQ_IDs
                                Else
                                    all_RFQ_IDs = all_RFQ_IDs & "," & Convert.ToString(Session("Quote_ID"))
                                End If
                                getPPId.Add("CS", CS_ID)
                                getAllId.Add(CS_ID, Convert.ToString(Session("Quote_ID")))
                        ' End If
                        End If
                    End If
                End If
                dr = dtLogin.Select("PP_CODE = '" & "HSBC" & "' ")
                If dr.Length > 0 Then
                    If btnHSBCPrice.Visible = True Then
                        If btnHSBCPrice.Enabled = True Then
                        'If chkHSBC.Checked = True Then''<Nikhil M. on 17-Sep-2016: Remove chkBox Dependency >
                                dr1 = dtPriceProvider.Select("PP_CODE = '" & "HSBC" & "' ")
                                HSBC_ID = dr1(0).Item("PP_ID").ToString
                                '<AvinashG. on 16-Feb-2016: Optimization>
                        If FillRFQDataTable(HSBC_ID) = True Then              ''AshwiniP on 05-Oct-2016 : Notional validation at the time of pricing 
                        Else
                            Exit Sub
                        End If
                                'Get_DRAFCNRFQData_TOXML(HSBC_ID)
                                '</AvinashG. on 16-Feb-2016: Optimization>
                                If ddlSolveForDRA.SelectedValue = "PRICE" Then
                                    strJavaScriptAllRequest.AppendLine("document.getElementById('HSBCwait').style.visibility = 'visible';")
                                    strJavaScriptAllRequest.AppendLine("getPrice('" + Convert.ToString(Session("Quote_ID")) + "','" + lblHSBCPrice.ClientID + "','" + lblTimerHSBC.ClientID + "','" + btnHSBCDeal.ClientID + "','" + btnHSBCPrice.ClientID + "');")
                                    HsbcHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                                ElseIf ddlSolveForDRA.SelectedValue = "CONVERSION_STRIKE" Then
                                    strJavaScriptAllRequest.AppendLine("document.getElementById('HSBCwait').style.visibility = 'visible';")
                                    strJavaScriptAllRequest.AppendLine("getStrike('" + Convert.ToString(Session("Quote_ID")) + "','" + lblHSBCPrice.ClientID + "','" + lblTimerHSBC.ClientID + "','" + btnHSBCDeal.ClientID + "','" + btnHSBCPrice.ClientID + "');")
                                    HsbcHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                                Else
                                    strJavaScriptAllRequest.AppendLine("document.getElementById('HSBCwait').style.visibility = 'visible';")
                                    strJavaScriptAllRequest.AppendLine("getCoupon('" + Convert.ToString(Session("Quote_ID")) + "','" + lblHSBCPrice.ClientID + "','" + lblTimerHSBC.ClientID + "','" + btnHSBCDeal.ClientID + "','" + btnHSBCPrice.ClientID + "');")
                                    HsbcHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                                End If
                                If all_RFQ_IDs = "" Then
                                    all_RFQ_IDs = Convert.ToString(Session("Quote_ID"))
                                    strQuoteId1 = all_RFQ_IDs
                                Else
                                    all_RFQ_IDs = all_RFQ_IDs & "," & Convert.ToString(Session("Quote_ID"))
                                End If
                                getPPId.Add("HSBC", HSBC_ID)
                                getAllId.Add(HSBC_ID, Convert.ToString(Session("Quote_ID")))
                        'End If
                        End If
                    End If
                End If
                dr = dtLogin.Select("PP_CODE = '" & "BAML" & "' ")
                If dr.Length > 0 Then
                    If btnBAMLPrice.Visible = True Then
                        If btnBAMLPrice.Enabled = True Then
                        'If chkBAML.Checked = True Then''<Nikhil M. on 17-Sep-2016: Remove chkBox Dependency >
                                dr1 = dtPriceProvider.Select("PP_CODE = '" & "BAML" & "' ")
                                BAML_ID = dr1(0).Item("PP_ID").ToString
                                '<AvinashG. on 16-Feb-2016: Optimization>
                        If FillRFQDataTable(BAML_ID) = True Then                  ''AshwiniP on 05-Oct-2016 : Notional validation at the time of pricing 
                        Else
                            Exit Sub
                        End If
                                'Get_DRAFCNRFQData_TOXML(BAML_ID)
                                '</AvinashG. on 16-Feb-2016: Optimization>
                                If ddlSolveForDRA.SelectedValue = "PRICE" Then
                                    'System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "setMacqLoaderVisible", "document.getElementById('MACQwait').style.visibility = 'visible';", True)
                                    strJavaScriptAllRequest.AppendLine("document.getElementById('BAMLwait').style.visibility = 'visible';")
                                    'System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "jsMacqPrice", "getPrice('" + Convert.ToString(Session("Quote_ID")) + "','" + lblBAMLPrice.ClientID + "','" + lblTimerBAML.ClientID + "','" + btnBAMLDeal.ClientID + "','" + btnBAMLPrice.ClientID + "');", True)
                                    strJavaScriptAllRequest.AppendLine("getPrice('" + Convert.ToString(Session("Quote_ID")) + "','" + lblBAMLPrice.ClientID + "','" + lblTimerBAML.ClientID + "','" + btnBAMLDeal.ClientID + "','" + btnBAMLPrice.ClientID + "');")
                                    BAMLHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                                ElseIf ddlSolveForDRA.SelectedValue = "CONVERSION_STRIKE" Then
                                    'System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "setMacqLoaderVisible", "document.getElementById('MACQwait').style.visibility = 'visible';", True)
                                    strJavaScriptAllRequest.AppendLine("document.getElementById('BAMLwait').style.visibility = 'visible';")
                                    'System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "jsMacqPrice", "getStrike('" + Convert.ToString(Session("Quote_ID")) + "','" + lblBAMLPrice.ClientID + "','" + lblTimerBAML.ClientID + "','" + btnBAMLDeal.ClientID + "','" + btnBAMLPrice.ClientID + "');", True)
                                    strJavaScriptAllRequest.AppendLine("getStrike('" + Convert.ToString(Session("Quote_ID")) + "','" + lblBAMLPrice.ClientID + "','" + lblTimerBAML.ClientID + "','" + btnBAMLDeal.ClientID + "','" + btnBAMLPrice.ClientID + "');")
                                    BAMLHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                                Else
                                    'System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "setMacqLoaderVisible", "document.getElementById('MACQwait').style.visibility = 'visible';", True)
                                    strJavaScriptAllRequest.AppendLine("document.getElementById('BAMLwait').style.visibility = 'visible';")
                                    'System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "jsMacqPrice", "getCoupon('" + Convert.ToString(Session("Quote_ID")) + "','" + lblBAMLPrice.ClientID + "','" + lblTimerBAML.ClientID + "','" + btnBAMLDeal.ClientID + "','" + btnBAMLPrice.ClientID + "');", True)
                                    strJavaScriptAllRequest.AppendLine("getCoupon('" + Convert.ToString(Session("Quote_ID")) + "','" + lblBAMLPrice.ClientID + "','" + lblTimerBAML.ClientID + "','" + btnBAMLDeal.ClientID + "','" + btnBAMLPrice.ClientID + "');")
                                    BAMLHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                                End If
                                If all_RFQ_IDs = "" Then
                                    all_RFQ_IDs = Convert.ToString(Session("Quote_ID"))
                                    strQuoteId1 = all_RFQ_IDs
                                Else
                                    all_RFQ_IDs = all_RFQ_IDs & "," & Convert.ToString(Session("Quote_ID"))
                                End If
                                getPPId.Add("BAML", BAML_ID)
                                getAllId.Add(BAML_ID, Convert.ToString(Session("Quote_ID")))
                        'End If
                        End If
                    End If
                End If
                dr = dtLogin.Select("PP_CODE = '" & "BNPP" & "' ")
                If dr.Length > 0 Then
                    If btnBNPPPrice.Visible = True Then
                        If btnBNPPPrice.Enabled = True Then
                        ' If chkBNPP.Checked = True Then ''<Nikhil M. on 17-Sep-2016: Remove chkBox Dependency >
                                dr1 = dtPriceProvider.Select("PP_CODE = '" & "BNPP" & "' ")
                                BNPP_ID = dr1(0).Item("PP_ID").ToString
                                '<AvinashG. on 16-Feb-2016: Optimization>
                        If FillRFQDataTable(BNPP_ID) = True Then              ''AshwiniP on 05-Oct-2016 : Notional validation at the time of pricing 
                        Else
                            Exit Sub
                        End If
                                'Get_DRAFCNRFQData_TOXML(BNPP_ID)
                                '</AvinashG. on 16-Feb-2016: Optimization>
                                If ddlSolveForDRA.SelectedValue = "PRICE" Then
                                    strJavaScriptAllRequest.AppendLine("document.getElementById('BNPPwait').style.visibility = 'visible';")
                                    strJavaScriptAllRequest.AppendLine("getPrice('" + Convert.ToString(Session("Quote_ID")) + "','" + lblBNPPPrice.ClientID + "','" + lblTimerBNPP.ClientID + "','" + btnBNPPDeal.ClientID + "','" + btnBNPPPrice.ClientID + "');")
                                    BNPPHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                                ElseIf ddlSolveForDRA.SelectedValue = "CONVERSION_STRIKE" Then
                                    strJavaScriptAllRequest.AppendLine("document.getElementById('BNPPwait').style.visibility = 'visible';")
                                    strJavaScriptAllRequest.AppendLine("getStrike('" + Convert.ToString(Session("Quote_ID")) + "','" + lblBNPPPrice.ClientID + "','" + lblTimerBNPP.ClientID + "','" + btnBNPPDeal.ClientID + "','" + btnBNPPPrice.ClientID + "');")
                                    BNPPHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                                Else
                                    strJavaScriptAllRequest.AppendLine("document.getElementById('BNPPwait').style.visibility = 'visible';")
                                    strJavaScriptAllRequest.AppendLine("getCoupon('" + Convert.ToString(Session("Quote_ID")) + "','" + lblBNPPPrice.ClientID + "','" + lblTimerBNPP.ClientID + "','" + btnBNPPDeal.ClientID + "','" + btnBNPPPrice.ClientID + "');")
                                    BNPPHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                                End If
                                If all_RFQ_IDs = "" Then
                                    all_RFQ_IDs = Convert.ToString(Session("Quote_ID"))
                                    strQuoteId1 = all_RFQ_IDs
                                Else
                                    all_RFQ_IDs = all_RFQ_IDs & "," & Convert.ToString(Session("Quote_ID"))
                                End If
                                getPPId.Add("BNPP", BNPP_ID)
                                getAllId.Add(BNPP_ID, Convert.ToString(Session("Quote_ID")))
                        'End If
                        End If
                    End If
                End If
                dr = dtLogin.Select("PP_CODE = '" & "UBS" & "' ")
                If dr.Length > 0 Then
                    If btnUBSPrice.Visible = True Then
                        If btnUBSPrice.Enabled = True Then
                        'If chkUBS.Checked = True Then ''<Nikhil M. on 17-Sep-2016: Remove chkBox Dependency >
                                dr1 = dtPriceProvider.Select("PP_CODE = '" & "UBS" & "' ")
                                UBS_ID = dr1(0).Item("PP_ID").ToString
                                '<AvinashG. on 16-Feb-2016: Optimization>
                        If FillRFQDataTable(UBS_ID) = True Then           ''AshwiniP on 05-Oct-2016 : Notional validation at the time of pricing 
                        Else
                            Exit Sub
                        End If
                                'Get_DRAFCNRFQData_TOXML(UBS_ID)
                                '</AvinashG. on 16-Feb-2016: Optimization>
                                If ddlSolveForDRA.SelectedValue = "PRICE" Then
                                    strJavaScriptAllRequest.AppendLine("document.getElementById('UBSwait').style.visibility = 'visible';")
                                    strJavaScriptAllRequest.AppendLine("getPrice('" + Convert.ToString(Session("Quote_ID")) + "','" + lblUBSPrice.ClientID + "','" + lblUBSTimer.ClientID + "','" + btnUBSDeal.ClientID + "','" + btnUBSPrice.ClientID + "');")
                                    UbsHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                                ElseIf ddlSolveForDRA.SelectedValue = "CONVERSION_STRIKE" Then
                                    strJavaScriptAllRequest.AppendLine("document.getElementById('UBSwait').style.visibility = 'visible';")
                                    strJavaScriptAllRequest.AppendLine("getStrike('" + Convert.ToString(Session("Quote_ID")) + "','" + lblUBSPrice.ClientID + "','" + lblUBSTimer.ClientID + "','" + btnUBSDeal.ClientID + "','" + btnUBSPrice.ClientID + "');")
                                    UbsHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                                Else
                                    strJavaScriptAllRequest.AppendLine("document.getElementById('UBSwait').style.visibility = 'visible';")
                                    strJavaScriptAllRequest.AppendLine("getCoupon('" + Convert.ToString(Session("Quote_ID")) + "','" + lblUBSPrice.ClientID + "','" + lblUBSTimer.ClientID + "','" + btnUBSDeal.ClientID + "','" + btnUBSPrice.ClientID + "');")
                                    UbsHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                                End If
                                If all_RFQ_IDs = "" Then
                                    all_RFQ_IDs = Convert.ToString(Session("Quote_ID"))
                                    strQuoteId1 = all_RFQ_IDs
                                Else
                                    all_RFQ_IDs = all_RFQ_IDs & "," & Convert.ToString(Session("Quote_ID"))
                                End If
                                getPPId.Add("UBS", UBS_ID)
                                getAllId.Add(UBS_ID, Convert.ToString(Session("Quote_ID")))
                        'End If
                        End If
                    End If
                End If

                dr = dtLogin.Select("PP_CODE = '" & "DB" & "' ")
                If dr.Length > 0 Then
                    If btnDBIBPrice.Visible = True Then
                        If btnDBIBPrice.Enabled = True Then
                        'If chkDBIB.Checked = True Then ''<Nikhil M. on 17-Sep-2016: Remove chkBox Dependency >
                            dr1 = dtPriceProvider.Select("PP_CODE = '" & "DB" & "' ")
                                DBIB_ID = dr1(0).Item("PP_ID").ToString
                                '<AvinashG. on 16-Feb-2016: Optimization>
                        If FillRFQDataTable(DBIB_ID) = True Then              ''AshwiniP on 05-Oct-2016 : Notional validation at the time of pricing 
                        Else
                            Exit Sub
                        End If
                                'Get_DRAFCNRFQData_TOXML(DBIB_ID)
                                '</AvinashG. on 16-Feb-2016: Optimization>
                                If ddlSolveForDRA.SelectedValue = "PRICE" Then
                                    strJavaScriptAllRequest.AppendLine("document.getElementById('DBIBwait').style.visibility = 'visible';")
                                    strJavaScriptAllRequest.AppendLine("getPrice('" + Convert.ToString(Session("Quote_ID")) + "','" + lblDBIBPrice.ClientID + "','" + lblTimerDBIB.ClientID + "','" + btnDBIBDeal.ClientID + "','" + btnDBIBPrice.ClientID + "');")
                                    DBIBHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                                ElseIf ddlSolveForDRA.SelectedValue = "CONVERSION_STRIKE" Then
                                    strJavaScriptAllRequest.AppendLine("document.getElementById('DBIBwait').style.visibility = 'visible';")
                                    strJavaScriptAllRequest.AppendLine("getStrike('" + Convert.ToString(Session("Quote_ID")) + "','" + lblDBIBPrice.ClientID + "','" + lblTimerDBIB.ClientID + "','" + btnDBIBDeal.ClientID + "','" + btnDBIBPrice.ClientID + "');")
                                    DBIBHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                                Else
                                    strJavaScriptAllRequest.AppendLine("document.getElementById('DBIBwait').style.visibility = 'visible';")
                                    strJavaScriptAllRequest.AppendLine("getCoupon('" + Convert.ToString(Session("Quote_ID")) + "','" + lblDBIBPrice.ClientID + "','" + lblTimerDBIB.ClientID + "','" + btnDBIBDeal.ClientID + "','" + btnDBIBPrice.ClientID + "');")
                                    DBIBHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                                End If
                                If all_RFQ_IDs = "" Then
                                    all_RFQ_IDs = Convert.ToString(Session("Quote_ID"))
                                    strQuoteId1 = all_RFQ_IDs
                                Else
                                    all_RFQ_IDs = all_RFQ_IDs & "," & Convert.ToString(Session("Quote_ID"))
                                End If
                            getPPId.Add("DB", DBIB_ID)
                                getAllId.Add(DBIB_ID, Convert.ToString(Session("Quote_ID")))
                        'End If
                        End If
                    End If
                End If

                dr = dtLogin.Select("PP_CODE = '" & "OCBC" & "' ")
                If dr.Length > 0 Then
                    If btnOCBCPrice.Visible = True Then
                        If btnOCBCPrice.Enabled = True Then
                        'If chkOCBC.Checked = True Then ''<Nikhil M. on 17-Sep-2016: Remove chkBox Dependency >
                                dr1 = dtPriceProvider.Select("PP_CODE = '" & "OCBC" & "' ")
                                OCBC_ID = dr1(0).Item("PP_ID").ToString
                                '<AvinashG. on 16-Feb-2016: Optimization>
                        If FillRFQDataTable(OCBC_ID) = True Then              ''AshwiniP on 05-Oct-2016 : Notional validation at the time of pricing 
                        Else
                            Exit Sub
                        End If
                                'Get_DRAFCNRFQData_TOXML(OCBC_ID)
                                '</AvinashG. on 16-Feb-2016: Optimization>
                                If ddlSolveForDRA.SelectedValue = "PRICE" Then
                                    strJavaScriptAllRequest.AppendLine("document.getElementById('OCBCwait').style.visibility = 'visible';")
                                    strJavaScriptAllRequest.AppendLine("getPrice('" + Convert.ToString(Session("Quote_ID")) + "','" + lblOCBCPrice.ClientID + "','" + lblTimerOCBC.ClientID + "','" + btnOCBCDeal.ClientID + "','" + btnOCBCPrice.ClientID + "');")
                                    OCBCHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                                ElseIf ddlSolveForDRA.SelectedValue = "CONVERSION_STRIKE" Then
                                    strJavaScriptAllRequest.AppendLine("document.getElementById('OCBCwait').style.visibility = 'visible';")
                                    strJavaScriptAllRequest.AppendLine("getStrike('" + Convert.ToString(Session("Quote_ID")) + "','" + lblOCBCPrice.ClientID + "','" + lblTimerOCBC.ClientID + "','" + btnOCBCDeal.ClientID + "','" + btnOCBCPrice.ClientID + "');")
                                    OCBCHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                                Else
                                    strJavaScriptAllRequest.AppendLine("document.getElementById('OCBCwait').style.visibility = 'visible';")
                                    strJavaScriptAllRequest.AppendLine("getCoupon('" + Convert.ToString(Session("Quote_ID")) + "','" + lblOCBCPrice.ClientID + "','" + lblTimerOCBC.ClientID + "','" + btnOCBCDeal.ClientID + "','" + btnOCBCPrice.ClientID + "');")
                                    OCBCHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                                End If
                                If all_RFQ_IDs = "" Then
                                    all_RFQ_IDs = Convert.ToString(Session("Quote_ID"))
                                    strQuoteId1 = all_RFQ_IDs
                                Else
                                    all_RFQ_IDs = all_RFQ_IDs & "," & Convert.ToString(Session("Quote_ID"))
                                End If
                                getPPId.Add("OCBC", OCBC_ID)
                                getAllId.Add(OCBC_ID, Convert.ToString(Session("Quote_ID")))
                        ' End If
                        End If
                    End If
                End If

                dr = dtLogin.Select("PP_CODE = '" & "CITI" & "' ")
                If dr.Length > 0 Then
                    If btnCITIPrice.Visible = True Then
                        If btnCITIPrice.Enabled = True Then
                        'If chkCITI.Checked = True Then ''<Nikhil M. on 17-Sep-2016: Remove chkBox Dependency >
                                dr1 = dtPriceProvider.Select("PP_CODE = '" & "CITI" & "' ")
                                CITI_ID = dr1(0).Item("PP_ID").ToString
                                '<AvinashG. on 16-Feb-2016: Optimization>
                        If FillRFQDataTable(CITI_ID) = True Then                  ''AshwiniP on 05-Oct-2016 : Notional validation at the time of pricing 
                        Else
                            Exit Sub
                        End If
                                'Get_DRAFCNRFQData_TOXML(CITI_ID)
                                '</AvinashG. on 16-Feb-2016: Optimization>
                                If ddlSolveForDRA.SelectedValue = "PRICE" Then
                                    strJavaScriptAllRequest.AppendLine("document.getElementById('CITIwait').style.visibility = 'visible';")
                                    strJavaScriptAllRequest.AppendLine("getPrice('" + Convert.ToString(Session("Quote_ID")) + "','" + lblCITIPrice.ClientID + "','" + lblTimerCITI.ClientID + "','" + btnCITIDeal.ClientID + "','" + btnCITIPrice.ClientID + "');")
                                    CITIHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                                ElseIf ddlSolveForDRA.SelectedValue = "CONVERSION_STRIKE" Then
                                    strJavaScriptAllRequest.AppendLine("document.getElementById('CITIwait').style.visibility = 'visible';")
                                    strJavaScriptAllRequest.AppendLine("getStrike('" + Convert.ToString(Session("Quote_ID")) + "','" + lblCITIPrice.ClientID + "','" + lblTimerCITI.ClientID + "','" + btnCITIDeal.ClientID + "','" + btnCITIPrice.ClientID + "');")
                                    CITIHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                                Else
                                    strJavaScriptAllRequest.AppendLine("document.getElementById('CITIwait').style.visibility = 'visible';")
                                    strJavaScriptAllRequest.AppendLine("getCoupon('" + Convert.ToString(Session("Quote_ID")) + "','" + lblCITIPrice.ClientID + "','" + lblTimerCITI.ClientID + "','" + btnCITIDeal.ClientID + "','" + btnCITIPrice.ClientID + "');")
                                    CITIHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                                End If
                                If all_RFQ_IDs = "" Then
                                    all_RFQ_IDs = Convert.ToString(Session("Quote_ID"))
                                    strQuoteId1 = all_RFQ_IDs
                                Else
                                    all_RFQ_IDs = all_RFQ_IDs & "," & Convert.ToString(Session("Quote_ID"))
                                End If
                                getPPId.Add("CITI", CITI_ID)
                                getAllId.Add(CITI_ID, Convert.ToString(Session("Quote_ID")))
                        'End If
                    End If
                End If
                End If
                dr = dtLogin.Select("PP_CODE = '" & "LEONTEQ" & "' ")
                If dr.Length > 0 Then
                    If btnLEONTEQPrice.Visible = True Then
                        If btnLEONTEQPrice.Enabled = True Then
                        'If chkLEONTEQ.Checked = True Then ''<Nikhil M. on 17-Sep-2016: Remove chkBox Dependency >
                                dr1 = dtPriceProvider.Select("PP_CODE = '" & "LEONTEQ" & "' ")
                                LEONTEQ_ID = dr1(0).Item("PP_ID").ToString
                                '<AvinashG. on 16-Feb-2016: Optimization>
                        If FillRFQDataTable(LEONTEQ_ID) = True Then               ''AshwiniP on 05-Oct-2016 : Notional validation at the time of pricing 
                        Else
                            Exit Sub
                        End If
                                'Get_DRAFCNRFQData_TOXML(LEONTEQ_ID)
                                '</AvinashG. on 16-Feb-2016: Optimization>
                                If ddlSolveForDRA.SelectedValue = "PRICE" Then
                                    strJavaScriptAllRequest.AppendLine("document.getElementById('LEONTEQwait').style.visibility = 'visible';")
                                    strJavaScriptAllRequest.AppendLine("getPrice('" + Convert.ToString(Session("Quote_ID")) + "','" + lblLEONTEQPrice.ClientID + "','" + lblTimerLEONTEQ.ClientID + "','" + btnLEONTEQDeal.ClientID + "','" + btnLEONTEQPrice.ClientID + "');")
                                    LEONTEQHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                                ElseIf ddlSolveForDRA.SelectedValue = "CONVERSION_STRIKE" Then
                                    strJavaScriptAllRequest.AppendLine("document.getElementById('LEONTEQwait').style.visibility = 'visible';")
                                    strJavaScriptAllRequest.AppendLine("getStrike('" + Convert.ToString(Session("Quote_ID")) + "','" + lblLEONTEQPrice.ClientID + "','" + lblTimerLEONTEQ.ClientID + "','" + btnLEONTEQDeal.ClientID + "','" + btnLEONTEQPrice.ClientID + "');")
                                    LEONTEQHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                                Else
                                    strJavaScriptAllRequest.AppendLine("document.getElementById('LEONTEQwait').style.visibility = 'visible';")
                                    strJavaScriptAllRequest.AppendLine("getCoupon('" + Convert.ToString(Session("Quote_ID")) + "','" + lblLEONTEQPrice.ClientID + "','" + lblTimerLEONTEQ.ClientID + "','" + btnLEONTEQDeal.ClientID + "','" + btnLEONTEQPrice.ClientID + "');")
                                    LEONTEQHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                                End If
                                If all_RFQ_IDs = "" Then
                                    all_RFQ_IDs = Convert.ToString(Session("Quote_ID"))
                                    strQuoteId1 = all_RFQ_IDs
                                Else
                                    all_RFQ_IDs = all_RFQ_IDs & "," & Convert.ToString(Session("Quote_ID"))
                                End If
                                getPPId.Add("LEONTEQ", LEONTEQ_ID)
                                getAllId.Add(LEONTEQ_ID, Convert.ToString(Session("Quote_ID")))
                        'End If
                        End If
                    End If
                End If
                dr = dtLogin.Select("PP_CODE = '" & "COMMERZ" & "' ")
                If dr.Length > 0 Then
                    If btnCOMMERZPrice.Visible = True Then
                        If btnCOMMERZPrice.Enabled = True Then
                        'If chkCOMMERZ.Checked = True Then ''<Nikhil M. on 17-Sep-2016: Remove chkBox Dependency >
                                dr1 = dtPriceProvider.Select("PP_CODE = '" & "COMMERZ" & "' ")
                                COMMERZ_ID = dr1(0).Item("PP_ID").ToString
                                '<AvinashG. on 16-Feb-2016: Optimization>
                        If FillRFQDataTable(COMMERZ_ID) = True Then     ''AshwiniP on 05-Oct-2016 : Notional validation at the time of pricing 
                        Else
                            Exit Sub
                        End If
                                'Get_DRAFCNRFQData_TOXML(COMMERZ_ID)
                                '</AvinashG. on 16-Feb-2016: Optimization>
                                If ddlSolveForDRA.SelectedValue = "PRICE" Then
                                    strJavaScriptAllRequest.AppendLine("document.getElementById('COMMERZwait').style.visibility = 'visible';")
                                    strJavaScriptAllRequest.AppendLine("getPrice('" + Convert.ToString(Session("Quote_ID")) + "','" + lblCOMMERZPrice.ClientID + "','" + lblTimerCOMMERZ.ClientID + "','" + btnCOMMERZDeal.ClientID + "','" + btnCOMMERZPrice.ClientID + "');")
                                    COMMERZHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                                ElseIf ddlSolveForDRA.SelectedValue = "CONVERSION_STRIKE" Then
                                    strJavaScriptAllRequest.AppendLine("document.getElementById('COMMERZwait').style.visibility = 'visible';")
                                    strJavaScriptAllRequest.AppendLine("getStrike('" + Convert.ToString(Session("Quote_ID")) + "','" + lblCOMMERZPrice.ClientID + "','" + lblTimerCOMMERZ.ClientID + "','" + btnCOMMERZDeal.ClientID + "','" + btnCOMMERZPrice.ClientID + "');")
                                    COMMERZHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                                Else
                                    strJavaScriptAllRequest.AppendLine("document.getElementById('COMMERZwait').style.visibility = 'visible';")
                                    strJavaScriptAllRequest.AppendLine("getCoupon('" + Convert.ToString(Session("Quote_ID")) + "','" + lblCOMMERZPrice.ClientID + "','" + lblTimerCOMMERZ.ClientID + "','" + btnCOMMERZDeal.ClientID + "','" + btnCOMMERZPrice.ClientID + "');")
                                    COMMERZHiddenPrice.Value = ";Disable;Disable;Enable;Price"
                                End If
                                If all_RFQ_IDs = "" Then
                                    all_RFQ_IDs = Convert.ToString(Session("Quote_ID"))
                                    strQuoteId1 = all_RFQ_IDs
                                Else
                                    all_RFQ_IDs = all_RFQ_IDs & "," & Convert.ToString(Session("Quote_ID"))
                                End If
                                getPPId.Add("COMMERZ", COMMERZ_ID)
                                getAllId.Add(COMMERZ_ID, Convert.ToString(Session("Quote_ID")))
                        'End If
                        End If
                    End If
                End If



            Session.Add("All_IDs", all_RFQ_IDs)
            Session.Add("Hash_Values", getAllId)
            Session.Add("PP_IdTable", getPPId)
            lblerror.Text = "RFQs " & all_RFQ_IDs & " are generated."
            lblerror.ForeColor = Color.Blue
            lblMsgPriceProvider.Text = ""
            System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "strJavaScriptAllRequest", "try {" + strJavaScriptAllRequest.ToString + "}catch(e) {}", True)
            If all_RFQ_IDs <> "" Then
                objELNRFQ.DB_update_quoteID(all_RFQ_IDs, strQuoteId1, dtUpdate)
            End If
            If rblShareData.SelectedValue = "GRAPHDATA" Then
                Call Fill_All_Charts()
            End If
        Catch ex As Exception
            lblerror.Text = "Solve_All_Requests:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "Solve_All_Requests", ErrorLevel.High)
            Throw ex
        End Try
    End Sub

    Public Sub btnSolveAll_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnSolveAll.Click

        Try
            ResetAllChkBox() ''<Nikhil M. on 21-Sep-2016: Added>
            makeThisGridVisible(grdDRAFCN) 'FA-1174
            ''< Start Nikhil M. on 17-Sep-2016: COmmented chkBox condition Dependency >
            'If chkJPM.Checked = True Then
            TRJPM1.Attributes.Remove("class")
            'End If
            'If chkHSBC.Checked = True Then
            TRHSBC1.Attributes.Remove("class")
            'End If
            'If chkUBS.Checked = True Then
            TRUBS1.Attributes.Remove("class")
            'End If
            'If chkCS.Checked = True Then
            TRCS1.Attributes.Remove("class")
            'End If
            'If chkBNPP.Checked = True Then
            TRBNPP1.Attributes.Remove("class")
            'End If
            'If chkBAML.Checked = True Then
            TRBAML1.Attributes.Remove("class")
            'End If
            'If chkDBIB.Checked = True Then
            TRDBIB1.Attributes.Remove("class")
            'End If
            'If chkOCBC.Checked = True Then
            TROCBC1.Attributes.Remove("class")
            'End If
            'If chkCITI.Checked = True Then
            TRCITI1.Attributes.Remove("class")
            'End If
            'If chkLEONTEQ.Checked = True Then
            TRLEONTEQ1.Attributes.Remove("class")
            'End If
            'If chkCOMMERZ.Checked = True Then
            TRCOMMERZ1.Attributes.Remove("class")
            'End If
            ''< ENd |  Nikhil M. on 17-Sep-2016: COmmented chkBox condition Dependency >
            'TRJPM1.Attributes.Remove("class")
            'TRHSBC1.Attributes.Remove("class")
            'TRUBS1.Attributes.Remove("class")
            'TRCS1.Attributes.Remove("class")
            'TRBNPP1.Attributes.Remove("class")
            'TRBAML1.Attributes.Remove("class")                        'Added by Imran 21-Aug-2015 for best price

            'TRDBIB1.Attributes.Remove("class")
            'TROCBC1.Attributes.Remove("class")
            'TRCITI1.Attributes.Remove("class")
            'TRLEONTEQ1.Attributes.Remove("class")
            'TRCOMMERZ1.Attributes.Remove("class")
            hideShowRBLShareData()
            If (btnJPMprice.Visible = False Or btnJPMprice.Enabled = False) And _
            (btnHSBCPrice.Visible = False Or btnHSBCPrice.Enabled = False) And _
            (btnUBSPrice.Visible = False Or btnUBSPrice.Enabled = False) And _
            (btnCSPrice.Visible = False Or btnCSPrice.Enabled = False) And _
            (btnBAMLPrice.Visible = False Or btnBAMLPrice.Enabled = False) And _
            (btnBNPPPrice.Visible = False Or btnBNPPPrice.Enabled = False) And _
            (btnDBIBPrice.Visible = False Or btnDBIBPrice.Enabled = False) And _
            (btnOCBCPrice.Visible = False Or btnOCBCPrice.Enabled = False) And _
            (btnCITIPrice.Visible = False Or btnCITIPrice.Enabled = False) And _
            (btnLEONTEQPrice.Visible = False Or btnLEONTEQPrice.Enabled = False) And _
            (btnCOMMERZPrice.Visible = False Or btnCOMMERZPrice.Enabled = False)Then
                lblerror.Text = "All price providers are Off. Please try again later."
                Exit Sub
            End If

            ''< Start | Nikhil M. on 17-Sep-2016: Commented All checked condition>
            ''      If (btnJPMprice.Visible = False Or chkJPM.Checked = False) And _
            ''      (btnHSBCPrice.Visible = False Or chkHSBC.Checked = False) And _
            ''      (btnUBSPrice.Visible = False Or chkUBS.Checked = False) And _
            ''      (btnCSPrice.Visible = False Or chkCS.Checked = False) And _
            ''      (btnBAMLPrice.Visible = False Or chkBAML.Checked = False) And _
            ''      (btnBNPPPrice.Visible = False Or chkBNPP.Checked = False) And _
            ''       (btnDBIBPrice.Visible = False Or chkDBIB.Checked = False) And _
            ''(btnOCBCPrice.Visible = False Or chkOCBC.Checked = False) And _
            ''(btnCITIPrice.Visible = False Or chkCITI.Checked = False) And _
            ''          (btnLEONTEQPrice.Visible = False Or chkLEONTEQ.Checked = False) And _
            ''(btnCOMMERZPrice.Visible = False Or chkCOMMERZ.Checked = False) Then
            ''          lblerror.Text = "Please check valid price provider."
            ''          Exit Sub
            ''      End If

            If (btnJPMprice.Visible = False) And _
                (btnHSBCPrice.Visible = False) And _
                (btnUBSPrice.Visible = False) And _
                (btnCSPrice.Visible = False) And _
                (btnBAMLPrice.Visible = False) And _
                (btnBNPPPrice.Visible = False) And _
                 (btnDBIBPrice.Visible = False) And _
                   (btnOCBCPrice.Visible = False) And _
                   (btnCITIPrice.Visible = False) And _
                   (btnLEONTEQPrice.Visible = False) And _
                   (btnCOMMERZPrice.Visible = False) Then
                lblerror.Text = "Please check valid price provider."
                Exit Sub
            End If


            AllHiddenPrice.Value = "Disable;Enable"
            RestoreSolveAll()
            RestoreAll()
            ''< Start | Nikhil M. on 17-Sep-2016: Commented All checked condition>
            'If chkJPM.Checked = True Then
            JpmHiddenPrice.Value = ";Disable;Disable;Disable;Price"
            'End If
            'If chkHSBC.Checked = True Then
            HsbcHiddenPrice.Value = ";Disable;Disable;Disable;Price"
            'End If
            'If chkCS.Checked = True Then
            CsHiddenPrice.Value = ";Disable;Disable;Disable;Price"
            'End If
            'If chkUBS.Checked = True Then
            UbsHiddenPrice.Value = ";Disable;Disable;Disable;Price"
            'End If
            'If chkBNPP.Checked = True Then
            BNPPHiddenPrice.Value = ";Disable;Disable;Disable;Price"
            'End If
            'If chkBAML.Checked = True Then
            BAMLHiddenPrice.Value = ";Disable;Disable;Disable;Price"
            'End If
            'If chkDBIB.Checked = True Then
            DBIBHiddenPrice.Value = ";Disable;Disable;Disable;Price"
            'End If
            'If chkOCBC.Checked = True Then
            OCBCHiddenPrice.Value = ";Disable;Disable;Disable;Price"
            'End If
            'If chkCITI.Checked = True Then
            CITIHiddenPrice.Value = ";Disable;Disable;Disable;Price"
            'End If
            'If chkLEONTEQ.Checked = True Then
            LEONTEQHiddenPrice.Value = ";Disable;Disable;Disable;Price"
            'End If
            'If chkCOMMERZ.Checked = True Then
            COMMERZHiddenPrice.Value = ";Disable;Disable;Disable;Price"
            'End If
            ''< End | Nikhil M. on 17-Sep-2016: Commented All checked condition>
            lblerror.Text = ""
            Solve_All_Requests(sender, e)
            rbHistory.SelectedValue = "Quote History"
            fill_DRA_FCN_Grid()
            makeThisGridVisible(grdDRAFCN)
            If rblShareData.SelectedValue = "GRAPHDATA" Then
                Call Fill_All_Charts()
            End If
            lblJPMPrice.Text = ""
            lblHSBCPrice.Text = ""
            lblUBSPrice.Text = ""
            lblCSPrice.Text = ""
            lblBNPPPrice.Text = ""
            lblMsgPriceProvider.Text = ""
            lblBAMLPrice.Text = ""

            lblDBIBPrice.Text = ""
            lblOCBCPrice.Text = ""
            lblCITIPrice.Text = ""
            lblLEONTEQPrice.Text = ""
            lblCOMMERZPrice.Text = ""

            setToZero_ELN_AllIssuerPrice_ClientYield_ClientPrice()

            btnBAMLPrice.Text = "Price"
            btnCSPrice.Text = "Price"
            btnJPMprice.Text = "Price"
            btnHSBCPrice.Text = "Price"
            btnUBSPrice.Text = "Price"
            btnBNPPPrice.Text = "Price"

            btnDBIBPrice.Text = "Price"
            btnOCBCPrice.Text = "Price"
            btnCITIPrice.Text = "Price"
            btnLEONTEQPrice.Text = "Price"
            btnCOMMERZPrice.Text = "Price"

            btnBNPPDeal.Visible = False
            btnBAMLDeal.Visible = False
            btnCSDeal.Visible = False
            btnJPMDeal.Visible = False
            btnHSBCDeal.Visible = False
            btnUBSDeal.Visible = False

            btnDBIBDeal.Visible = False
            btnOCBCDeal.Visible = False
            btnCITIDeal.Visible = False
            btnLEONTEQDeal.Visible = False
            btnCOMMERZDeal.Visible = False
            ''<Start | Nikhil M. on 17-Sep-2016: Commented Checked condition for removing CHkBox Dependency >
            'If chkBAML.Checked = True Then
            btnBAMLPrice.Enabled = False
            btnBAMLPrice.CssClass = "btnDisabled"
            'End If
            'If chkCS.Checked = True Then
            btnCSPrice.Enabled = False
            btnCSPrice.CssClass = "btnDisabled"
            'End If
            'If chkJPM.Checked = True Then
            btnJPMprice.Enabled = False
            btnJPMprice.CssClass = "btnDisabled"
            'End If
            'If chkHSBC.Checked = True Then
            btnHSBCPrice.Enabled = False
            btnHSBCPrice.CssClass = "btnDisabled"
            'End If
            'If chkUBS.Checked = True Then
            btnUBSPrice.Enabled = False
            btnUBSPrice.CssClass = "btnDisabled"
            'End If
            'If chkBNPP.Checked = True Then
            btnBNPPPrice.Enabled = False
            btnBNPPPrice.CssClass = "btnDisabled"
            'End If
            'If chkDBIB.Checked = True Then
            btnDBIBPrice.Enabled = False
            btnDBIBPrice.CssClass = "btnDisabled"
            'End If
            'If chkOCBC.Checked = True Then
            btnOCBCPrice.Enabled = False
            btnOCBCPrice.CssClass = "btnDisabled"
            'End If
            'If chkCITI.Checked = True Then
            btnCITIPrice.Enabled = False
            btnCITIPrice.CssClass = "btnDisabled"
            'End If
            'If chkLEONTEQ.Checked = True Then
            btnLEONTEQPrice.Enabled = False
            btnLEONTEQPrice.CssClass = "btnDisabled"
            'End If
            'If chkCOMMERZ.Checked = True Then
            btnCOMMERZPrice.Enabled = False
            btnCOMMERZPrice.CssClass = "btnDisabled"
            'End If
            ''<End | Nikhil M. on 17-Sep-2016: Commented Checked condition for removing CHkBox Dependency >
            btnSolveAll.Enabled = False
            btnSolveAll.CssClass = "btnDisabled"
        Catch ex As Exception
            lblerror.Text = "btnSolveAll_Click:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnSolveAll_Click", ErrorLevel.High)
        End Try
    End Sub
#End Region

#Region "LimitPrice,SetNumberFormat"
    Private Function Qty_Validate(ByVal strQyt As String) As Boolean
        Try

            If strQyt = "" Then
                '<AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
                'lblerror.Text = "Please enter valid Notional."
                'Return False
                '</AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
                Exit Function
            Else
                Dim reg As Regex = New Regex("^[0-9kKmMbBtTlLpP.,]*$")
                If reg.IsMatch(strQyt) = False Then
                    lblerror.Text = "Please enter valid Notional."
                    Return False
                    Exit Function
                End If
            End If

            Return True
        Catch ex As Exception
            lblerror.Text = "Qty_Validate:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "Qty_Validate", ErrorLevel.High)
            Throw ex
        End Try
    End Function

#End Region

#Region "Dealer Details"

    Private Sub ddlentity_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlentity.SelectedIndexChanged
        Try
            fill_RMList()
            fill_RFQRMList()    '''''Dilkhush 28Oct2016 Added to load RM on demand
            fill_All_EntityBooks()
        Catch ex As Exception
            lblerror.Text = "ddlentity_SelectedIndexChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "ddlentity_SelectedIndexChanged", ErrorLevel.High)
        End Try
    End Sub
    Private Sub ddlRM_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlRM.SelectedIndexChanged
        Try
            'Added by Mohit Lalwani on 1-Aug-2016
            RestoreSolveAll()
            RestoreAll()
            '/Added by Mohit Lalwani on 1-Aug-2016
            lblerrorPopUp.Text = ""
            chkUpfrontOverride.Checked = False
            chkUpfrontOverride.Visible = False
            fill_Email()
            If rblShareData.SelectedValue = "GRAPHDATA" Then
                Call Fill_All_Charts()
            End If
            Catch ex As Exception
            lblerror.Text = "ddlRM_SelectedIndexChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "ddlRM_SelectedIndexChanged", ErrorLevel.High)
        End Try
    End Sub

    Private Sub ddlRFQRM_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlRFQRM.SelectedIndexChanged
        Try
            lblerror.Text = ""
            fill_Branch()
            ResetAll()
        Catch ex As Exception
            lblerror.Text = "ddlRFQRM_SelectedIndexChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "ddlRFQRM_SelectedIndexChanged", ErrorLevel.High)
        End Try

    End Sub
#End Region

    Private Sub txtTotalRows_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtTotalRows.TextChanged
        Try
            rbHistory_SelectedIndexChanged(Nothing, Nothing)
        Catch ex As Exception
            lblerror.Text = "txtTotalRows_TextChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "txtTotalRows_TextChanged", ErrorLevel.High)
        End Try
    End Sub
    Private Sub Fill_All_Charts()
        Try
            Select Case objReadConfig.ReadConfig(dsConfig, "EQC_DisplayGraph", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper
                Case "Y", "YES"
                    Get_RFQ_PieChart()
                    upnlChart.Update()
                    Get_RFQ_ColumnChart()
                    upnlColumnChart.Update()
                    upnlGrid.Update()
                Case "N", "NO"
            End Select
        Catch ex As Exception
            lblerror.Text = "Fill_All_Charts:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
            sSelfPath, "Fill_All_Charts", ErrorLevel.High)
        End Try
    End Sub

    Private Sub btnDealConfirm_ServerClick(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnDealConfirm.ServerClick
        Try
            Dim ConfirmLoadFlag As Integer = 0
            Call txtUpfrontPopUpValue_TextChanged(Nothing, Nothing)
            Stop_timer_Only()
            ''<Start | Nikhil M. on 20-Sep-2016: Added>
            'If drpConfirmDeal.Items.Count > 0 And drpConfirmDeal.SelectedText.ToString = "" Then
            '    lblerrorPopUp.Text = "Please select a reason."
            '    Exit Sub
            'Else
            ''<Start | Nikhil M. on 20-Sep-2016: Added for Reset Commentry>
            hdnBestStrike.Value = ""
            hdnBestProvider.Value = ""
            ResetAllChkBox()
            GetCommentary_DRA()
            ''<End | Nikhil M. on 20-Sep-2016: Added for Reset Commentry>
            'End If
            ''<End | Nikhil M. on 20-Sep-2016: Added>
            If Val(txtUpfrontPopUpValue.Text) > 0 And Val(txtUpfrontPopUpValue.Text.Replace(",", "")) < 100 Then
                Select Case UCase(lblIssuerPopUpValue.Text)
                    ''<Satrt : Nikhil M. on 08-Sep-2016: COmmented  >
                    Case "JPM"
                        btnJPMDeal_Click(sender, e)
                    Case "CS"
                        btnCSDeal_Click(sender, e)
                    Case "UBS"
                        btnUBSDeal_Click(sender, e)
                    Case "HSBC"
                        btnHSBCDeal_Click(sender, e)
                    Case "BAML"
                        btnBAMLDeal_Click(sender, e)
                    Case "BNPP"
                        btnBNPPDeal_Click(sender, e)
                    Case "DB"
                        btnDBIBDeal_Click(sender, e)
                    Case "OCBC"
                        btnOCBCDeal_Click(sender, e)
                    Case "CITI"
                        btnCITIDeal_Click(sender, e)
                    Case "LEONTEQ"
                        btnLEONTEQDeal_Click(sender, e)
                    Case "COMMERZ"
                        btnCOMMERZDeal_Click(sender, e)

                        ''<End : Nikhil M. on 08-Sep-2016: COmmented  >

                        ' ''<Start : Nikhil M. on 08-Sep-2016: Added >
                        'Case "JPM"
                        '    If GetBestPriceConfirm(JpmHiddenPrice.Value, "JPM") Then
                        '        btnJPMDeal_Click(sender, e)
                        '    End If

                        'Case "CS"
                        '    If GetBestPriceConfirm(CsHiddenPrice.Value, "Credit Suisse") Then
                        '        btnCSDeal_Click(sender, e)
                        '    End If

                        'Case "UBS"
                        '    If GetBestPriceConfirm(UbsHiddenPrice.Value, "UBS") Then
                        '        btnUBSDeal_Click(sender, e)
                        '    End If

                        'Case "HSBC"
                        '    If GetBestPriceConfirm(HsbcHiddenPrice.Value, "HSBC") Then
                        '        btnHSBCDeal_Click(sender, e)
                        '    End If

                        'Case "OCBC"
                        '    If GetBestPriceConfirm(OCBCHiddenPrice.Value, "OCBC") Then
                        '        btnOCBCDeal_Click(sender, e)
                        '    End If

                        'Case "CITI"
                        '    If GetBestPriceConfirm(CITIHiddenPrice.Value, "CITI") Then
                        '        btnCITIDeal_Click(sender, e)
                        '    End If

                        'Case "LEONTEQ"
                        '    If GetBestPriceConfirm(LEONTEQHiddenPrice.Value, "LEONTEQ") Then
                        '        btnLEONTEQDeal_Click(sender, e)
                        '    End If

                        'Case "COMMERZ"
                        '    If GetBestPriceConfirm(COMMERZHiddenPrice.Value, "COMMERZ") Then
                        '        btnCOMMERZDeal_Click(sender, e)
                        '    End If

                        'Case "BAML"
                        '    If GetBestPriceConfirm(BAMLHiddenPrice.Value, "BAML") Then
                        '        btnBAMLDeal_Click(sender, e)
                        '    End If

                        'Case "BNPP"
                        '    If GetBestPriceConfirm(BNPPHiddenPrice.Value, "BNPP") Then
                        '        btnBNPPDeal_Click(sender, e)
                        '    End If

                        'Case "DB"
                        '    If GetBestPriceConfirm(DBIBHiddenPrice.Value, "DBIB") Then
                        '        btnDBIBDeal_Click(sender, e)
                        '    End If
                End Select
                ''<End : Nikhil M. on 08-Sep-2016: Added >
                btnLoad_Click(sender, e)
            ElseIf Val(txtUpfrontPopUpValue.Text.Replace(",", "")) >= 100 Then
                lblerrorPopUp.Text = "Upfront should be less than 100."
                ''<Dilkhush 11Jan2016:- Added One condition to show valid msg>
            ElseIf Val(txtUpfrontPopUpValue.Text) = 0 Then
                lblerrorPopUp.Text = "Upfront should be greater than zero."
            Else
                lblerrorPopUp.Text = "Please enter valid Upfront."
            End If


            If UCase(Request.QueryString("EXTLOD")) = "REPRICEPOOL" Or UCase(Request.QueryString("EXTLOD")) = "HEDGE" Or UCase(Request.QueryString("EXTLOD")) = "REDIRECTEDHEDGE" Then
                resetControlsForPool(True)

                tabPanelDRA.Enabled = True


                Dim isreadonly As Reflection.PropertyInfo = GetType(System.Collections.Specialized.NameValueCollection).GetProperty("IsReadOnly", Reflection.BindingFlags.Instance Or Reflection.BindingFlags.NonPublic)
                ' make collection editable
                isreadonly.SetValue(Me.Request.QueryString, False, Nothing)
                ' remove
                Me.Request.QueryString.Remove("EXTLOD")
                Me.Request.QueryString.Remove("PRD")
                Me.Request.QueryString.Remove("RedirectedOrderId")
                Me.Request.QueryString.Remove("PoolID")
                'Request.QueryString.Remove("EXTLOD")
                'Request.QueryString.Remove("PRD")
                'Request.QueryString.Remove("RedirectedOrderId")
                Exit Sub
            End If
        Catch ex As Exception
            lblerror.Text = "btnDealConfirm_ServerClick:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnDealConfirm_ServerClick", ErrorLevel.High)

        Finally
            UPanle11111.Update()
        End Try

    End Sub
    Private Sub btnDealCancel_ServerClick(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnDealCancel.ServerClick
        Try
            Dim strJavaScriptStopTimer As New StringBuilder
            If UCase(Request.QueryString("EXTLOD")) = "REPRICEPOOL" Or UCase(Request.QueryString("EXTLOD")) = "HEDGE" Then
                EnableDisableForOrderPoolData(Convert.ToString(Session("DRARePricePPName")))
                ShowHideConfirmationPopup(False)
                strJavaScriptStopTimer.AppendLine("StopTimer('" + lblTimer.ClientID + "','" + btnJPMDeal.ClientID + "');")
                strJavaScriptStopTimer.AppendLine("StopTimer('" + lblTimerHSBC.ClientID + "','" + btnHSBCDeal.ClientID + "');")
                strJavaScriptStopTimer.AppendLine("StopTimer('" + lblTimerCS.ClientID + "','" + btnCSDeal.ClientID + "');")
                strJavaScriptStopTimer.AppendLine("StopTimer('" + lblTimerBNPP.ClientID + "','" + btnBNPPDeal.ClientID + "');")
                strJavaScriptStopTimer.AppendLine("StopTimer('" + lblUBSTimer.ClientID + "','" + btnUBSDeal.ClientID + "');")
                strJavaScriptStopTimer.AppendLine("StopTimer('" + lblTimerBAML.ClientID + "','" + btnBAMLDeal.ClientID + "');") 'Imran Need to check if macq gives error due to JS 6-June-14

                strJavaScriptStopTimer.AppendLine("StopTimer('" + lblTimerDBIB.ClientID + "','" + btnDBIBDeal.ClientID + "');")
                strJavaScriptStopTimer.AppendLine("StopTimer('" + lblTimerOCBC.ClientID + "','" + btnOCBCDeal.ClientID + "');")
                strJavaScriptStopTimer.AppendLine("StopTimer('" + lblTimerCITI.ClientID + "','" + btnCITIDeal.ClientID + "');")
                strJavaScriptStopTimer.AppendLine("StopTimer('" + lblTimerLEONTEQ.ClientID + "','" + btnLEONTEQDeal.ClientID + "');")
                strJavaScriptStopTimer.AppendLine("StopTimer('" + lblTimerCOMMERZ.ClientID + "','" + btnCOMMERZDeal.ClientID + "');")
                System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "StopAllTimers", strJavaScriptStopTimer.ToString, True)
                lblerror.Text = ""
                Exit Sub
            End If
            ShowHideConfirmationPopup(False, "NO")

            'Mohit Lalwani on 1-Aug-2016
            RestoreSolveAll()
            RestoreAll()

            'strJavaScriptStopTimer.AppendLine("StopTimer('" + lblTimer.ClientID + "','" + btnJPMDeal.ClientID + "');")
            'strJavaScriptStopTimer.AppendLine("StopTimer('" + lblTimerHSBC.ClientID + "','" + btnHSBCDeal.ClientID + "');")
            'strJavaScriptStopTimer.AppendLine("StopTimer('" + lblTimerCS.ClientID + "','" + btnCSDeal.ClientID + "');")
            'strJavaScriptStopTimer.AppendLine("StopTimer('" + lblTimerBNPP.ClientID + "','" + btnBNPPDeal.ClientID + "');")
            'strJavaScriptStopTimer.AppendLine("StopTimer('" + lblUBSTimer.ClientID + "','" + btnUBSDeal.ClientID + "');")
            'strJavaScriptStopTimer.AppendLine("StopTimer('" + lblTimerBAML.ClientID + "','" + btnBAMLDeal.ClientID + "');") 'Imran Need to check if macq gives error due to JS 6-June-14

            'strJavaScriptStopTimer.AppendLine("StopTimer('" + lblTimerDBIB.ClientID + "','" + btnDBIBDeal.ClientID + "');")
            'strJavaScriptStopTimer.AppendLine("StopTimer('" + lblTimerOCBC.ClientID + "','" + btnOCBCDeal.ClientID + "');")
            'strJavaScriptStopTimer.AppendLine("StopTimer('" + lblTimerCITI.ClientID + "','" + btnCITIDeal.ClientID + "');")
            'System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "StopAllTimers", strJavaScriptStopTimer.ToString, True)
            'ResetAll()
            '/Mohit Lalwani on 1-Aug-2016
            lblerror.Text = ""
            '<ashwiniP Start>
            lblTotalAmt.Visible = False
            lblTotalAmtVal.Visible = False
            lblAlloAmt.Visible = False
            lblAlloAmtVal.Visible = False
            lblRemainNotional.Visible = False
            lblRemainNotionalVal.Visible = False
            '<End>
            If Not IsNothing(Request.QueryString("RedirectedOrderId")) Then
                resetControlsForPool(True)
               
               
                        tabPanelDRA.Enabled = True
               

                Dim isreadonly As Reflection.PropertyInfo = GetType(System.Collections.Specialized.NameValueCollection).GetProperty("IsReadOnly", Reflection.BindingFlags.Instance Or Reflection.BindingFlags.NonPublic)
                ' make collection editable
                isreadonly.SetValue(Me.Request.QueryString, False, Nothing)
                ' remove
                Me.Request.QueryString.Remove("EXTLOD")
                Me.Request.QueryString.Remove("PRD")
                Me.Request.QueryString.Remove("RedirectedOrderId")
                Me.Request.QueryString.Remove("PoolID")
                'Request.QueryString.Remove("EXTLOD")
                'Request.QueryString.Remove("PRD")
                'Request.QueryString.Remove("RedirectedOrderId")
            End If
        Catch ex As Exception
            lblerror.Text = "btnDealCancel_ServerClick:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnDealCancel_ServerClick", ErrorLevel.High)
        Finally
            pnlReprice.Update()
        End Try
    End Sub
    Private Sub ddlOrderTypePopUpValue_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlOrderTypePopUpValue.SelectedIndexChanged
        Try
            'Added by Mohit Lalwani on 1-Aug-2016
            RestoreSolveAll()
            RestoreAll()
            '/Added by Mohit Lalwani on 1-Aug-2016
            txtLimitPricePopUpValue.Text = "0"
            lblerrorPopUp.Text = ""
            chkUpfrontOverride.Checked = False
            chkUpfrontOverride.Visible = False
            If ddlOrderTypePopUpValue.SelectedItem.Text.Contains("Limit") Then
                txtLimitPricePopUpValue.Enabled = True

                ddlBasketSharesPopValue.Visible = True
                txtLimitPricePopUpValue.Style.Add("width", "65px !important")
                ddlBasketSharesPopValue.Style.Add("width", "80px !important")
            Else
                txtLimitPricePopUpValue.Enabled = False
                ddlBasketSharesPopValue.Visible = False
                txtLimitPricePopUpValue.Style.Add("width", "115px !important")
            End If
        Catch ex As Exception
            lblerror.Text = "ddlOrderTypePopUpValue_SelectedIndexChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "ddlOrderTypePopUpValue_SelectedIndexChanged", ErrorLevel.High)
        End Try
    End Sub
    Private Sub ddlKIFrequency_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlKIFrequency.SelectedIndexChanged
        Try
            lblerror.Text = ""
            lblKOLevelSameAsCoupon.Text = ddlKIFrequency.SelectedItem.Text
            If SetFrequencytype(ddlTenorTypeDRA.SelectedValue.Trim.ToUpper, txtTenorDRA.Text.Trim, ddlKIFrequency.SelectedValue.Trim) Then
            Else
                lblerror.Text = "Frequency is not valid."
                Exit Sub                     ''AshwiniP on 04-Oct-2016
            End If
            ResetAll()              ''<ashwiniP on 06-Oct-2016> : Sequence changed
            GetCommentary_DRA()

        Catch ex As Exception
            lblerror.Text = "ddlKIFrequency_SelectedIndexChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "ddlKIFrequency_SelectedIndexChanged", ErrorLevel.High)
            Throw ex
        End Try
    End Sub
    Public Sub fillNoteCurrency()
        Dim dtCurrency As DataTable
        Dim strShare As String
        Try
            strShare = ""
            dtCurrency = New DataTable("Currency")
            If chkAddShare1.Checked Then
	     ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                strShare = ddlShareDRA.SelectedValue
            ElseIf chkAddShare2.Checked Then
                strShare = ddlShareDRA2.SelectedValue
            ElseIf chkAddShare3.Checked Then
                strShare = ddlShareDRA3.SelectedValue
            End If
            Select Case objELNRFQ.Get_ProdBased_QuantoCcy("DRAFCN", strShare, dtCurrency)
                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                    With ddlNoteCcy
                        .DataSource = dtCurrency
                        .DataTextField = "CCY"
                        .DataValueField = "CCY"
                        .DataBind()
                    End With
                Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                    With ddlNoteCcy
                        .DataSource = dtCurrency
                        .DataBind()
                    End With
                Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                Case Web_ELNRFQ.Database_Transaction_Response.Db_Error
            End Select

            lblNoteCcy.Text = "(" & ddlNoteCcy.SelectedValue & ")"
        Catch ex As Exception
            lblerror.Text = "fillNoteCurrency:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "fillNoteCurrency", ErrorLevel.High)
            Throw ex
        End Try
    End Sub
    Private Sub chkKI_CheckedChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles chkKI.CheckedChanged
        Try
            lblerror.Text = ""
            If chkKI.Checked = True Then
                ddlKIType.Enabled = True
                txtKILevel.Enabled = True
                '     txtKILevel.Text = "90.00"
               txtKILevel.Text =  getControlPersonalSetting("KI", "90.00")                       'Setting KI level        'Mohit Lalwani on 19-Sept-2016
                ddlKIType.BackColor = Color.White
                txtKILevel.BackColor = Color.White
            Else
                ddlKIType.Enabled = False
                txtKILevel.Enabled = False
                '     txtKILevel.Text = getControlPersonalSetting("KI", "0.00")
                txtKILevel.Text = ""   'Mohit Lalwani on 17-Oct-2016 
                ddlKIType.BackColor = Color.LightGray
                txtKILevel.BackColor = Color.LightGray
            End If
            ResetAll()              ''<ashwiniP on 06-Oct-2016> : Sequence changed
            GetCommentary_DRA() '<Mohit L. on 30-Nov-2015:This should also get Commentry>

        Catch ex As Exception
            lblerror.Text = "chkKI_CheckedChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "chkKI_CheckedChanged", ErrorLevel.High)
            Throw ex
        End Try
    End Sub
    Private Sub chkKO_CheckedChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles chkKO.CheckedChanged
        Try
            If chkKO.Checked = True Then
                txtKOLevel.Enabled = True
                ddlKOType.Enabled = True
            End If
            ResetAll()
        Catch ex As Exception
            lblerror.Text = "chkKO_CheckedChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "chkKO_CheckedChanged", ErrorLevel.High)
            Throw ex
        End Try
    End Sub
    Private Sub ddlExchangeDRAFCN2_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlExchangeDRAFCN2.SelectedIndexChanged
        Dim dtBaseCCY As DataTable
        Try
            dtBaseCCY = New DataTable("Dummy")
            lblerror.Text = ""
            clearFields()
            ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
            'With ddlShareDRA2
            '    .Items.Clear()
            '    .Text = ""
            'End With
            With ddlShareDRA2
                .Items.Clear()
                .SelectedValue = ""
                .Text = ""
            End With

            'fill_DRA_FCN_Share2()  ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
            If ddlShareDRA2.SelectedValue IsNot Nothing And ddlShareDRA2.SelectedItem IsNot Nothing Then
                Select Case objELNRFQ.DB_GetBASECCY(ddlShareDRA2.SelectedValue, dtBaseCCY)
                    Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                        lblBaseCurrency2.Text = dtBaseCCY.Rows(0)(0).ToString
                    Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                        lblBaseCurrency2.Text = ""
                    Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                        lblBaseCurrency2.Text = ""
                End Select

                ddlShareDRA2.Text = ddlShareDRA2.Text ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                Prepare_DRAFCN_Basket()
            End If
            lblComentry1.Text = ""
            pnlReprice.Update()
            upnlCommentry.Update()
            ResetAll()                  '<ashwiniP on 06-oct-2016: Sequence changed'
            GetCommentary_DRA()
            '<AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
            'getRange()
            '</AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
        Catch ex As Exception
            lblerror.Text = "ddlExchangeDRAFCN2_SelectedIndexChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "ddlExchangeDRAFCN2_SelectedIndexChanged", ErrorLevel.High)
            Throw ex
        End Try
    End Sub
    Private Sub ddlExchangeDRAFCN3_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlExchangeDRAFCN3.SelectedIndexChanged
        Dim dtBaseCCY As DataTable
        Try
            dtBaseCCY = New DataTable("Dummy")
            lblerror.Text = ""
            clearFields()
            ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
            With ddlShareDRA3
                '.Items.Clear()
                '.Text = ""
                .Items.Clear()
                .SelectedValue = ""
                .Text = ""
            End With
            'fill_DRA_FCN_Share3()  ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
            If ddlShareDRA3.SelectedValue IsNot Nothing And ddlShareDRA3.SelectedItem IsNot Nothing Then
                Select Case objELNRFQ.DB_GetBASECCY(ddlShareDRA3.SelectedValue, dtBaseCCY)
                    Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                        lblBaseCurrency3.Text = dtBaseCCY.Rows(0)(0).ToString
                    Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                        lblBaseCurrency3.Text = ""
                    Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                        lblBaseCurrency3.Text = ""
                End Select
                ddlShareDRA3.Text = ddlShareDRA3.Text  ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value

                Prepare_DRAFCN_Basket()
            End If
            lblComentry1.Text = ""
            pnlReprice.Update()
            upnlCommentry.Update()
            ResetAll()
            GetCommentary_DRA()          '<ashwiniP on 06-oct-2016: Sequence changed'
            '<AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
            'getRange()
            '</AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
        Catch ex As Exception
            lblerror.Text = "ddlExchangeDRAFCN3_SelectedIndexChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "ddlExchangeDRAFCN3_SelectedIndexChanged", ErrorLevel.High)
            Throw ex
        End Try
    End Sub
    Private Sub ddlShareDRA2_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlShareDRA2.SelectedIndexChanged
        Dim sShareCcy As String
        Dim sShareFlag As String
        Try
            sShareFlag = ""
	 ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
            'If ddlShareDRA2.SelectedItem Is Nothing Then
            If ddlShareDRA2.SelectedValue Is Nothing Then
                clearShareData()
                chkQuantoFlag_DRA()
                ddlShareDRA2.Text = "Please select valid share."
                lblExchangeDRAFCN2.Text = ""
                ResetAll()              ''<ashwiniP on 06-Oct-2016> : Sequence changed
                GetCommentary_DRA()

                Exit Sub
		 ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
            ElseIf ddlShareDRA2.SelectedValue = "" Then
                clearShareData()
                chkQuantoFlag_DRA()
                ddlShareDRA2.Text = "Please select valid share."
                lblExchangeDRAFCN2.Text = ""
                ResetAll()                          ''<ashwiniP on 06-Oct-2016> : Sequence changed
                GetCommentary_DRA()

                Exit Sub
            Else
                lblExchangeDRAFCN2.Text = setExchangeByShare(ddlShareDRA2)
                dtBaseCCY = New DataTable("Dummy")
                lblerror.Text = ""
                clearFields()
                getCurrency(ddlShareDRA2.SelectedValue, sShareCcy)  ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                lblBaseCurrency2.Text = sShareCcy
                Dim sSharePRR1 As String = ""
                getPRR(ddlShareDRA2.SelectedValue.ToString, sSharePRR1)
                lblPRRVal2.Text = sSharePRR1
                'Added by Chitralekha on 29-Sep-16
                getFlag(ddlShareDRA2.SelectedValue.ToString, sShareFlag)
                If sShareFlag = "Y" Then
                    lblAdvisoryFlagVal2.ForeColor = Color.Green
                    lblAdvisoryFlagVal2.Text = "Yes"

                Else
                    lblAdvisoryFlagVal2.ForeColor = Color.Red
                    lblAdvisoryFlagVal2.Text = "No"
                End If
                'Ended by Chitralekha on 29-Sep-16
                ''If lblPRRVal2.Text = "NA" Then
                ''    lblPRRVal2.ForeColor = Color.Red
                ''Else
                ''    lblPRRVal2.ForeColor = Color.Green
                ''End If
                Prepare_DRAFCN_Basket()

                If ddlShareDRA2.SelectedItem IsNot Nothing Then
                    ddlShareDRA2.Text = ddlShareDRA2.SelectedItem.Text
                End If
                ResetAll()               '<ashwiniP on 06-oct-2016: Sequence changed'
                GetCommentary_DRA()
                '<AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
                'getRange()
                '</AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
            End If
        Catch ex As Exception
            lblerror.Text = "ddlShareDRA2_SelectedIndexChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "ddlShareDRA2_SelectedIndexChanged", ErrorLevel.High)
        End Try
    End Sub
    Private Sub ddlShareDRA3_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlShareDRA3.SelectedIndexChanged
        Dim sShareCcy3 As String
        Dim sShareFlag As String
        Try
            sShareFlag = ""
	 ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
            'If ddlShareDRA3.SelectedItem Is Nothing Then
            If ddlShareDRA3.SelectedValue Is Nothing Then
                clearShareData()
                chkQuantoFlag_DRA()
                ddlShareDRA3.Text = "Please select valid share."
                lblExchangeDRAFCN3.Text = ""
                ResetAll()                          ''<ashwiniP on 06-Oct-2016> : Sequence changed
                GetCommentary_DRA()

                Exit Sub
		 ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
            ElseIf ddlShareDRA3.SelectedValue = "" Then
                clearShareData()
                chkQuantoFlag_DRA()
                ddlShareDRA3.Text = "Please select valid share."
                lblExchangeDRAFCN3.Text = ""
                ResetAll()                      ''<ashwiniP on 06-Oct-2016> : Sequence changed
                GetCommentary_DRA()

                Exit Sub
            Else
                lblExchangeDRAFCN3.Text = setExchangeByShare(ddlShareDRA3)
                dtBaseCCY = New DataTable("Dummy")
                lblerror.Text = ""
                clearFields()
                getCurrency(ddlShareDRA3.SelectedValue, sShareCcy3)  ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                lblBaseCurrency3.Text = sShareCcy3
                Dim sSharePRR1 As String = ""
                getPRR(ddlShareDRA3.SelectedValue.ToString, sSharePRR1)
                lblPRRVal3.Text = sSharePRR1
                'Added by Chitralekha on 29-Sep-16
                getFlag(ddlShareDRA3.SelectedValue.ToString, sShareFlag)
                If sShareFlag = "Y" Then
                    lblAdvisoryFlagVal3.ForeColor = Color.Green
                    lblAdvisoryFlagVal3.Text = "Yes"

                Else
                    lblAdvisoryFlagVal3.ForeColor = Color.Red
                    lblAdvisoryFlagVal3.Text = "No"
                End If
                'Ended by Chitralekha on 29-Sep-16
                ''If lblPRRVal3.Text = "NA" Then
                ''    lblPRRVal3.ForeColor = Color.Red
                ''Else
                ''    lblPRRVal3.ForeColor = Color.Green
                ''End If
                Prepare_DRAFCN_Basket()

                If ddlShareDRA3.SelectedItem IsNot Nothing Then
                    ddlShareDRA3.Text = ddlShareDRA3.SelectedItem.Text
                End If
                ResetAll()
                GetCommentary_DRA()              '<ashwiniP on 06-oct-2016: Sequence changed'
                '<AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
                'getRange()
                '</AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
                End If
        Catch ex As Exception
            lblerror.Text = "ddlShareDRA3_SelectedIndexChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                     sSelfPath, "ddlShareDRA3_SelectedIndexChanged", ErrorLevel.High)
        End Try
    End Sub
    Private Sub ddlNoteCcy_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlNoteCcy.SelectedIndexChanged
        Try
            lblerror.Text = ""
            lblNoteCcy.Text = "(" & ddlNoteCcy.SelectedValue & ")"
            ResetAll()
            chkQuantoFlag_DRA()
            GetCommentary_DRA()
            '<AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
            'getRange()
            '</AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>

            '<Added By Mohit Lalwnai on 1-Apr-2016 FA-1384>
            Dim sEQC_DealerRedirection_OnPricer As String = objReadConfig.ReadConfig(dsConfig, "EQC_DealerRedirection_OnPricer", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO")
            Select Case sEQC_DealerRedirection_OnPricer.ToUpper
                Case "Y", "YES"
                    'sEQC_DealerLoginGroups = objReadConfig.ReadConfig(dsConfig, "EQC_DealerLoginGroups", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NONE")
                    'Dim sLoginGrp As String
                    'sLoginGrp = LoginInfoGV.Login_Info.LoginGroup

                    'If sEQC_DealerLoginGroups.Split(CChar(",")).ToList().IndexOf(sLoginGrp) > -1 Then
                    If UCase(Request.QueryString("Mode")) = "ALL" Then
                        ''User is Dealer
                    Else
                        ''User is RM
                        setRMLimit()
                    End If
                Case "N", "NO"

            End Select

            '</Added By Mohit Lalwnai on 1-Apr-2016 FA-1384>
        Catch ex As Exception
            lblerror.Text = "ddlNoteCcy_SelectedIndexChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "ddlNoteCcy_SelectedIndexChanged", ErrorLevel.High)
        End Try
    End Sub
    Private Sub txtUpfrontPopUpValue_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtUpfrontPopUpValue.TextChanged
        Try
            'Added by Mohit Lalwani on 1-Aug-2016
            RestoreSolveAll()
            RestoreAll()
            '/Added by Mohit Lalwani on 1-Aug-2016
            lblClientPricePopUpValue.Text = FormatNumber((Val(lblIssuerPricePopUpValue.Text) + Val(txtUpfrontPopUpValue.Text)).ToString, 2)
            txtUpfrontPopUpValue.Text = SetNumberFormat(txtUpfrontPopUpValue.Text, 2)
            UPanle11111.Update()
        Catch ex As Exception
            lblerror.Text = "txtUpfrontPopUpValue_TextChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "txtUpfrontPopUpValue_TextChanged", ErrorLevel.High)
            Throw ex
        End Try
    End Sub
    Private Sub chkAddShare1_CheckedChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles chkAddShare1.CheckedChanged
        Try
            lblerror.Text = ""
            If chkAddShare1.Checked Then
                FillDRAddl_exchange(ddlExchangeDRAFCN)
                ''fill_DRA_FCN_Share()  ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                ddlExchangeDRAFCN_SelectedIndexChanged(Nothing, Nothing)
                chkAddShare2.Enabled = True
                tblShareDRA_2.Visible = True
                chkAddShare2_CheckedChanged(Nothing, Nothing)
            Else
                ddlExchangeDRAFCN.Items.Clear()
                ddlExchangeDRAFCN.DataSource = Nothing
                ddlExchangeDRAFCN.DataBind()
                ddlShareDRA.Items.Clear()
                'ddlShareDRA.DataSource = Nothing
                'ddlShareDRA.DataBind()
                lblDRABaseCcy.Text = ""
                chkAddShare2.Checked = False
                chkAddShare2.Enabled = False
                tblShareDRA_2.Visible = False
                tblShareDRA_2.Style.Add("opacity", "0")
                chkAddShare2_CheckedChanged(Nothing, Nothing)
            End If
            Prepare_DRAFCN_Basket()
            ResetAll()
            '<AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
            'getRange()
            '</AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
        Catch ex As Exception
            lblerror.Text = "chkAddShare1_CheckedChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "chkAddShare1_CheckedChanged", ErrorLevel.High)
            Throw ex
        End Try
    End Sub
    Private Sub chkAddShare2_CheckedChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles chkAddShare2.CheckedChanged
        Try
            lblerror.Text = ""
            lblExchangeDRAFCN2.Text = ""
            lblPRRVal2.Text = ""
            lblAdvisoryFlagVal2.Text = ""        'Added by Chitralekha on 29-sep-16
            If chkAddShare2.Checked Then
                FillDRAddl_exchange(ddlExchangeDRAFCN2)
                ddlExchangeDRAFCN2_SelectedIndexChanged(Nothing, Nothing)
                chkAddShare3.Enabled = True
                tblShareDRA_3.Visible = True
                tblShareDRA_3.Style.Add("opacity", "100")
                chkAddShare3_CheckedChanged(Nothing, Nothing)
            Else
                ddlExchangeDRAFCN2.Items.Clear()
                ddlExchangeDRAFCN2.DataSource = Nothing
                ddlExchangeDRAFCN2.DataBind()
                ddlShareDRA2.Items.Clear()
                'ddlShareDRA2.DataSource = Nothing
                'ddlShareDRA2.DataBind()
                ddlShareDRA2.Text = ""
                lblBaseCurrency2.Text = ""
                chkAddShare3.Checked = False
                chkAddShare3.Enabled = False
                tblShareDRA_3.Visible = False
                tblShareDRA_3.Style.Add("opacity", "0")
                chkAddShare3_CheckedChanged(Nothing, Nothing)
            End If
            Prepare_DRAFCN_Basket()
            ResetAll()
            '<AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
            'getRange()
            '</AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
        Catch ex As Exception
            lblerror.Text = "chkAddShare2_CheckedChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "chkAddShare2_CheckedChanged", ErrorLevel.High)

        End Try
    End Sub
    Private Sub chkAddShare3_CheckedChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles chkAddShare3.CheckedChanged
        Try
            lblerror.Text = ""
            lblExchangeDRAFCN3.Text = ""
            lblPRRVal3.Text = ""
            lblAdvisoryFlagVal3.Text = ""            'Added by Chitralekha on 29-sep-16
            If chkAddShare3.Checked Then
                FillDRAddl_exchange(ddlExchangeDRAFCN3)
                ddlExchangeDRAFCN3_SelectedIndexChanged(Nothing, Nothing)
            Else
                ddlExchangeDRAFCN3.Items.Clear()
                ddlExchangeDRAFCN3.DataSource = Nothing
                ddlExchangeDRAFCN3.DataBind()
                ddlShareDRA3.Items.Clear()
                'ddlShareDRA3.DataSource = Nothing
                'ddlShareDRA3.DataBind()
                ddlShareDRA3.Text = ""
                lblBaseCurrency3.Text = ""
            End If
            Prepare_DRAFCN_Basket()
            ResetAll()
            '<AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
            'getRange()
            '</AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
        Catch ex As Exception
            lblerror.Text = "chkAddShare3_CheckedChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "chkAddShare3_CheckedChanged", ErrorLevel.High)
        End Try
    End Sub
    Private Sub Prepare_DRAFCN_Basket()
        Dim arrSelectedShare() As String
        Try
            txtBasketShares.Text = ""
            Session.Remove("BasketExchange")
            Session.Add("BasketExchange", "")
            tabShare2.Visible = False
            setTDSSData2("")
            tabShare3.Visible = False
            setTDSSData3("")
            If chkAddShare1.Checked = True Then
                ddlShareDRA.Enabled = True
                ddlExchangeDRAFCN.Enabled = True
		 ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                'If ddlShareDRA.SelectedItem Is Nothing Then
                If ddlShareDRA.SelectedValue Is Nothing Then
                    txtBasketShares.Text = ""
                    setTDSSData("")
                Else
                    If ddlExchangeDRAFCN.SelectedValue.ToUpper = "ALL" Then
                        Dim sTemp As String
                        sTemp = lblExchangeDRAFCN.Text.Split(CChar("-"))(0).Trim
                        Session.Add("BasketExchange", sTemp)
                    Else
                        Session.Add("BasketExchange", ddlExchangeDRAFCN.SelectedValue)
                    End If
		     ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                    ''txtBasketShares.Text = ddlShareDRA.SelectedValue
                    txtBasketShares.Text = If(ddlShareDRA.SelectedValue.Trim = "Please select valid share.", "", ddlShareDRA.SelectedValue)
                    setTDSSData(ddlShareDRA.SelectedValue)
                End If
                tabShare1.Visible = True
            Else
                ddlShareDRA.Enabled = False
                ddlExchangeDRAFCN.Enabled = False
                setTDSSData("")
                tabShare1.Visible = False
            End If
            If chkAddShare2.Checked = True Then
                Dim blnAddSelectedShare As Boolean = True
                ddlShareDRA2.Enabled = True
                ddlExchangeDRAFCN2.Enabled = True
                arrSelectedShare = txtBasketShares.Text.Split(CChar(","))
                For i = 0 To arrSelectedShare.Length - 1
                    'If ddlShareDRA2.Items.Count = 0 Then
                    'Else
		     ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                        'If ddlShareDRA2.SelectedItem Is Nothing Then
                        If ddlShareDRA2.SelectedValue Is Nothing Then
                        Else
                            If arrSelectedShare(i) = ddlShareDRA2.SelectedValue Then
                                blnAddSelectedShare = False
                                Exit For
                            End If

                        'End If
                    End If
                Next
                If blnAddSelectedShare = True Then
                    'If ddlShareDRA2.Items.Count = 0 Then
                    'Else
		     ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                        'If ddlShareDRA2.SelectedItem Is Nothing Then
                        If ddlShareDRA2.SelectedValue Is Nothing Then
                            txtBasketShares.Text = ""
                            setTDSSData2("")
                        Else
                            If ddlExchangeDRAFCN2.SelectedValue.ToUpper = "ALL" Then
                                Dim sTemp As String
                                sTemp = lblExchangeDRAFCN2.Text.Split(CChar("-"))(0).Trim
                                Session.Add("BasketExchange", CType(Session("BasketExchange"), String) + "," + sTemp)
                            Else
                                Session.Add("BasketExchange", CType(Session("BasketExchange"), String) + "," + ddlExchangeDRAFCN2.SelectedValue)
                            End If
			     ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                        ''txtBasketShares.Text = If(txtBasketShares.Text = "", ddlShareDRA2.SelectedValue, If(ddlShareDRA2.SelectedValue <> "", txtBasketShares.Text & "," & ddlShareDRA2.SelectedValue, txtBasketShares.Text))
                        txtBasketShares.Text = If(txtBasketShares.Text = "", ddlShareDRA2.SelectedValue, If(ddlShareDRA2.SelectedValue <> "", If(ddlShareDRA2.SelectedValue.Trim = "Please select valid share.", txtBasketShares.Text, txtBasketShares.Text & "," & ddlShareDRA2.SelectedValue), txtBasketShares.Text))
                            setTDSSData2(ddlShareDRA2.SelectedValue)

                        End If

                        tabShare2.Visible = True
                    'End If
                End If

            Else
                ddlShareDRA2.Enabled = False
                ddlExchangeDRAFCN2.Enabled = False
                setTDSSData2("")
                tabShare2.Visible = False
            End If

            If chkAddShare3.Checked = True Then
               
                Dim blnAddSelectedShare As Boolean = True
                ddlShareDRA3.Enabled = True
                ddlExchangeDRAFCN3.Enabled = True
                arrSelectedShare = txtBasketShares.Text.Split(CChar(","))
                For i = 0 To arrSelectedShare.Length - 1
                    ''If ddlShareDRA3.Items.Count = 0 Then
                    'Else
                    ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                    'If ddlShareDRA3.SelectedItem Is Nothing Then
                    If ddlShareDRA3.SelectedValue Is Nothing Then
                    Else
                        If arrSelectedShare(i) = ddlShareDRA3.SelectedValue Then
                            blnAddSelectedShare = False
                            Exit For

                        End If
                    End If
                    '' End If
                Next
                If blnAddSelectedShare = True Then
                    ''If ddlShareDRA3.Items.Count = 0 Then
                    ''Else
                    ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                    'If ddlShareDRA3.SelectedItem Is Nothing Then
                    If ddlShareDRA3.SelectedValue Is Nothing Then
                        txtBasketShares.Text = ""
                        setTDSSData3("")
                    Else
                        If ddlExchangeDRAFCN3.SelectedValue.ToUpper = "ALL" Then
                            Dim sTemp As String
                            sTemp = lblExchangeDRAFCN3.Text.Split(CChar("-"))(0).Trim
                            Session.Add("BasketExchange", CType(Session("BasketExchange"), String) + "," + sTemp)
                        Else
                            Session.Add("BasketExchange", CType(Session("BasketExchange"), String) + "," + ddlExchangeDRAFCN3.SelectedValue)
                        End If
                        ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                        ''txtBasketShares.Text = If(txtBasketShares.Text = "", ddlShareDRA3.SelectedValue, If(ddlShareDRA3.SelectedValue <> "", txtBasketShares.Text & "," & ddlShareDRA3.SelectedValue, txtBasketShares.Text))
                        txtBasketShares.Text = If(txtBasketShares.Text = "", ddlShareDRA3.SelectedValue, If(ddlShareDRA3.SelectedValue <> "", If(ddlShareDRA3.SelectedValue.Trim = "Please select valid share.", txtBasketShares.Text, txtBasketShares.Text & "," & ddlShareDRA3.SelectedValue), txtBasketShares.Text))
                        setTDSSData3(ddlShareDRA3.SelectedValue)

                    End If
                    tabShare3.Visible = True
                    ''End If

                End If
            Else
                ddlShareDRA3.Enabled = False
                ddlExchangeDRAFCN3.Enabled = False
                setTDSSData3("")
                tabShare3.Visible = False
            End If

            If txtBasketShares.Text.StartsWith(",") Then
                txtBasketShares.Text = txtBasketShares.Text.Substring(1)
            End If
            If CType(Session("BasketExchange"), String).StartsWith(",") Then
                Session("BasketExchange") = CType(Session("BasketExchange"), String).Substring(1)
            End If
            GetCommentary_DRA()
            chkQuantoFlag_DRA()
        Catch ex As Exception
            lblerror.Text = "Prepare_DRAFCN_Basket:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "Prepare_DRAFCN_Basket", ErrorLevel.High)
            Throw ex
        End Try
    End Sub
    Public Function chkQuantoFlag_DRA() As Boolean
        Try
            Dim isQuantoCCY1 As Boolean = True
            Dim isQuantoCCY2 As Boolean = True
            Dim isQuantoCCY3 As Boolean = True
            Dim isValidShare1 As Boolean = False
            Dim isValidShare2 As Boolean = False
            Dim isValidShare3 As Boolean = False
            If chkAddShare1.Checked = True Then
	     ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                'If ddlShareDRA.SelectedItem Is Nothing OrElse ddlShareDRA.SelectedValue <> "" Then
                If ddlShareDRA.SelectedValue Is Nothing OrElse ddlShareDRA.SelectedValue <> "" Then
                    isValidShare1 = True
                    If lblDRABaseCcy.Text.ToUpper.Contains(ddlNoteCcy.SelectedValue.Trim.ToUpper) Then
                        isQuantoCCY1 = False
                    End If
                Else
                    isValidShare1 = False
                End If

            End If
            If chkAddShare2.Checked = True Then
	     ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                'If ddlShareDRA2.SelectedItem Is Nothing OrElse ddlShareDRA2.SelectedValue <> "" Then
                If ddlShareDRA2.SelectedValue Is Nothing OrElse ddlShareDRA2.SelectedValue <> "" Then
                    isValidShare2 = True
                    If lblBaseCurrency2.Text.ToUpper.Contains(ddlNoteCcy.SelectedValue.Trim.ToUpper) Then
                        isQuantoCCY2 = False
                    End If

                Else
                    isValidShare2 = False
                End If
            End If
            If chkAddShare3.Checked = True Then
	     ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                'If ddlShareDRA3.SelectedItem Is Nothing OrElse ddlShareDRA3.SelectedValue <> "" Then
                If ddlShareDRA3.SelectedValue Is Nothing OrElse ddlShareDRA3.SelectedValue <> "" Then
                    isValidShare3 = True
                    If lblBaseCurrency3.Text.ToUpper.Contains(ddlNoteCcy.SelectedValue.Trim.ToUpper) Then
                        isQuantoCCY3 = False
                    End If
                Else
                    isValidShare3 = False
                End If
            End If


            If (isQuantoCCY1 And isValidShare1) OrElse (isQuantoCCY2 And isValidShare2) OrElse (isQuantoCCY3 And isValidShare3) Then
                lblQuantoYNFlag.Text = "Yes"
                lblQuantoYNFlag.ForeColor = Color.Red
                chkQuantoFlag_DRA = True
            Else
                lblQuantoYNFlag.Text = "No"
                lblQuantoYNFlag.ForeColor = Color.Black
                chkQuantoFlag_DRA = False
            End If
        Catch ex As Exception
            lblerror.Text = "chkQuantoFlag_DRA:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "chkQuantoFlag_DRA", ErrorLevel.High)
            Throw ex
        End Try
    End Function
    Private Sub ResetAll()
        Try
            Enable_Disable_Deal_Buttons()
            btnSolveAll.Enabled = True
            btnSolveAll.CssClass = "btn"
            chk_Login_For_PP()
            Dim strJavaScript As New StringBuilder
            AllHiddenPrice.Value = "Enable;Disable"
            btnSolveAll.Enabled = True
            strJavaScript.AppendLine("document.getElementById('PriceAllWait').style.visibility = 'hidden';")
            If btnJPMprice.Visible Then
                strJavaScript.AppendLine("StopPPTimerValue('" + btnJPMDeal.ClientID + "');")
            End If
            If btnHSBCPrice.Visible Then
                strJavaScript.AppendLine("StopPPTimerValue('" + btnHSBCDeal.ClientID + "');")
            End If
            If btnUBSPrice.Visible Then
                strJavaScript.AppendLine("StopPPTimerValue('" + btnUBSDeal.ClientID + "');")
            End If
            If btnCSPrice.Visible Then
                strJavaScript.AppendLine("StopPPTimerValue('" + btnCSDeal.ClientID + "');")
            End If
            If btnBAMLPrice.Visible Then
                strJavaScript.AppendLine("StopPPTimerValue('" + btnBAMLDeal.ClientID + "');")
            End If
            If btnBNPPPrice.Visible Then
                strJavaScript.AppendLine("StopPPTimerValue('" + btnBNPPDeal.ClientID + "');")
            End If
            If btnDBIBPrice.Visible Then
                strJavaScript.AppendLine("StopPPTimerValue('" + btnDBIBDeal.ClientID + "');")
            End If
            If btnOCBCPrice.Visible Then
                strJavaScript.AppendLine("StopPPTimerValue('" + btnOCBCDeal.ClientID + "');")
            End If
            If btnCITIPrice.Visible Then
                strJavaScript.AppendLine("StopPPTimerValue('" + btnCITIDeal.ClientID + "');")
            End If
            If btnLEONTEQPrice.Visible Then
                strJavaScript.AppendLine("StopPPTimerValue('" + btnLEONTEQDeal.ClientID + "');")
            End If
            If btnCOMMERZPrice.Visible Then
                strJavaScript.AppendLine("StopPPTimerValue('" + btnCOMMERZDeal.ClientID + "');")
            End If
            If btnHSBCPrice.Enabled Then
                lblHSBCClientYield.Text = ""
                lblHSBCClientPrice.Text = ""
                lblHSBCPrice.Text = ""
                lblHSBCPrice.ForeColor = System.Drawing.Color.Green
                HsbcHiddenPrice.Value = ";Enable;Disable;Disable;Price"
                btnHSBCPrice.Text = "Price"
                btnHSBCPrice.CssClass = "btn"
            Else
                lblHSBCClientYield.Text = ""
                lblHSBCClientPrice.Text = ""
                lblHSBCPrice.Text = ""
                HsbcHiddenPrice.Value = ";Disable;Disable;Disable;Price"
            End If

            If btnJPMprice.Enabled Then
                lblJPMClientYield.Text = ""
                lblJPMClientPrice.Text = ""
                lblJPMPrice.Text = ""
                lblJPMPrice.ForeColor = System.Drawing.Color.Green
                JpmHiddenPrice.Value = ";Enable;Disable;Disable;Price"
                btnJPMprice.Text = "Price"
                btnJPMprice.CssClass = "btn"
            Else
                lblJPMClientYield.Text = ""
                lblJPMClientPrice.Text = ""
                lblJPMPrice.Text = ""
                JpmHiddenPrice.Value = ";Disable;Disable;Disable;Price"
            End If

            If btnCSPrice.Enabled Then
                lblCSClientYield.Text = ""
                lblCSClientPrice.Text = ""
                lblCSPrice.Text = ""
                lblCSPrice.ForeColor = System.Drawing.Color.Green
                CsHiddenPrice.Value = ";Enable;Disable;Disable;Price"
                btnCSPrice.Text = "Price"
                btnCSPrice.CssClass = "btn"
            Else
                lblCSClientYield.Text = ""
                lblCSClientPrice.Text = ""
                lblCSPrice.Text = ""
                CsHiddenPrice.Value = ";Disable;Disable;Disable;Price"
            End If

            If btnUBSPrice.Enabled Then
                lblUBSClientYield.Text = ""
                lblUBSClientPrice.Text = ""
                lblUBSPrice.Text = ""
                lblUBSPrice.ForeColor = System.Drawing.Color.Green
                UbsHiddenPrice.Value = ";Enable;Disable;Disable;Price"
                btnUBSPrice.Text = "Price"
                btnUBSPrice.CssClass = "btn"
            Else
                lblUBSClientYield.Text = ""
                lblUBSClientPrice.Text = ""
                lblUBSPrice.Text = ""
                UbsHiddenPrice.Value = ";Disable;Disable;Disable;Price"
            End If

            If btnBAMLPrice.Enabled Then
                lblBAMLClientYield.Text = ""
                lblBAMLClientPrice.Text = ""
                lblBAMLPrice.Text = ""
                lblBAMLPrice.ForeColor = System.Drawing.Color.Green
                BAMLHiddenPrice.Value = ";Enable;Disable;Disable;Price"
                btnBAMLPrice.Text = "Price"
                btnBAMLPrice.CssClass = "btn"
            Else
                lblBAMLClientYield.Text = ""
                lblBAMLClientPrice.Text = ""
                lblBAMLPrice.Text = ""
                BAMLHiddenPrice.Value = ";Disable;Disable;Disable;Price"
            End If

            If btnBNPPPrice.Enabled Then
                lblBNPPClientYield.Text = ""
                lblBNPPClientPrice.Text = ""
                lblBNPPPrice.Text = ""
                lblBNPPPrice.ForeColor = System.Drawing.Color.Green
                BNPPHiddenPrice.Value = ";Enable;Disable;Disable;Price"
                btnBNPPPrice.Text = "Price"
                btnBNPPPrice.CssClass = "btn"
            Else
                lblBNPPClientYield.Text = ""
                lblBNPPClientPrice.Text = ""
                lblBNPPPrice.Text = ""
                BNPPHiddenPrice.Value = ";Disable;Disable;Disable;Price"
            End If

            If btnDBIBPrice.Enabled Then
                lblDBIBClientYield.Text = ""
                lblDBIBClientPrice.Text = ""
                lblDBIBPrice.Text = ""
                lblDBIBPrice.ForeColor = System.Drawing.Color.Green
                DBIBHiddenPrice.Value = ";Enable;Disable;Disable;Price"
                btnDBIBPrice.Text = "Price"
                btnDBIBPrice.CssClass = "btn"
            Else
                lblDBIBClientYield.Text = ""
                lblDBIBClientPrice.Text = ""
                lblDBIBPrice.Text = ""
                DBIBHiddenPrice.Value = ";Disable;Disable;Disable;Price"
            End If

            If btnOCBCPrice.Enabled Then
                lblOCBCClientYield.Text = ""
                lblOCBCClientPrice.Text = ""
                lblOCBCPrice.Text = ""
                lblOCBCPrice.ForeColor = System.Drawing.Color.Green
                OCBCHiddenPrice.Value = ";Enable;Disable;Disable;Price"
                btnOCBCPrice.Text = "Price"
                btnOCBCPrice.CssClass = "btn"
            Else
                lblOCBCClientYield.Text = ""
                lblOCBCClientPrice.Text = ""
                lblOCBCPrice.Text = ""
                OCBCHiddenPrice.Value = ";Disable;Disable;Disable;Price"
            End If

            If btnCITIPrice.Enabled Then
                lblCITIClientYield.Text = ""
                lblCITIClientPrice.Text = ""
                lblCITIPrice.Text = ""
                lblCITIPrice.ForeColor = System.Drawing.Color.Green
                CITIHiddenPrice.Value = ";Enable;Disable;Disable;Price"
                btnCITIPrice.Text = "Price"
                btnCITIPrice.CssClass = "btn"
            Else
                lblCITIClientYield.Text = ""
                lblCITIClientPrice.Text = ""
                lblCITIPrice.Text = ""
                CITIHiddenPrice.Value = ";Disable;Disable;Disable;Price"
            End If
            If btnLEONTEQPrice.Enabled Then
                lblLEONTEQClientYield.Text = ""
                lblLEONTEQClientPrice.Text = ""
                lblLEONTEQPrice.Text = ""
                lblLEONTEQPrice.ForeColor = System.Drawing.Color.Green
                LEONTEQHiddenPrice.Value = ";Enable;Disable;Disable;Price"
                btnLEONTEQPrice.Text = "Price"
                btnLEONTEQPrice.CssClass = "btn"
            Else
                lblLEONTEQClientYield.Text = ""
                lblLEONTEQClientPrice.Text = ""
                lblLEONTEQPrice.Text = ""
                LEONTEQHiddenPrice.Value = ";Disable;Disable;Disable;Price"
            End If
            If btnCOMMERZPrice.Enabled Then
                lblCOMMERZClientYield.Text = ""
                lblCOMMERZClientPrice.Text = ""
                lblCOMMERZPrice.Text = ""
                lblCOMMERZPrice.ForeColor = System.Drawing.Color.Green
                COMMERZHiddenPrice.Value = ";Enable;Disable;Disable;Price"
                btnCOMMERZPrice.Text = "Price"
                btnCOMMERZPrice.CssClass = "btn"
            Else
                lblCOMMERZClientYield.Text = ""
                lblCOMMERZClientPrice.Text = ""
                lblCOMMERZPrice.Text = ""
                COMMERZHiddenPrice.Value = ";Disable;Disable;Disable;Price"
            End If
            strJavaScript.AppendLine("StopPolling();")
            System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "StopPolling", "try {" + strJavaScript.ToString + "} catch(e){ }", True)
            DealConfirmPopup.Visible = False
            UPanle11111.Update()
            If UCase(Request.QueryString("EXTLOD")) = "REPRICEPOOL" Or UCase(Request.QueryString("EXTLOD")) = "HEDGE" Then
                EnableDisableForOrderPoolData(Convert.ToString(Session("DRARePricePPName")))
            End If
            TRJPM1.Attributes.Remove("class")
            TRHSBC1.Attributes.Remove("class")
            TRUBS1.Attributes.Remove("class")
            TRCS1.Attributes.Remove("class")
            TRBNPP1.Attributes.Remove("class")
            TRBAML1.Attributes.Remove("class") ''Added by imran on 21Aug2015 for bestprice

            TRDBIB1.Attributes.Remove("class")
            TROCBC1.Attributes.Remove("class")
            TRCITI1.Attributes.Remove("class")
            TRLEONTEQ1.Attributes.Remove("class")
            TRCOMMERZ1.Attributes.Remove("class")

            hideShowRBLShareData()
            ResetMinMaxNotional() '<Added By Imran on 19-Dec-2015 FA-1236 - Allow user to Quote without Notional>
            '<Ashwini P on 06-Oct-2016 : To reset strike in commentry>
            hdnBestStrike.Value = ""
            hdnBestProvider.Value = ""
            ResetAllChkBox()
            '</Ashwini P on 06-Oct-2016>
        Catch ex As Exception
            lblerror.Text = "ResetAll:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "ResetAll", ErrorLevel.High)
            Throw ex
        End Try
    End Sub
    '<Added By Imran on 19-Dec-2015 FA-1236 - Allow user to Quote without Notional> 
    Private Sub ResetMinMaxNotional()
        lblJPMlimit.Text = ""
        lblJPMlimit.ToolTip = ""
        lblJPMlimit.Visible = False
        lblHSBClimit.Text = ""
        lblHSBClimit.ToolTip = ""
        lblHSBClimit.Visible = False
        lblCSLimit.Text = ""
        lblCSLimit.ToolTip = ""
        lblCSLimit.Visible = False
        lblUBSlimit.Text = ""
        lblUBSlimit.ToolTip = ""
        lblUBSlimit.Visible = False
        lblBAMLlimit.Text = ""
        lblBAMLlimit.ToolTip = ""
        lblBAMLlimit.Visible = False
        lblBNPPlimit.Text = ""
        lblBNPPlimit.ToolTip = ""
        lblBNPPlimit.Visible = False
        lblDBIBlimit.Text = ""
        lblDBIBlimit.ToolTip = ""
        lblDBIBlimit.Visible = False
        lblOCBClimit.Text = ""
        lblOCBClimit.ToolTip = ""
        lblOCBClimit.Visible = False
        lblCITIlimit.Text = ""
        lblCITIlimit.ToolTip = ""
        lblCITIlimit.Visible = False
        lblLEONTEQlimit.Text = ""
        lblLEONTEQlimit.ToolTip = ""
        lblLEONTEQlimit.Visible = False
        lblCOMMERZlimit.Text = ""
        lblCOMMERZlimit.ToolTip = ""
        lblCOMMERZlimit.Visible = False
        lblRangeCcy.Text = ""
    End Sub
    '<\Added By Imran on 19-Dec-2015 FA-1236 - Allow user to Quote without Notional> 

    Private Sub RestoreAll()
        Try
        Dim iTabIdx As Integer = tabContainer.ActiveTabIndex
            Dim ddlPrdSolveFor As Telerik.Web.UI.RadDropDownList
            ddlPrdSolveFor = ddlSolveForDRA
            Dim strJavaScriptRestoreAll As New StringBuilder
            '<AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
            strJavaScriptRestoreAll.AppendLine(Restore(JpmHiddenPrice, lblJPMPrice, lblJPMClientPrice, lblJPMClientYield, iTabIdx, ddlPrdSolveFor, btnJPMprice, btnJPMDoc, JpmHiddenAccDays, lblJPMlimit))
            strJavaScriptRestoreAll.AppendLine(Restore(HsbcHiddenPrice, lblHSBCPrice, lblHSBCClientPrice, lblHSBCClientYield, iTabIdx, ddlPrdSolveFor, btnHSBCPrice, btnHSBCDoc, HsbcHiddenAccDays, lblHSBClimit))
            strJavaScriptRestoreAll.AppendLine(Restore(UbsHiddenPrice, lblUBSPrice, lblUBSClientPrice, lblUBSClientYield, iTabIdx, ddlPrdSolveFor, btnUBSPrice, btnUBSDoc, UbsHiddenAccDays, lblUBSlimit))
            strJavaScriptRestoreAll.AppendLine(Restore(CsHiddenPrice, lblCSPrice, lblCSClientPrice, lblCSClientYield, iTabIdx, ddlPrdSolveFor, btnCSPrice, btnCSDoc, CsHiddenAccDays, lblCSLimit))
            strJavaScriptRestoreAll.AppendLine(Restore(BAMLHiddenPrice, lblBAMLPrice, lblBAMLClientPrice, lblBAMLClientYield, iTabIdx, ddlPrdSolveFor, btnBAMLPrice, btnBAMLDoc, BAMLHiddenAccDays, lblBAMLlimit))
            strJavaScriptRestoreAll.AppendLine(Restore(BNPPHiddenPrice, lblBNPPPrice, lblBNPPClientPrice, lblBNPPClientYield, iTabIdx, ddlPrdSolveFor, btnBNPPPrice, btnBNPPDoc, BNPPHiddenAccDays, lblBNPPlimit))
            strJavaScriptRestoreAll.AppendLine(Restore(DBIBHiddenPrice, lblDBIBPrice, lblDBIBClientPrice, lblDBIBClientYield, iTabIdx, ddlPrdSolveFor, btnDBIBPrice, btnDBIBDoc, DBIBHiddenAccDays, lblDBIBlimit))
            strJavaScriptRestoreAll.AppendLine(Restore(OCBCHiddenPrice, lblOCBCPrice, lblOCBCClientPrice, lblOCBCClientYield, iTabIdx, ddlPrdSolveFor, btnOCBCPrice, btnOCBCDoc, OCBCHiddenAccDays, lblOCBClimit))
            strJavaScriptRestoreAll.AppendLine(Restore(CITIHiddenPrice, lblCITIPrice, lblCITIClientPrice, lblCITIClientYield, iTabIdx, ddlPrdSolveFor, btnCITIPrice, btnCITIDoc, CITIHiddenAccDays, lblCITIlimit))
            strJavaScriptRestoreAll.AppendLine(Restore(LEONTEQHiddenPrice, lblLEONTEQPrice, lblLEONTEQClientPrice, lblLEONTEQClientYield, iTabIdx, ddlPrdSolveFor, btnLEONTEQPrice, btnLEONTEQDoc, LEONTEQHiddenAccDays, lblLEONTEQlimit))
            strJavaScriptRestoreAll.AppendLine(Restore(COMMERZHiddenPrice, lblCOMMERZPrice, lblCOMMERZClientPrice, lblCOMMERZClientYield, iTabIdx, ddlPrdSolveFor, btnCOMMERZPrice, btnCOMMERZDoc, COMMERZHiddenAccDays, lblCOMMERZlimit))


            'strJavaScriptRestoreAll.AppendLine(Restore(JpmHiddenPrice, lblJPMPrice, lblJPMClientPrice, lblJPMClientYield, iTabIdx, ddlPrdSolveFor, btnJPMprice, JpmHiddenAccDays))
            'strJavaScriptRestoreAll.AppendLine(Restore(HsbcHiddenPrice, lblHSBCPrice, lblHSBCClientPrice, lblHSBCClientYield, iTabIdx, ddlPrdSolveFor, btnHSBCPrice, HsbcHiddenAccDays))
            'strJavaScriptRestoreAll.AppendLine(Restore(UbsHiddenPrice, lblUBSPrice, lblUBSClientPrice, lblUBSClientYield, iTabIdx, ddlPrdSolveFor, btnUBSPrice, UbsHiddenAccDays))
            'strJavaScriptRestoreAll.AppendLine(Restore(CsHiddenPrice, lblCSPrice, lblCSClientPrice, lblCSClientYield, iTabIdx, ddlPrdSolveFor, btnCSPrice, CsHiddenAccDays))
            'strJavaScriptRestoreAll.AppendLine(Restore(BAMLHiddenPrice, lblBAMLPrice, lblBAMLClientPrice, lblBAMLClientYield, iTabIdx, ddlPrdSolveFor, btnBAMLPrice, BAMLHiddenAccDays))
            'strJavaScriptRestoreAll.AppendLine(Restore(BNPPHiddenPrice, lblBNPPPrice, lblBNPPClientPrice, lblBNPPClientYield, iTabIdx, ddlPrdSolveFor, btnBNPPPrice, BNPPHiddenAccDays))

            '</AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
            System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "strJavaScriptRestoreAll", strJavaScriptRestoreAll.ToString, True)
        Catch ex As Exception
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                        sSelfPath, "RestoreAll", ErrorLevel.High)
            Throw ex
        End Try
    End Sub
    Public Sub btnCancelReq_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnCancelReq.Click
        Try
            ResetAll()
            ''<Start | Nikhil M. on 20-Sep-2016: Added for Reset Commentry>
            hdnBestStrike.Value = ""
            hdnBestProvider.Value = ""
            ResetAllChkBox()
            GetCommentary_DRA()
            ''<End | Nikhil M. on 20-Sep-2016: Added for Reset Commentry>
            lblerror.Text = ""
            If UCase(Request.QueryString("EXTLOD")) = "REPRICEPOOL" Or UCase(Request.QueryString("EXTLOD")) = "HEDGE" Then
                EnableDisableForOrderPoolData(Convert.ToString(Session("DRARePricePPName")))
            End If
        Catch ex As Exception
            lblerror.Text = "btnCancelReq_Click:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnCancelReq_Click", ErrorLevel.High)

        End Try
    End Sub
    Public Sub UpdateDRABasket(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnHdnUpdateDRABasket.Click
        Try
            Call Prepare_DRAFCN_Basket()
        Catch ex As Exception
            lblerror.Text = "UpdateDRABasket:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "UpdateDRABasket", ErrorLevel.High)
            Throw ex
        End Try
    End Sub
    Public Sub EnablePage(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnHdnEnablePage.Click, btnHdnEnablePage2.Click
        Try
            ShowHideConfirmationPopup(False)
        Catch ex As Exception
            lblerror.Text = "EnablePage:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "EnablePage", ErrorLevel.High)
            Throw ex
        End Try
    End Sub
'Mohit Lalwani on 29-Jan-2016
    Private Sub ShowHideDeatils(ByVal blnShowPopup As Boolean)
        Try
            panelDRAFCN.Enabled = Not blnShowPopup
            upnl2.Update()
            If TRJPM1.Visible Then
                TRJPM1.Disabled = blnShowPopup
            End If

            If TRHSBC1.Visible Then
                TRHSBC1.Disabled = blnShowPopup
            End If

            If TRUBS1.Visible Then
                TRUBS1.Disabled = blnShowPopup
            End If

            If TRCS1.Visible Then
                TRCS1.Disabled = blnShowPopup
            End If

            If TRBAML1.Visible Then
                TRBAML1.Disabled = blnShowPopup
            End If

            If TRBNPP1.Visible Then
                TRBNPP1.Disabled = blnShowPopup
            End If
            If TRDBIB1.Visible Then
                TRDBIB1.Disabled = blnShowPopup
            End If

            If TROCBC1.Visible Then
                TROCBC1.Disabled = blnShowPopup
            End If
            If TRCITI1.Visible Then
                TRCITI1.Disabled = blnShowPopup
            End If
            If TRLEONTEQ1.Visible Then
                TRLEONTEQ1.Disabled = blnShowPopup
            End If
            If TRCOMMERZ1.Visible Then
                TRCOMMERZ1.Disabled = blnShowPopup
            End If
            PanelReprice.Enabled = Not blnShowPopup
            System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "DisableTabs", " document.getElementById('ctl00_MainContent_tabContainer_header').disabled = " + blnShowPopup.ToString.ToLower + ";", True)
            '<Changed by Mohit Lalwani on 1-Feb-2016 for splitting of TAB>

            ' System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "DisableELNTab", " document.getElementById('__tab_ctl00_MainContent_tabContainer_tabPanelELN').disabled = " + blnShowPopup.ToString.ToLower + ";", True)
            ' System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "DisableDRATab", " document.getElementById('__tab_ctl00_MainContent_tabContainer_tabPanelDRA').disabled = " + blnShowPopup.ToString.ToLower + ";", True)
            ' System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "DisableAQDQTab", " document.getElementById('__tab_ctl00_MainContent_tabContainer_tabPanelAQDQ').disabled = " + blnShowPopup.ToString.ToLower + ";", True)

            System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "DisableELNTab", " document.getElementById('__tab_ctl00_MainContent_tabContainer_tabPanelELN').disabled = " + blnShowPopup.ToString.ToLower + ";", True)
            System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "DisableFCNTab", " document.getElementById('__tab_ctl00_MainContent_tabContainer_tabPanelFCN').disabled = " + blnShowPopup.ToString.ToLower + ";", True)
            System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "DisableDRATab", " document.getElementById('__tab_ctl00_MainContent_tabContainer_tabPanelDRA').disabled = " + blnShowPopup.ToString.ToLower + ";", True)
            System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "DisableAQTab", " document.getElementById('__tab_ctl00_MainContent_tabContainer_tabPanelAQDQ').disabled = " + blnShowPopup.ToString.ToLower + ";", True)
            System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "DisableAQDQTab", " document.getElementById('__tab_ctl00_MainContent_tabContainer_tabPanelDQ').disabled = " + blnShowPopup.ToString.ToLower + ";", True)
            '</Changed by Mohit Lalwani on 1-Feb-2016 for splitting of TAB>
        Catch ex As Exception
            lblerror.Text = "ShowHideDeatils:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "ShowHideDeatils", ErrorLevel.High)
            Throw ex
        End Try
    End Sub
    Private Sub ShowHideConfirmationPopup(ByVal blnShowPopup As Boolean, Optional ByVal isResetAll As String = "YES")
        Try
            DealConfirmPopup.Visible = blnShowPopup
            txtOrderCmt.Text = ""
            Select Case objReadConfig.ReadConfig(dsConfig, "EQC_CaptureOrderComment", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper
                Case "Y", "YES"
                    rowOrderComment.Visible = True
                Case "N", "NO"
                    rowOrderComment.Visible = False
            End Select

            ''Start Added By Nikhil M 20Sep16 For Booking Brach DropDown EQSCB-16
            Dim DtCommanData As New DataTable("DtCommanData")
            ddlBookingBranchPopUpValue.Items.Clear() ''<Nikhil M. on 20-Sep-2016:Added >
            Dim strQuerySelect As String = "entity_id = '" + LoginInfoGV.Login_Info.EntityID.ToString + "'"
            Select Case ObjCommanData.DB_Get_Common_Data("EQC_SCB_BookingCenters", DtCommanData)   '<RiddhiS. on 14-Oct-2016: Config name changed>
                Case Web_CommonFunction.Database_Transaction_Response.Db_Successful
                    If DtCommanData.Rows.Count > 0 Then
                        If DtCommanData.Select(strQuerySelect).Length > 0 Then
                            ddlBookingBranchPopUpValue.DataSource = DtCommanData.Select(strQuerySelect).CopyToDataTable
                            ddlBookingBranchPopUpValue.DataValueField = "Misc1"
                            ddlBookingBranchPopUpValue.DataTextField = "Data_Value"
                            ddlBookingBranchPopUpValue.DataBind()
                        Else
                            SetDllBookingBranch()
                        End If
                    Else
                        SetDllBookingBranch()
                    End If
                Case Web_CommonFunction.Database_Transaction_Response.DB_Unsuccessful
                    SetDllBookingBranch()
            End Select
            '' End Added By Nikhil M 20Sep16 For Booking Brach DropDown EQSCB-16


            UPanle11111.Update()
            panelDRAFCN.Enabled = Not blnShowPopup
            upnl2.Update()
            If TRJPM1.Visible Then
                TRJPM1.Disabled = blnShowPopup
            End If

            If TRHSBC1.Visible Then
                TRHSBC1.Disabled = blnShowPopup
            End If

            If TRUBS1.Visible Then
                TRUBS1.Disabled = blnShowPopup
            End If

            If TRCS1.Visible Then
                TRCS1.Disabled = blnShowPopup
            End If

            If TRBAML1.Visible Then
                TRBAML1.Disabled = blnShowPopup
            End If

            If TRBNPP1.Visible Then
                TRBNPP1.Disabled = blnShowPopup
            End If

            If TRDBIB1.Visible Then
                TRDBIB1.Disabled = blnShowPopup
            End If

            If TROCBC1.Visible Then
                TROCBC1.Disabled = blnShowPopup
            End If




            If TRCITI1.Visible Then
                TRCITI1.Disabled = blnShowPopup
            End If
            If TRLEONTEQ1.Visible Then
                TRLEONTEQ1.Disabled = blnShowPopup
            End If
            If TRCOMMERZ1.Visible Then
                TRCOMMERZ1.Disabled = blnShowPopup
            End If
            PanelReprice.Enabled = Not blnShowPopup
            System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "DisableTabs", " document.getElementById('ctl00_MainContent_tabContainer_header').disabled = " + blnShowPopup.ToString.ToLower + ";", True)
            '<Changed by Mohit Lalwani on 1-Feb-2016 for splitting of TAB>

            ' System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "DisableELNTab", " document.getElementById('__tab_ctl00_MainContent_tabContainer_tabPanelELN').disabled = " + blnShowPopup.ToString.ToLower + ";", True)
            ' System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "DisableDRATab", " document.getElementById('__tab_ctl00_MainContent_tabContainer_tabPanelDRA').disabled = " + blnShowPopup.ToString.ToLower + ";", True)
            ' System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "DisableAQDQTab", " document.getElementById('__tab_ctl00_MainContent_tabContainer_tabPanelAQDQ').disabled = " + blnShowPopup.ToString.ToLower + ";", True)

            System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "DisableELNTab", " document.getElementById('__tab_ctl00_MainContent_tabContainer_tabPanelELN').disabled = " + blnShowPopup.ToString.ToLower + ";", True)
            System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "DisableFCNTab", " document.getElementById('__tab_ctl00_MainContent_tabContainer_tabPanelFCN').disabled = " + blnShowPopup.ToString.ToLower + ";", True)
            System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "DisableDRATab", " document.getElementById('__tab_ctl00_MainContent_tabContainer_tabPanelDRA').disabled = " + blnShowPopup.ToString.ToLower + ";", True)
            System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "DisableAQTab", " document.getElementById('__tab_ctl00_MainContent_tabContainer_tabPanelAQDQ').disabled = " + blnShowPopup.ToString.ToLower + ";", True)
            System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "DisableAQDQTab", " document.getElementById('__tab_ctl00_MainContent_tabContainer_tabPanelDQ').disabled = " + blnShowPopup.ToString.ToLower + ";", True)
            '</Changed by Mohit Lalwani on 1-Feb-2016 for splitting of TAB>
            'Added by Mohit Lalwani on 1-Aug-2016
            If isResetAll = "YES" Then
                If blnShowPopup = False Then
                    ResetAll()
                End If
            End If
            '/Added by Mohit Lalwani on 1-Aug-2016

            If Not IsNothing(Request.QueryString("EXTLOD")) Then
                If UCase(Request.QueryString("EXTLOD")) = "REPRICEPOOL" Then
                    btnDealConfirm.Visible = False
                    btnCapturePoolPrice.Disabled = False
                    btnCapturePoolPrice.Visible = True
                End If
            End If

            ''<Start | Dilkhush/Nikhil M. on 17-Oct-2016: For Hide/Show  Allocation>
            If IsNothing(Request.QueryString("PoolID")) Then
                grdRMData.Visible = True
                btnAddAllocation.Visible = True
            Else
                If Request.QueryString("PoolID").ToString = "" Then
                    grdRMData.Visible = True
                    btnAddAllocation.Visible = True
                Else
                    grdRMData.Visible = False
                    btnAddAllocation.Visible = False
                End If
            End If
            ''<End | Dilkhush/Nikhil M. on 17-Oct-2016: For Hide/Show Allocation>

            btnRedirect.Visible = False
            btnDealConfirm.Visible = True '<AvinashG. on 26-Feb-2016: FA-1327 - Hide confirm button and show redirect for redirection>
        Catch ex As Exception
            lblerror.Text = "ShowHideConfirmationPopup:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "ShowHideConfirmationPopup", ErrorLevel.High)
            Throw ex
        End Try
    End Sub
    Private Sub txtUpfrontDRA_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtUpfrontDRA.TextChanged
        Try
            lblerror.Text = ""
            clearFields()
            txtUpfrontDRA.Text = SetNumberFormat(txtUpfrontDRA.Text, 2)
            Select Case objReadConfig.ReadConfig(dsConfig, "EQC_Follow_AtPar_Lock", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper
                Case "Y", "YES"
                    txtUpfrontDRA.Text = If(txtUpfrontDRA.Text = "", "0", txtUpfrontDRA.Text)
                    If ddlSolveForDRA.SelectedValue.ToUpper <> "PRICE" Then
                        txtDRAPrice.Text = SetNumberFormat((100 - Convert.ToDouble(txtUpfrontDRA.Text)).ToString, 2) ''Rushikesh 27Nov2015: Formating
                    Else

                    End If
                Case "N", "NO"

            End Select
            ResetAll()                  ''<ashwiniP on 06-Oct-2016> : Sequence changed
            GetCommentary_DRA()

        Catch ex As Exception
            lblerror.Text = "txtUpfrontDRA_TextChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "txtUpfrontDRA_TextChanged", ErrorLevel.High)
        End Try
    End Sub

    Private Sub txtLimitPricePopUpValue_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtLimitPricePopUpValue.TextChanged
        Try
            'Added by Mohit Lalwani on 1-Aug-2016
            RestoreSolveAll()
            RestoreAll()
            '/Added by Mohit Lalwani on 1-Aug-2016

            lblerrorPopUp.Text = ""
            chkUpfrontOverride.Checked = False
            chkUpfrontOverride.Visible = False
            'If (txtLimitPricePopUpValue.Text.Length - (txtLimitPricePopUpValue.Text.LastIndexOf(".") + 1)) > 4  Then
            'If (txtLimitPricePopUpValue.Text.Length - (txtLimitPricePopUpValue.Text.LastIndexOf(".") + 1)) > 4 And CDbl(txtLimitPricePopUpValue.Text) <> Math.Floor(CDbl(txtLimitPricePopUpValue.Text)) Then
            ''Added by Rushikesh D. on 24-Feb-16 JIRAID:EQ-282
            If txtLimitPricePopUpValue.Text.Trim <> "" Then
                If (txtLimitPricePopUpValue.Text.Length - (txtLimitPricePopUpValue.Text.LastIndexOf(".") + 1)) > 4 And CDbl(txtLimitPricePopUpValue.Text) <> Math.Floor(CDbl(txtLimitPricePopUpValue.Text)) Then
                    lblerrorPopUp.Text = "Precision of " + lblLimitPricePopUpCaption.Text + " cannot exceed four digits after decimal point."
                End If
            End If
        Catch ex As Exception
            lblerror.Text = "txtLimitPricePopUpValue_TextChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "txtLimitPricePopUpValue_TextChanged", ErrorLevel.High)
        End Try
    End Sub
    Private Sub makeThisGridVisible(ByVal grdToBeShown As DataGrid)
        Try
            grdDRAFCN.Visible = False
            grdOrder.Visible = False
            grdToBeShown.Visible = True
            upnlGrid.Update()
        Catch ex As Exception
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "makeThisGridVisible", ErrorLevel.High)
            Throw ex
        End Try
    End Sub
    Private Sub RestoreSolveAll()
        Try
        Dim PriceStateAll As String
        Dim PriceArrayAll() As String
            PriceStateAll = AllHiddenPrice.Value
        PriceArrayAll = Split(PriceStateAll, ";")
        If (PriceArrayAll.Length > 1) Then
            If (PriceArrayAll(0) = "Enable") Then
                btnSolveAll.Enabled = True
                btnSolveAll.CssClass = "btn"
            Else
                btnSolveAll.Enabled = False
                btnSolveAll.CssClass = "btnDisabled"
            End If

            If (PriceArrayAll(1) = "Enable") Then
                Else
                    System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "stopPriceAllWaitLoader", "try { document.getElementById('PriceAllWait').style.visibility = 'hidden'; } catch(e){}", True)
            End If
            End If
        Catch ex As Exception
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "RestoreSolveAll", ErrorLevel.High)
            Throw ex
        End Try
    End Sub
    '<AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer, add-on parameter>

    Public Function Restore(ByVal hiddenPriceCsv As HiddenField, ByVal lblIssuerPrice As Label, ByVal lblIssuerClientPrice As Label, _
                        ByVal lblIssuerClientYield As Label, ByVal tabIndex As Integer, ByRef ddlPrdSolveFor As RadDropDownList, _
                        ByVal btnPrice As Button, ByVal btnDoc As Button, Optional ByVal HiddenAccDaysCsv As HiddenField = Nothing, Optional ByVal lblMinMaxSize As Label = Nothing) As String
        Try
            Dim PriceArray() As String
            PriceArray = Split(hiddenPriceCsv.Value, ";")
            If (PriceArray.Length > 1) Then
                If (PriceArray(0) = "Rejected") Then
                    lblIssuerPrice.Text = PriceArray(0)
                    '<AvinashG. on 18-May-2016:  FA-1430 - Easily changable color for Rejected and Timeout cases(remove red)>
                    'lblIssuerPrice.ForeColor = System.Drawing.Color.Red
                    lblIssuerPrice.CssClass = lblIssuerPrice.CssClass.Replace("lblPrice", "").Replace("lblRejected", "").Replace("lblTimeout", "") + " lblRejected"
                    '</AvinashG. on 18-May-2016:  FA-1430 - Easily changable color for Rejected and Timeout cases(remove red)>
                ElseIf (PriceArray(0) = "Timeout") Then
                    lblIssuerPrice.Text = PriceArray(0)
                    '<AvinashG. on 18-May-2016:  FA-1430 - Easily changable color for Rejected and Timeout cases(remove red)>
                    'lblIssuerPrice.ForeColor = System.Drawing.Color.Red
                    lblIssuerPrice.CssClass = lblIssuerPrice.CssClass.Replace("lblPrice", "").Replace("lblRejected", "").Replace("lblTimeout", "") + " lblTimeout"
                    '</AvinashG. on 18-May-2016:  FA-1430 - Easily changable color for Rejected and Timeout cases(remove red)>
                Else
                    lblIssuerPrice.Text = SetNumberFormat((Split(PriceArray(0).ToString, ",")(0)), 2) ''<Imran on 19-Dec-2015 FA-1236 - Allow user to Quote without Notional>
                    '<AvinashG. on 18-May-2016:  FA-1430 - Easily changable color for Rejected and Timeout cases(remove red)>
                    'lblIssuerPrice.ForeColor = System.Drawing.Color.Green



                    lblIssuerPrice.CssClass = lblIssuerPrice.CssClass.Replace("lblPrice", "").Replace("lblRejected", "").Replace("lblTimeout", "") + " lblPrice"
                    '</AvinashG. on 18-May-2016:  FA-1430 - Easily changable color for Rejected and Timeout cases(remove red)>
                    If (lblIssuerPrice.Text <> "") Then
                        '<AvinashG. on 27-Sep-2016: TEMPORARY----------------------------AS MS WORD IS NOT AVAILABLE ON AZURE CLOUD>
                        If grdDRAFCN.Columns(grdDRAFCNEnum.GenerateDoc).Visible = False Then
                            btnDoc.Visible = False '<RiddhiS. on 17-Sep-2016 to show Document link button when price arrives />
                        Else
                            btnDoc.Visible = True '<RiddhiS. on 17-Sep-2016 to show Document link button when price arrives />
                        End If
                        '</AvinashG. on 27-Sep-2016: TEMPORARY---------------------------->
                        If ddlPrdSolveFor.SelectedValue = "PRICE" Then
                            Select Case objReadConfig.ReadConfig(dsConfig, "EQC_Follow_AtPar_Lock", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper
                                Case "Y", "YES"
                                    lblIssuerClientYield.Text = FormatNumber((100 - CDbl(lblIssuerPrice.Text)), 2)
                                    lblIssuerClientPrice.Text = "100.00"
                                Case "N", "NO"
                                    lblIssuerClientPrice.Text = SetNumberFormat((CDbl(lblIssuerPrice.Text) + CDbl(txtUpfrontDRA.Text)).ToString, 2)
                                    lblIssuerClientYield.Text = txtUpfrontDRA.Text
                            End Select
                            '<Added By Imran on 19-Dec-2015 FA-1236 - Allow user to Quote without Notional> 
                            ''Dilkhush/Avinash 22Feb2016 added if condition to handle string to double conversion
                            ''lblMinMaxSize.Text = convertNotionalintoShort(CDbl(Split(PriceArray(0).ToString, ",")(1)), "MIN") + " / " + convertNotionalintoShort(CDbl(Split(PriceArray(0).ToString, ",")(2)), "MAX") '+ "(" + Split(PriceArray(0).ToString, ",")(3) + ")"       
                            lblMinMaxSize.Text = convertNotionalintoShort((If(Split(PriceArray(0).ToString, ",")(1).ToString = "", 0, CDbl(Split(PriceArray(0).ToString, ",")(1)))), "MIN") + " / " + convertNotionalintoShort((If(Split(PriceArray(0).ToString, ",")(2).ToString = "", 0, CDbl(Split(PriceArray(0).ToString, ",")(2)))), "MAX") '+ "(" + Split(PriceArray(0).ToString, ",")(3) + ")"       
                            lblMinMaxSize.ToolTip = Split(PriceArray(0).ToString, ",")(1) + " / " + Split(PriceArray(0).ToString, ",")(2) '+ "(" + Split(PriceArray(0).ToString, ",")(3) + ")"       
                            lblMinMaxSize.Visible = True
                            setMinMaxCurrency()
                            '<\Added By Imran on 19-Dec-2015 FA-1236 - Allow user to Quote without  

                        ElseIf ddlSolveForDRA.SelectedValue = "CONVERSION_STRIKE" Then
                            lblIssuerClientPrice.Text = SetNumberFormat((CDbl(txtDRAPrice.Text) + CDbl(txtUpfrontDRA.Text)).ToString, 2)
                            lblIssuerClientYield.Text = txtUpfrontDRA.Text
                            '<Added By Imran on 19-Dec-2015 FA-1236 - Allow user to Quote without Notional>       
                            ''Dilkhush/Avinash 22Feb2016 added if condition to handle string to double conversion
                            '' lblMinMaxSize.Text = convertNotionalintoShort(CDbl(Split(PriceArray(0).ToString, ",")(1)), "MIN") + " / " + convertNotionalintoShort(CDbl(Split(PriceArray(0).ToString, ",")(2)), "MAX") '+ "(" + Split(PriceArray(0).ToString, ",")(3) + ")"       
                            lblMinMaxSize.Text = convertNotionalintoShort((If(Split(PriceArray(0).ToString, ",")(1).ToString = "", 0, CDbl(Split(PriceArray(0).ToString, ",")(1)))), "MIN") + " / " + convertNotionalintoShort((If(Split(PriceArray(0).ToString, ",")(2).ToString = "", 0, CDbl(Split(PriceArray(0).ToString, ",")(2)))), "MAX") '+ "(" + Split(PriceArray(0).ToString, ",")(3) + ")"       
                            lblMinMaxSize.ToolTip = Split(PriceArray(0).ToString, ",")(1) + " / " + Split(PriceArray(0).ToString, ",")(2) '+ "(" + Split(PriceArray(0).ToString, ",")(3) + ")"       
                            lblMinMaxSize.Visible = True
                            setMinMaxCurrency()
                            '<\Added By Imran on 19-Dec-2015 FA-1236 - Allow user to Quote without Notional> 
                        Else
                            lblIssuerClientPrice.Text = SetNumberFormat((CDbl(txtDRAPrice.Text) + CDbl(txtUpfrontDRA.Text)).ToString, 2)
                            lblIssuerClientYield.Text = txtUpfrontDRA.Text
                            '<Added By Imran on 19-Dec-2015 FA-1236 - Allow user to Quote without Notional>       
                            ''Dilkhush/Avinash 22Feb2016 added if condition to handle string to double conversion
                            ''lblMinMaxSize.Text = convertNotionalintoShort(CDbl(Split(PriceArray(0).ToString, ",")(1)), "MIN") + " / " + convertNotionalintoShort(CDbl(Split(PriceArray(0).ToString, ",")(2)), "MAX") ' + "(" + Split(PriceArray(0).ToString, ",")(3) + ")"       
                            lblMinMaxSize.Text = convertNotionalintoShort((If(Split(PriceArray(0).ToString, ",")(1).ToString = "", 0, CDbl(Split(PriceArray(0).ToString, ",")(1)))), "MIN") + " / " + convertNotionalintoShort((If(Split(PriceArray(0).ToString, ",")(2).ToString = "", 0, CDbl(Split(PriceArray(0).ToString, ",")(2)))), "MAX") '+ "(" + Split(PriceArray(0).ToString, ",")(3) + ")"       
                            lblMinMaxSize.ToolTip = Split(PriceArray(0).ToString, ",")(1) + " / " + Split(PriceArray(0).ToString, ",")(2) '+ "(" + Split(PriceArray(0).ToString, ",")(3) + ")"       
                            lblMinMaxSize.Visible = True
                            setMinMaxCurrency()
                            '<\Added By Imran on 19-Dec-2015 FA-1236 - Allow user to Quote without Notional> 

                        End If


                    Else
                        lblIssuerClientYield.Text = ""
                        lblIssuerClientPrice.Text = ""
                    End If
                End If
                If (PriceArray(1) = "Disable") Then
                    btnPrice.Enabled = False
                    btnPrice.CssClass = "btnDisabled"
                Else
                    btnPrice.Enabled = True
                    btnPrice.CssClass = "btn"
                End If
                Dim waitCtrlId As String = btnPrice.ID.ToUpper.Replace("BTN", "").Replace("PRICE", "") & "wait"
                If btnPrice.Visible Then
                    If (PriceArray(3) = "Disable") Then
                        Restore = "try{document.getElementById('" & waitCtrlId & "').style.visibility = 'hidden';}catch(e){}"
                    Else
                        Restore = "try{document.getElementById('" & waitCtrlId & "').style.visibility = 'visible';}catch(e){}"
                    End If
                End If
                btnPrice.Text = PriceArray(4)
            End If
        Catch ex As Exception
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "Restore", ErrorLevel.High)
            Throw ex
        End Try
    End Function
    '<Added By Imran on 19-Dec-2015 FA-1236 - Allow user to Quote without Notional> +-     
    Private Function setMinMaxCurrency() As String
        Dim ExchangeCcy As String
        
        If lblQuantoYNFlag.Text.ToUpper = "NO" Then
            If chkAddShare1.Checked Then
                ExchangeCcy = lblDRABaseCcy.Text
            ElseIf chkAddShare2.Checked Then
                ExchangeCcy = lblBaseCurrency2.Text
            ElseIf chkAddShare3.Checked Then
                ExchangeCcy = lblBaseCurrency3.Text
            End If
        Else
            ExchangeCcy = ddlNoteCcy.SelectedValue
        End If


        lblRangeCcy.Text = "Min/Max(<B>" + ExchangeCcy + "</B>)"
    End Function
    '<\Added By Imran on 19-Dec-2015 FA-1236 - Allow user to Quote without Notional>       
    '<Added By Imran on 19-Dec-2015 FA-1236 - Allow user to Quote without Notional>       
    Public Function convertNotionalintoShort(ByVal minDoub As Double, ByVal MinOrMax As String) As String
        If (MinOrMax = "MIN") Then
            ''Avinash 28Dec2015 For leng roundup and roundDown       
            Return If(minDoub >= 1000000, FormatNumber(RoundUp(minDoub / 1000000.0, 1), 1) + "M", FormatNumber(RoundUp(minDoub / 1000.0, 1), 1) + "K")
        Else
            ''Avinash 28Dec2015 For leng roundup and roundDown       
            Return If(minDoub >= 1000000, FormatNumber(RoundDown(minDoub / 1000000.0, 1), 1) + "M", FormatNumber(RoundDown(minDoub / 1000.0, 1), 1) + "K")
        End If
    End Function
    '<\Added By Imran on 19-Dec-2015 FA-1236 - Allow user to Quote without Notional> 

    Public Function CheckBestPrice() As Boolean
        Try
            Dim temp As HiddenField
            temp = getBestPrice(JpmHiddenPrice, HsbcHiddenPrice)
            temp = getBestPrice(temp, UbsHiddenPrice)
            temp = getBestPrice(temp, CsHiddenPrice)
            temp = getBestPrice(temp, BNPPHiddenPrice)
            temp = getBestPrice(temp, BAMLHiddenPrice)
            temp = getBestPrice(temp, DBIBHiddenPrice)
            temp = getBestPrice(temp, OCBCHiddenPrice)
            temp = getBestPrice(temp, CITIHiddenPrice)
            temp = getBestPrice(temp, LEONTEQHiddenPrice)
            temp = getBestPrice(temp, COMMERZHiddenPrice)
            If temp.ID Is Nothing Then
            Else
                If (temp.ID.ToUpper.Contains("JPM")) Then
                    TRJPM1.Attributes.Add("class", "lblBestPrice")
                    TRHSBC1.Attributes.Remove("class")
                    TRUBS1.Attributes.Remove("class")
                    TRCS1.Attributes.Remove("class")
                    TRBNPP1.Attributes.Remove("class")
                    TRBAML1.Attributes.Remove("class")
                    TRDBIB1.Attributes.Remove("class")
                    TROCBC1.Attributes.Remove("class")
                    TRCITI1.Attributes.Remove("class")
                    TRLEONTEQ1.Attributes.Remove("class")
                    TRCOMMERZ1.Attributes.Remove("class")
                    ''<Nikhil M : 28Sep16 >
                    If Not chkHSBC.Checked And Not chkUBS.Checked And Not chkCS.Checked And _
                    Not chkBNPP.Checked And Not chkBAML.Checked And Not chkDBIB.Checked And Not chkOCBC.Checked And _
                    Not chkCITI.Checked And Not chkLEONTEQ.Checked And Not chkCOMMERZ.Checked Then
		    hdnBestProvider.Value = "JPM"
                        hdnBestStrike.Value = lblJPMPrice.Text ''<Nikhil M. on 17-Sep-2016:Added > 
                    End If
                ElseIf (temp.ID.ToUpper.Contains("HSBC")) Then
                    TRJPM1.Attributes.Remove("class")
                    TRHSBC1.Attributes.Add("class", "lblBestPrice")
                    TRUBS1.Attributes.Remove("class")
                    TRCS1.Attributes.Remove("class")
                    TRBNPP1.Attributes.Remove("class")
                    TRBAML1.Attributes.Remove("class")
                    TRDBIB1.Attributes.Remove("class")
                    TROCBC1.Attributes.Remove("class")
                    TRCITI1.Attributes.Remove("class")
                    TRLEONTEQ1.Attributes.Remove("class")
                    TRCOMMERZ1.Attributes.Remove("class")
                    ''<Nikhil M : 28Sep16 >
                    If Not chkJPM.Checked And Not chkUBS.Checked And Not chkCS.Checked And _
                   Not chkBNPP.Checked And Not chkBAML.Checked And Not chkDBIB.Checked And Not chkOCBC.Checked And _
                   Not chkCITI.Checked And Not chkLEONTEQ.Checked And Not chkCOMMERZ.Checked Then
		   hdnBestProvider.Value = "HSBC"

                        hdnBestStrike.Value = lblHSBCPrice.Text ''<Nikhil M. on 17-Sep-2016:Added > 
                    End If
                    ElseIf (temp.ID.ToUpper.Contains("UBS")) Then
                        TRJPM1.Attributes.Remove("class")
                        TRHSBC1.Attributes.Remove("class")
                        TRUBS1.Attributes.Add("class", "lblBestPrice")
                        TRCS1.Attributes.Remove("class")
                        TRBNPP1.Attributes.Remove("class")
                        TRBAML1.Attributes.Remove("class")
                        TRDBIB1.Attributes.Remove("class")
                        TROCBC1.Attributes.Remove("class")
                        TRCITI1.Attributes.Remove("class")
                        TRLEONTEQ1.Attributes.Remove("class")
                    TRCOMMERZ1.Attributes.Remove("class")
                    ''<Nikhil M : 28Sep16 >
                    If Not chkJPM.Checked And Not chkHSBC.Checked And Not chkCS.Checked And _
                  Not chkBNPP.Checked And Not chkBAML.Checked And Not chkDBIB.Checked And Not chkOCBC.Checked And _
                  Not chkCITI.Checked And Not chkLEONTEQ.Checked And Not chkCOMMERZ.Checked Then
		                      hdnBestProvider.Value = "UBS"
                        hdnBestStrike.Value = lblUBSPrice.Text ''<Nikhil M. on 17-Sep-2016:Added > 
                    End If
                    ElseIf (temp.ID.ToUpper.Contains("CS")) Then
                        TRJPM1.Attributes.Remove("class")
                        TRHSBC1.Attributes.Remove("class")
                        TRUBS1.Attributes.Remove("class")
                        TRCS1.Attributes.Add("class", "lblBestPrice")
                        TRBNPP1.Attributes.Remove("class")
                        TRBAML1.Attributes.Remove("class")
                        TRDBIB1.Attributes.Remove("class")
                        TROCBC1.Attributes.Remove("class")
                        TRCITI1.Attributes.Remove("class")
                        TRLEONTEQ1.Attributes.Remove("class")
                    TRCOMMERZ1.Attributes.Remove("class")
                    ''<Nikhil M : 28Sep16 >
                    If Not chkJPM.Checked And Not chkHSBC.Checked And Not chkUBS.Checked And _
                  Not chkBNPP.Checked And Not chkBAML.Checked And Not chkDBIB.Checked And Not chkOCBC.Checked And _
                  Not chkCITI.Checked And Not chkLEONTEQ.Checked And Not chkCOMMERZ.Checked Then
hdnBestProvider.Value = "CS"
                        hdnBestStrike.Value = lblCSPrice.Text ''<Nikhil M. on 17-Sep-2016:Added > 
                    End If
                    ElseIf (temp.ID.ToUpper.Contains("BNPP")) Then
                        TRJPM1.Attributes.Remove("class")
                        TRHSBC1.Attributes.Remove("class")
                        TRUBS1.Attributes.Remove("class")
                        TRCS1.Attributes.Remove("class")
                        TRBNPP1.Attributes.Add("class", "lblBestPrice")
                        TRBAML1.Attributes.Remove("class")
                        TRDBIB1.Attributes.Remove("class")
                        TROCBC1.Attributes.Remove("class")
                        TRCITI1.Attributes.Remove("class")
                        TRLEONTEQ1.Attributes.Remove("class")
                    TRCOMMERZ1.Attributes.Remove("class")
                    ''<Nikhil M : 28Sep16 >
                    If Not chkJPM.Checked And Not chkHSBC.Checked And Not chkUBS.Checked And _
                Not chkCS.Checked And Not chkBAML.Checked And Not chkDBIB.Checked And Not chkOCBC.Checked And _
                Not chkCITI.Checked And Not chkLEONTEQ.Checked And Not chkCOMMERZ.Checked Then
hdnBestProvider.Value ="BNPP"
                        hdnBestStrike.Value = lblBNPPPrice.Text ''<Nikhil M. on 17-Sep-2016:Added > 
                    End If
                    ElseIf (temp.ID.ToUpper.Contains("BAML")) Then
                        TRJPM1.Attributes.Remove("class")
                        TRHSBC1.Attributes.Remove("class")
                        TRUBS1.Attributes.Remove("class")
                        TRCS1.Attributes.Remove("class")
                        TRBNPP1.Attributes.Remove("class")
                        TRBAML1.Attributes.Add("class", "lblBestPrice")
                        TRDBIB1.Attributes.Remove("class")
                        TROCBC1.Attributes.Remove("class")
                        TRCITI1.Attributes.Remove("class")
                        TRLEONTEQ1.Attributes.Remove("class")
                    TRCOMMERZ1.Attributes.Remove("class")
                    ''<Nikhil M : 28Sep16 >
                    If Not chkJPM.Checked And Not chkHSBC.Checked And Not chkUBS.Checked And _
               Not chkCS.Checked And Not chkBNPP.Checked And Not chkDBIB.Checked And Not chkOCBC.Checked And _
               Not chkCITI.Checked And Not chkLEONTEQ.Checked And Not chkCOMMERZ.Checked Then
hdnBestProvider.Value = "BAML"
                        hdnBestStrike.Value = lblBAMLPrice.Text ''<Nikhil M. on 17-Sep-2016:Added > 
                    End If
                    ElseIf (temp.ID.ToUpper.Contains("DBIB")) Then ''Comparing with ID
                        TRJPM1.Attributes.Remove("class")
                        TRHSBC1.Attributes.Remove("class")
                        TRUBS1.Attributes.Remove("class")
                        TRCS1.Attributes.Remove("class")
                        TRBNPP1.Attributes.Remove("class")
                        TRBAML1.Attributes.Remove("class")
                        TRDBIB1.Attributes.Add("class", "lblBestPrice")
                        TROCBC1.Attributes.Remove("class")
                        TRCITI1.Attributes.Remove("class")
                        TRLEONTEQ1.Attributes.Remove("class")
                    TRCOMMERZ1.Attributes.Remove("class")
                    ''<Nikhil M : 28Sep16 >
                    If Not chkJPM.Checked And Not chkHSBC.Checked And Not chkUBS.Checked And _
          Not chkCS.Checked And Not chkBNPP.Checked And Not chkBAML.Checked And Not chkOCBC.Checked And _
          Not chkCITI.Checked And Not chkLEONTEQ.Checked And Not chkCOMMERZ.Checked Then
hdnBestProvider.Value = "DBIB"
                        hdnBestStrike.Value = lblDBIBPrice.Text ''<Nikhil M. on 17-Sep-2016:Added > 
                    End If
                    ElseIf (temp.ID.ToUpper.Contains("OCBC")) Then
                        TRJPM1.Attributes.Remove("class")
                        TRHSBC1.Attributes.Remove("class")
                        TRUBS1.Attributes.Remove("class")
                        TRCS1.Attributes.Remove("class")
                        TRBNPP1.Attributes.Remove("class")
                        TRBAML1.Attributes.Remove("class")
                        TRDBIB1.Attributes.Remove("class")
                        TROCBC1.Attributes.Add("class", "lblBestPrice")
                        TRCITI1.Attributes.Remove("class")
                        TRLEONTEQ1.Attributes.Remove("class")
                    TRCOMMERZ1.Attributes.Remove("class")
                    ''<Nikhil M : 28Sep16 >
                    If Not chkJPM.Checked And Not chkHSBC.Checked And Not chkUBS.Checked And _
        Not chkCS.Checked And Not chkBNPP.Checked And Not chkBAML.Checked And Not chkDBIB.Checked And _
        Not chkCITI.Checked And Not chkLEONTEQ.Checked And Not chkCOMMERZ.Checked Then
hdnBestProvider.Value = "OCBC"
                        hdnBestStrike.Value = lblOCBCPrice.Text ''<Nikhil M. on 17-Sep-2016:Added > 
                    End If
                    ElseIf (temp.ID.ToUpper.Contains("CITI")) Then
                        TRJPM1.Attributes.Remove("class")
                        TRHSBC1.Attributes.Remove("class")
                        TRUBS1.Attributes.Remove("class")
                        TRCS1.Attributes.Remove("class")
                        TRBNPP1.Attributes.Remove("class")
                        TRBAML1.Attributes.Remove("class")
                        TRDBIB1.Attributes.Remove("class")
                        TROCBC1.Attributes.Remove("class")
                        TRLEONTEQ1.Attributes.Remove("class")
                        TRCOMMERZ1.Attributes.Remove("class")
                    TRCITI1.Attributes.Add("class", "lblBestPrice")
                    ''<Nikhil M : 28Sep16 >
                    If Not chkJPM.Checked And Not chkHSBC.Checked And Not chkUBS.Checked And _
       Not chkCS.Checked And Not chkBNPP.Checked And Not chkBAML.Checked And Not chkDBIB.Checked And _
       Not chkOCBC.Checked And Not chkLEONTEQ.Checked And Not chkCOMMERZ.Checked Then
hdnBestProvider.Value = "CITI"
                        hdnBestStrike.Value = lblCITIPrice.Text ''<Nikhil M. on 17-Sep-2016:Added > 
                    End If
                    ElseIf (temp.ID.ToUpper.Contains("LEONTEQ")) Then
                        TRJPM1.Attributes.Remove("class")
                        TRHSBC1.Attributes.Remove("class")
                        TRUBS1.Attributes.Remove("class")
                        TRCS1.Attributes.Remove("class")
                        TRBNPP1.Attributes.Remove("class")
                        TRBAML1.Attributes.Remove("class")
                        TRDBIB1.Attributes.Remove("class")
                        TROCBC1.Attributes.Remove("class")
                        TRLEONTEQ1.Attributes.Add("class", "lblBestPrice")
                        TRCITI1.Attributes.Remove("class")
                    TRCOMMERZ1.Attributes.Remove("class")
                    ''<Nikhil M : 28Sep16 >
                    If Not chkJPM.Checked And Not chkHSBC.Checked And Not chkUBS.Checked And _
       Not chkCS.Checked And Not chkBNPP.Checked And Not chkBAML.Checked And Not chkDBIB.Checked And _
       Not chkOCBC.Checked And Not chkCITI.Checked And Not chkCOMMERZ.Checked Then
hdnBestProvider.Value = "LEONTEQ"
                        hdnBestStrike.Value = lblLEONTEQPrice.Text ''<Nikhil M. on 17-Sep-2016:Added > 
                    End If
                    ElseIf (temp.ID.ToUpper.Contains("COMMERZ")) Then
                        TRJPM1.Attributes.Remove("class")
                        TRHSBC1.Attributes.Remove("class")
                        TRUBS1.Attributes.Remove("class")
                        TRCS1.Attributes.Remove("class")
                        TRBNPP1.Attributes.Remove("class")
                        TRBAML1.Attributes.Remove("class")
                        TRDBIB1.Attributes.Remove("class")
                        TROCBC1.Attributes.Remove("class")
                        TRCOMMERZ1.Attributes.Add("class", "lblBestPrice")
                        TRCITI1.Attributes.Remove("class")
                    TRLEONTEQ1.Attributes.Remove("class")
                    ''<Nikhil M : 28Sep16 >
                    If Not chkJPM.Checked And Not chkHSBC.Checked And Not chkUBS.Checked And _
                        Not chkCS.Checked And Not chkBNPP.Checked And Not chkBAML.Checked And Not chkDBIB.Checked And _
                        Not chkOCBC.Checked And Not chkCITI.Checked And Not chkLEONTEQ.Checked Then
hdnBestProvider.Value = "COMMERZ"
                        hdnBestStrike.Value = lblCOMMERZPrice.Text ''<Nikhil M. on 17-Sep-2016:Added > 
                    End If
                    End If
                    GetCommentary_DRA()
                    checkDuplicate(temp)
                End If
        Catch ex As Exception
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                        sSelfPath, "CheckBestPrice", ErrorLevel.High)
            Throw ex
        End Try
    End Function
    '23-Nov-2015 Added by Imran/Mangesh for Email best issuer

    Public Function CheckBestPriceForEmail() As String
        Try
            Dim temp As HiddenField
            temp = getBestPrice(JpmHiddenPrice, HsbcHiddenPrice)
            temp = getBestPrice(temp, UbsHiddenPrice)
            temp = getBestPrice(temp, CsHiddenPrice)
            temp = getBestPrice(temp, BNPPHiddenPrice)
            temp = getBestPrice(temp, BAMLHiddenPrice)
            temp = getBestPrice(temp, DBIBHiddenPrice)
            temp = getBestPrice(temp, OCBCHiddenPrice)
            temp = getBestPrice(temp, CITIHiddenPrice)
            temp = getBestPrice(temp, LEONTEQHiddenPrice)
            temp = getBestPrice(temp, COMMERZHiddenPrice)
            If temp.ID Is Nothing Then
                '   System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "best", "alert('No best Price available')", True)
            Else
                Return temp.ID.Replace("HiddenPrice", "").ToUpper
            End If
        Catch ex As Exception
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                        sSelfPath, "CheckBestPrice", ErrorLevel.High)
            Throw ex
        End Try
    End Function
    'Added by Imran Patel 19-Aug-2015 BOS Req
    Public Function getBestPrice(ByVal hiddenPriceCsv1 As HiddenField, ByVal hiddenPriceCsv2 As HiddenField) As HiddenField
        'ELN
        'Strike        Lower Strike
        'Price         Less price

        'Accu
        'Strike        Lower Strike
        'Upfront       Higher Upfront

        'Decu
        'Strike        Higher Strike
        'Upfront       Higher Upfront

        'DRA/FCN
        'Price         Less Price
        'Coupon        more Coupon
        'Strike        lower Strike

        Try
            Dim PriceArray1() As String
            Dim PriceArray2() As String
            Dim Value1 As Double
            Dim Value2 As Double
            PriceArray1 = Split(hiddenPriceCsv1.Value, ";")
            If (PriceArray1.Length > 1) Then
                '<Changed By Imran on 19-Dec-2015 FA-1236 - Allow user to Quote without Notional>
                If (Split(PriceArray1(0), ",")(0) = "Rejected") Then
                    Value1 = 0.0
                    '<Changed By Imran on 19-Dec-2015 FA-1236 - Allow user to Quote without Notional>	
                ElseIf (Split(PriceArray1(0), ",")(0) = "Timeout") Then
                    Value1 = 0.0
                Else
                    If (Split(PriceArray1(0), ",")(0) <> "") Then
                        Value1 = CDbl(Split(PriceArray1(0), ",")(0).ToString)  '<Changed By Imran on 19-Dec-2015 FA-1236 - Allow user to Quote without Notional>
                    Else
                        Value1 = 0.0
                    End If
                End If
            Else
                Value1 = 0.0
            End If
            PriceArray2 = Split(hiddenPriceCsv2.Value, ";")
            If (PriceArray2.Length > 1) Then
                '<Changed By Imran on 19-Dec-2015 FA-1236 - Allow user to Quote without Notional>
                If (Split(PriceArray2(0), ",")(0) = "Rejected") Then
                    Value2 = 0.0
                    '<Changed By Imran on 19-Dec-2015 FA-1236 - Allow user to Quote without Notional>
                ElseIf (Split(PriceArray2(0), ",")(0) = "Timeout") Then
                    Value2 = 0.0
                Else
                    '<Changed By Imran on 19-Dec-2015 FA-1236 - Allow user to Quote without Notional>
                    If (Split(PriceArray2(0), ",")(0) <> "") Then
                        Value2 = CDbl(Split(PriceArray2(0), ",")(0).ToString) '<Changed By Imran on 19-Dec-2015 FA-1236 - Allow user to Quote without Notional>
                    Else
                        Value2 = 0.0
                    End If
                End If
            Else
                Value2 = 0.0
            End If
           If ddlSolveForDRA.SelectedValue = "PRICE" Or ddlSolveForDRA.SelectedValue = "CONVERSION_STRIKE" Then
                If Value1 = 0.0 And Value2 = 0.0 Then
                    Return New HiddenField()
                End If

                If Value1 = 0.0 And Value2 > 0.0 Then
                    Return hiddenPriceCsv2
                ElseIf Value2 = 0.0 And Value1 > 0.0 Then
                    Return hiddenPriceCsv1
                End If


                If Value2 > Value1 Then
                    Return hiddenPriceCsv1
                Else
                    Return hiddenPriceCsv2
                End If

            Else
                If Value1 = 0.0 And Value2 = 0.0 Then
                    Return New HiddenField()
                End If

                If Value1 = 0.0 And Value2 > 0.0 Then
                    Return hiddenPriceCsv2
                ElseIf Value2 = 0.0 And Value1 > 0.0 Then
                    Return hiddenPriceCsv1
                End If

                If Value2 > Value1 Then
                    Return hiddenPriceCsv2
                Else
                    Return hiddenPriceCsv1
                End If
            End If
        Catch ex As Exception
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                        sSelfPath, "getBestPrice", ErrorLevel.High)
            Throw ex
        End Try

    End Function
    Public Function checkDuplicate(ByVal bestPriceCSV As HiddenField) As String
        Try
            Dim PriceArray1() As String
            Dim Value1 As Double
            PriceArray1 = Split(bestPriceCSV.Value, ";")
            Value1 = CDbl(Split(PriceArray1(0), ",")(0).ToString) '<Changed By Imran on 19-Dec-2015 FA-1236 - Allow user to Quote without Notional>
            compareDuplicate(Value1, JpmHiddenPrice)
            compareDuplicate(Value1, HsbcHiddenPrice)
            compareDuplicate(Value1, UbsHiddenPrice)
            compareDuplicate(Value1, CsHiddenPrice)
            compareDuplicate(Value1, BNPPHiddenPrice)
            compareDuplicate(Value1, BAMLHiddenPrice)
            compareDuplicate(Value1, DBIBHiddenPrice)
            compareDuplicate(Value1, OCBCHiddenPrice)
            compareDuplicate(Value1, CITIHiddenPrice)
            compareDuplicate(Value1, LEONTEQHiddenPrice)
            compareDuplicate(Value1, COMMERZHiddenPrice)
        Catch ex As Exception
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                        sSelfPath, "checkDuplicate", ErrorLevel.High)
            Throw ex
        End Try
    End Function
    Public Function compareDuplicate(ByVal bestValue As Double, ByVal PriceCSV As HiddenField) As String
        Try
            Dim PriceArray2() As String
            Dim Value2 As Double
            PriceArray2 = Split(PriceCSV.Value, ";")
            If (PriceArray2.Length > 1) Then
                '<Changed By Imran on 19-Dec-2015 FA-1236 - Allow user to Quote without Notional>
                If (Split(PriceArray2(0), ",")(0) = "Rejected") Then
                    Value2 = 0.0
                    '<Changed By Imran on 19-Dec-2015 FA-1236 - Allow user to Quote without Notional>
                ElseIf (Split(PriceArray2(0), ",")(0) = "Timeout") Then
                    Value2 = 0.0
                Else
                    '<Changed By Imran on 19-Dec-2015 FA-1236 - Allow user to Quote without Notional>
                    If (Split(PriceArray2(0), ",")(0) <> "") Then
                        Value2 = CDbl(Split(PriceArray2(0), ",")(0).ToString) '<Changed By Imran on 19-Dec-2015 FA-1236 - Allow user to Quote without Notional>
                    Else
                        Value2 = 0.0
                    End If
                End If
            Else
                Value2 = 0.0
            End If
            If bestValue = Value2 Then
                setDuplicate(PriceCSV)
            End If
        Catch ex As Exception
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                        sSelfPath, "compareDuplicate", ErrorLevel.High)
            Throw ex
        End Try
    End Function
    Public Function setDuplicate(ByVal temp As HiddenField) As Boolean
        If (temp.ID.ToUpper.Contains("JPM")) Then
            TRJPM1.Attributes.Add("class", "lblBestPrice")
        ElseIf (temp.ID.ToUpper.Contains("HSBC")) Then
            TRHSBC1.Attributes.Add("class", "lblBestPrice")
        ElseIf (temp.ID.ToUpper.Contains("UBS")) Then
            TRUBS1.Attributes.Add("class", "lblBestPrice")
        ElseIf (temp.ID.ToUpper.Contains("CS")) Then
            TRCS1.Attributes.Add("class", "lblBestPrice")
        ElseIf (temp.ID.ToUpper.Contains("BNPP")) Then
            TRBNPP1.Attributes.Add("class", "lblBestPrice")
        ElseIf (temp.ID.ToUpper.Contains("BAML")) Then
            TRBAML1.Attributes.Add("class", "lblBestPrice")
        ElseIf (temp.ID.ToUpper.Contains("DBIB")) Then
            TRDBIB1.Attributes.Add("class", "lblBestPrice")
        ElseIf (temp.ID.ToUpper.Contains("OCBC")) Then
            TROCBC1.Attributes.Add("class", "lblBestPrice")
        ElseIf (temp.ID.ToUpper.Contains("CITI")) Then
            TRCITI1.Attributes.Add("class", "lblBestPrice")
        ElseIf (temp.ID.ToUpper.Contains("LEONTEQ")) Then
            TRLEONTEQ1.Attributes.Add("class", "lblBestPrice")
        ElseIf (temp.ID.ToUpper.Contains("COMMERZ")) Then
            TRCOMMERZ1.Attributes.Add("class", "lblBestPrice")
        End If
    End Function

    Public Sub getRange()
        Dim Product_name As String
        Dim ExchangeCcy As String
        Dim dtRange As DataTable
        Try
            dtRange = New DataTable("RangeLimit")
            Product_name = ddlDRAType.SelectedValue
            If Product_name.ToUpper = "FCN" Then
                Product_name = "Fixed Coupon Note"
            Else
                Product_name = "Range Accrual"
            End If
            If lblQuantoYNFlag.Text.ToUpper = "NO" Then
                If chkAddShare1.Checked Then
                    ExchangeCcy = lblDRABaseCcy.Text
                ElseIf chkAddShare2.Checked Then
                    ExchangeCcy = lblBaseCurrency2.Text
                ElseIf chkAddShare3.Checked Then
                    ExchangeCcy = lblBaseCurrency3.Text
                End If
            Else
                ExchangeCcy = ddlNoteCcy.SelectedValue
            End If
            lblRangeCcy.Text = "Min/Max(<B>" + ExchangeCcy + "</B>)"
            Select Case objELNRFQ.Get_EQCPRD_Limit(Product_name, ExchangeCcy, dtRange)
                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                    If dtRange.Rows.Count > 0 Then
                        Dim limit As String
                        Dim minDoub As Double
                        Dim maxDoub As Double
                        getLimit("JPM", dtRange, minDoub, maxDoub, ExchangeCcy, Product_name)
                        lblJPMlimit.Text = If(minDoub >= 1000000, FormatNumber((minDoub / 1000000), 2).ToString.Replace(".00", "") + "M/", FormatNumber((minDoub / 1000), 2).ToString.Replace(".00", "") + "K/") _
                                                + If(maxDoub >= 1000000, FormatNumber((maxDoub / 1000000), 2).ToString.Replace(".00", "") + "M", FormatNumber((maxDoub / 1000), 2).ToString.Replace(".00", "") + "K")
                        lblJPMlimit.ToolTip = FormatNumber(minDoub.ToString, 2).Replace(".00", "") + "/" + FormatNumber(maxDoub.ToString, 2).Replace(".00", "")
                        getLimit("UBS", dtRange, minDoub, maxDoub, ExchangeCcy, Product_name)
                        lblUBSlimit.Text = If(minDoub >= 1000000, FormatNumber((minDoub / 1000000), 2).ToString.Replace(".00", "") + "M/", FormatNumber((minDoub / 1000), 2).ToString.Replace(".00", "") + "K/") _
                                                + If(maxDoub >= 1000000, FormatNumber((maxDoub / 1000000), 2).ToString.Replace(".00", "") + "M", FormatNumber((maxDoub / 1000), 2).ToString.Replace(".00", "") + "K")
                        lblUBSlimit.ToolTip = FormatNumber(minDoub.ToString, 2).Replace(".00", "") + "/" + FormatNumber(maxDoub.ToString, 2).Replace(".00", "")
                        getLimit("CS", dtRange, minDoub, maxDoub, ExchangeCcy, Product_name)
                        lblCSLimit.Text = If(minDoub >= 1000000, FormatNumber((minDoub / 1000000), 2).ToString.Replace(".00", "") + "M/", FormatNumber((minDoub / 1000), 2).ToString.Replace(".00", "") + "K/") _
                                                + If(maxDoub >= 1000000, FormatNumber((maxDoub / 1000000), 2).ToString.Replace(".00", "") + "M", FormatNumber((maxDoub / 1000), 2).ToString.Replace(".00", "") + "K")
                        lblCSLimit.ToolTip = FormatNumber(minDoub.ToString, 2).Replace(".00", "") + "/" + FormatNumber(maxDoub.ToString, 2).Replace(".00", "")
                        getLimit("BNPP", dtRange, minDoub, maxDoub, ExchangeCcy, Product_name)
                        lblBNPPlimit.Text = If(minDoub >= 1000000, FormatNumber((minDoub / 1000000), 2).ToString.Replace(".00", "") + "M/", FormatNumber((minDoub / 1000), 2).ToString.Replace(".00", "") + "K/") _
                                                + If(maxDoub >= 1000000, FormatNumber((maxDoub / 1000000), 2).ToString.Replace(".00", "") + "M", FormatNumber((maxDoub / 1000), 2).ToString.Replace(".00", "") + "K")
                        lblBNPPlimit.ToolTip = FormatNumber(minDoub.ToString, 2).Replace(".00", "") + "/" + FormatNumber(maxDoub.ToString, 2).Replace(".00", "")
                        getLimit("HSBC", dtRange, minDoub, maxDoub, ExchangeCcy, Product_name)
                        lblHSBClimit.Text = If(minDoub >= 1000000, FormatNumber((minDoub / 1000000), 2).ToString.Replace(".00", "") + "M/", FormatNumber((minDoub / 1000), 2).ToString.Replace(".00", "") + "K/") _
                                                + If(maxDoub >= 1000000, FormatNumber((maxDoub / 1000000), 2).ToString.Replace(".00", "") + "M", FormatNumber((maxDoub / 1000), 2).ToString.Replace(".00", "") + "K")
                        lblHSBClimit.ToolTip = FormatNumber(minDoub.ToString, 2).Replace(".00", "") + "/" + FormatNumber(maxDoub.ToString, 2).Replace(".00", "")
                        getLimit("BAML", dtRange, minDoub, maxDoub, ExchangeCcy, Product_name)
                        lblBAMLlimit.Text = If(minDoub >= 1000000, FormatNumber((minDoub / 1000000), 2).ToString.Replace(".00", "") + "M/", FormatNumber((minDoub / 1000), 2).ToString.Replace(".00", "") + "K/") _
                                                + If(maxDoub >= 1000000, FormatNumber((maxDoub / 1000000), 2).ToString.Replace(".00", "") + "M", FormatNumber((maxDoub / 1000), 2).ToString.Replace(".00", "") + "K")
                        lblBAMLlimit.ToolTip = FormatNumber(minDoub.ToString, 2).Replace(".00", "") + "/" + FormatNumber(maxDoub.ToString, 2).Replace(".00", "")

                        getLimit("DB", dtRange, minDoub, maxDoub, ExchangeCcy, Product_name)
                        lblDBIBlimit.Text = If(minDoub >= 1000000, FormatNumber((minDoub / 1000000), 2).ToString.Replace(".00", "") + "M/", FormatNumber((minDoub / 1000), 2).ToString.Replace(".00", "") + "K/") _
                                                + If(maxDoub >= 1000000, FormatNumber((maxDoub / 1000000), 2).ToString.Replace(".00", "") + "M", FormatNumber((maxDoub / 1000), 2).ToString.Replace(".00", "") + "K")
                        lblDBIBlimit.ToolTip = FormatNumber(minDoub.ToString, 2).Replace(".00", "") + "/" + FormatNumber(maxDoub.ToString, 2).Replace(".00", "")

                        getLimit("OCBC", dtRange, minDoub, maxDoub, ExchangeCcy, Product_name)
                        lblOCBClimit.Text = If(minDoub >= 1000000, FormatNumber((minDoub / 1000000), 2).ToString.Replace(".00", "") + "M/", FormatNumber((minDoub / 1000), 2).ToString.Replace(".00", "") + "K/") _
                                                + If(maxDoub >= 1000000, FormatNumber((maxDoub / 1000000), 2).ToString.Replace(".00", "") + "M", FormatNumber((maxDoub / 1000), 2).ToString.Replace(".00", "") + "K")
                        lblOCBClimit.ToolTip = FormatNumber(minDoub.ToString, 2).Replace(".00", "") + "/" + FormatNumber(maxDoub.ToString, 2).Replace(".00", "")

                        getLimit("CITI", dtRange, minDoub, maxDoub, ExchangeCcy, Product_name)
                        lblCITIlimit.Text = If(minDoub >= 1000000, FormatNumber((minDoub / 1000000), 2).ToString.Replace(".00", "") + "M/", FormatNumber((minDoub / 1000), 2).ToString.Replace(".00", "") + "K/") _
                                                + If(maxDoub >= 1000000, FormatNumber((maxDoub / 1000000), 2).ToString.Replace(".00", "") + "M", FormatNumber((maxDoub / 1000), 2).ToString.Replace(".00", "") + "K")
                        lblCITIlimit.ToolTip = FormatNumber(minDoub.ToString, 2).Replace(".00", "") + "/" + FormatNumber(maxDoub.ToString, 2).Replace(".00", "")

                        getLimit("LEONTEQ", dtRange, minDoub, maxDoub, ExchangeCcy, Product_name)
                        lblLEONTEQlimit.Text = If(minDoub >= 1000000, FormatNumber((minDoub / 1000000), 2).ToString.Replace(".00", "") + "M/", FormatNumber((minDoub / 1000), 2).ToString.Replace(".00", "") + "K/") _
                                                + If(maxDoub >= 1000000, FormatNumber((maxDoub / 1000000), 2).ToString.Replace(".00", "") + "M", FormatNumber((maxDoub / 1000), 2).ToString.Replace(".00", "") + "K")
                        lblLEONTEQlimit.ToolTip = FormatNumber(minDoub.ToString, 2).Replace(".00", "") + "/" + FormatNumber(maxDoub.ToString, 2).Replace(".00", "")

                        getLimit("COMMERZ", dtRange, minDoub, maxDoub, ExchangeCcy, Product_name)
                        lblCOMMERZlimit.Text = If(minDoub >= 1000000, FormatNumber((minDoub / 1000000), 2).ToString.Replace(".00", "") + "M/", FormatNumber((minDoub / 1000), 2).ToString.Replace(".00", "") + "K/") _
                                                + If(maxDoub >= 1000000, FormatNumber((maxDoub / 1000000), 2).ToString.Replace(".00", "") + "M", FormatNumber((maxDoub / 1000), 2).ToString.Replace(".00", "") + "K")
                        lblCOMMERZlimit.ToolTip = FormatNumber(minDoub.ToString, 2).Replace(".00", "") + "/" + FormatNumber(maxDoub.ToString, 2).Replace(".00", "")

                    Else
                        lblJPMlimit.Text = "N.A."
                        lblBNPPlimit.Text = "N.A."
                        lblUBSlimit.Text = "N.A."
                        lblBNPPlimit.Text = "N.A."
                        lblHSBClimit.Text = "N.A."
                        lblCSLimit.Text = "N.A."
                        lblBAMLlimit.Text = "N.A."

                        lblDBIBlimit.Text = "N.A."
                        lblOCBClimit.Text = "N.A."
                        lblCITIlimit.Text = "N.A."
                        lblLEONTEQlimit.Text = "N.A."
                        lblCOMMERZlimit.Text = "N.A."

                        lblJPMlimit.ToolTip = ""
                        lblBNPPlimit.ToolTip = ""
                        lblUBSlimit.ToolTip = ""
                        lblBNPPlimit.ToolTip = ""
                        lblHSBClimit.ToolTip = ""
                        lblCSLimit.ToolTip = ""
                        lblBAMLlimit.ToolTip = ""

                        lblDBIBlimit.ToolTip = ""
                        lblOCBClimit.ToolTip = ""
                        lblCITIlimit.ToolTip = ""
                        lblLEONTEQlimit.ToolTip = ""
                        lblCOMMERZlimit.ToolTip = ""
                    End If
                Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                    lblJPMlimit.Text = "N.A."
                    lblBNPPlimit.Text = "N.A."
                    lblUBSlimit.Text = "N.A."
                    lblBNPPlimit.Text = "N.A."
                    lblHSBClimit.Text = "N.A."
                    lblCSLimit.Text = "N.A."
                    lblBAMLlimit.Text = "N.A."

                    lblDBIBlimit.Text = "N.A."
                    lblOCBClimit.Text = "N.A."
                    lblCITIlimit.Text = "N.A."
                    lblLEONTEQlimit.Text = "N.A."
                    lblCOMMERZlimit.Text = "N.A."

                    lblJPMlimit.ToolTip = ""
                    lblBNPPlimit.ToolTip = ""
                    lblUBSlimit.ToolTip = ""
                    lblBNPPlimit.ToolTip = ""
                    lblHSBClimit.ToolTip = ""
                    lblCSLimit.ToolTip = ""
                    lblBAMLlimit.ToolTip = ""

                    lblDBIBlimit.ToolTip = ""
                    lblOCBClimit.ToolTip = ""
                    lblCITIlimit.ToolTip = ""
                    lblLEONTEQlimit.ToolTip = ""
                    lblCOMMERZlimit.ToolTip = ""
                Case Web_ELNRFQ.Database_Transaction_Response.Db_Error
                    lblJPMlimit.Text = "N.A."
                    lblBNPPlimit.Text = "N.A."
                    lblUBSlimit.Text = "N.A."
                    lblBNPPlimit.Text = "N.A."
                    lblHSBClimit.Text = "N.A."
                    lblCSLimit.Text = "N.A."
                    lblBAMLlimit.Text = "N.A."

                    lblDBIBlimit.Text = "N.A."
                    lblOCBClimit.Text = "N.A."
                    lblCITIlimit.Text = "N.A."
                    lblLEONTEQlimit.Text = "N.A."
                    lblCOMMERZlimit.Text = "N.A."

                    lblJPMlimit.ToolTip = ""
                    lblBNPPlimit.ToolTip = ""
                    lblUBSlimit.ToolTip = ""
                    lblBNPPlimit.ToolTip = ""
                    lblHSBClimit.ToolTip = ""
                    lblCSLimit.ToolTip = ""
                    lblBAMLlimit.ToolTip = ""

                    lblDBIBlimit.ToolTip = ""
                    lblOCBClimit.ToolTip = ""
                    lblCITIlimit.ToolTip = ""
                    lblLEONTEQlimit.ToolTip = ""
                    lblCOMMERZlimit.ToolTip = ""
            End Select

            clearShareData()
        Catch ex As Exception
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "getRange", ErrorLevel.High)
            Throw ex
        End Try
    End Sub

    Public Sub clearShareData()
        ''btnMail.Visible = True
        If chkAddShare1.Checked Then
	 ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
            'If ddlShareDRA.SelectedItem Is Nothing OrElse ddlShareDRA.SelectedValue = "" Then
            If ddlShareDRA.SelectedValue Is Nothing OrElse ddlShareDRA.SelectedValue = "" Then
                lblDRABaseCcy.Text = ""
                lblExchangeDRAFCN.Text = ""
                lblPRRVal.Text = ""
                lblAdvisoryFlagVal.Text = "" ''Changed by Chitra on 13-Oct-16
                lblJPMlimit.Text = "N.A."
                lblBNPPlimit.Text = "N.A."
                lblUBSlimit.Text = "N.A."
                lblBNPPlimit.Text = "N.A."
                lblHSBClimit.Text = "N.A."
                lblCSLimit.Text = "N.A."
                lblBAMLlimit.Text = "N.A."

                lblDBIBlimit.Text = "N.A."
                lblOCBClimit.Text = "N.A."
                lblCITIlimit.Text = "N.A."
                lblLEONTEQlimit.Text = "N.A."
                lblCOMMERZlimit.Text = "N.A."

                lblJPMlimit.ToolTip = ""
                lblBNPPlimit.ToolTip = ""
                lblUBSlimit.ToolTip = ""
                lblBNPPlimit.ToolTip = ""
                lblHSBClimit.ToolTip = ""
                lblCSLimit.ToolTip = ""
                lblBAMLlimit.ToolTip = ""

                lblDBIBlimit.ToolTip = ""
                lblOCBClimit.ToolTip = ""
                lblCITIlimit.ToolTip = ""
                lblLEONTEQlimit.ToolTip = ""
                lblCOMMERZlimit.ToolTip = ""

                lblRangeCcy.Text = "Min/Max()"
                txtBasketShares.Text = ""
                If chkAddShare2.Checked Then
                    If ddlShareDRA2.SelectedValue <> "" Then
                        txtBasketShares.Text = ddlShareDRA2.SelectedValue
                    End If
                End If
                If chkAddShare3.Checked Then
		 ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                    If ddlShareDRA3.SelectedValue <> "" Then
                        If txtBasketShares.Text <> "" Then
                            txtBasketShares.Text += "," + ddlShareDRA3.SelectedValue
                        Else
                            txtBasketShares.Text += ddlShareDRA3.SelectedValue
                        End If
                    End If
                End If
                pnlReprice.Update()
                upnlCommentry.Update()
            End If
        End If
        If chkAddShare2.Checked Then
	 ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
            'If ddlShareDRA2.SelectedItem Is Nothing OrElse ddlShareDRA2.SelectedValue = "" Then
            If ddlShareDRA2.SelectedValue Is Nothing OrElse ddlShareDRA2.SelectedValue = "" Then
                lblBaseCurrency2.Text = ""
                lblExchangeDRAFCN2.Text = ""
                lblPRRVal2.Text = ""
                lblAdvisoryFlagVal2.Text = ""    'Added by Chitralekha on 29-sep-16
                lblJPMlimit.Text = "N.A."
                lblBNPPlimit.Text = "N.A."
                lblUBSlimit.Text = "N.A."
                lblBNPPlimit.Text = "N.A."
                lblHSBClimit.Text = "N.A."
                lblCSLimit.Text = "N.A."
                lblBAMLlimit.Text = "N.A."
                lblDBIBlimit.Text = "N.A."
                lblOCBClimit.Text = "N.A."
                lblCITIlimit.Text = "N.A."
                lblLEONTEQlimit.Text = "N.A."
                lblCOMMERZlimit.Text = "N.A."


                lblJPMlimit.ToolTip = ""
                lblBNPPlimit.ToolTip = ""
                lblUBSlimit.ToolTip = ""
                lblBNPPlimit.ToolTip = ""
                lblHSBClimit.ToolTip = ""
                lblCSLimit.ToolTip = ""
                lblBAMLlimit.ToolTip = ""

                lblDBIBlimit.ToolTip = ""
                lblOCBClimit.ToolTip = ""
                lblCITIlimit.ToolTip = ""
                lblLEONTEQlimit.ToolTip = ""
                lblCOMMERZlimit.ToolTip = ""
                lblRangeCcy.Text = "Min/Max()"
                txtBasketShares.Text = ""
                If chkAddShare1.Checked Then
		 ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                    If ddlShareDRA.SelectedValue <> "" Then
                        txtBasketShares.Text = ddlShareDRA.SelectedValue
                    End If
                End If
                If chkAddShare3.Checked Then
                    If ddlShareDRA3.SelectedValue <> "" Then
                        If txtBasketShares.Text <> "" Then
                            txtBasketShares.Text += "," + ddlShareDRA3.SelectedValue
                        Else
                            txtBasketShares.Text += ddlShareDRA3.SelectedValue
                        End If
                    End If
                End If
                pnlReprice.Update()
                upnlCommentry.Update()
            End If
        End If
        If chkAddShare3.Checked Then
	 ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
            'If ddlShareDRA3.SelectedItem Is Nothing OrElse ddlShareDRA3.SelectedValue = "" Then
            If ddlShareDRA3.SelectedValue Is Nothing OrElse ddlShareDRA3.SelectedValue = "" Then
                lblBaseCurrency3.Text = ""
                lblExchangeDRAFCN3.Text = ""
                lblPRRVal3.Text = ""
                lblAdvisoryFlagVal3.Text = ""       'Added by Chitralekha on 29-sep-16
                lblJPMlimit.Text = "N.A."
                lblBNPPlimit.Text = "N.A."
                lblUBSlimit.Text = "N.A."
                lblBNPPlimit.Text = "N.A."
                lblHSBClimit.Text = "N.A."
                lblCSLimit.Text = "N.A."
                lblBAMLlimit.Text = "N.A."

                lblDBIBlimit.Text = "N.A."
                lblOCBClimit.Text = "N.A."
                lblCITIlimit.Text = "N.A."
                lblLEONTEQlimit.Text = "N.A."
                lblCOMMERZlimit.Text = "N.A."

                lblJPMlimit.ToolTip = ""
                lblBNPPlimit.ToolTip = ""
                lblUBSlimit.ToolTip = ""
                lblBNPPlimit.ToolTip = ""
                lblHSBClimit.ToolTip = ""
                lblCSLimit.ToolTip = ""
                        lblBAMLlimit.ToolTip = ""

                lblDBIBlimit.ToolTip = ""
                lblOCBClimit.ToolTip = ""
                lblCITIlimit.ToolTip = ""
                lblLEONTEQlimit.ToolTip = ""
                lblCOMMERZlimit.ToolTip = ""
                lblRangeCcy.Text = "Min/Max()"
                txtBasketShares.Text = ""
                If chkAddShare1.Checked Then
		 ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                    If ddlShareDRA.SelectedValue <> "" Then
                        txtBasketShares.Text = ddlShareDRA.SelectedValue
                    End If
                End If
                If chkAddShare2.Checked Then
                    If ddlShareDRA2.SelectedValue <> "" Then
                        If txtBasketShares.Text <> "" Then
                            txtBasketShares.Text += "," + ddlShareDRA2.SelectedValue
                        Else
                            txtBasketShares.Text += ddlShareDRA2.SelectedValue
                        End If


                    End If

                End If
                pnlReprice.Update()
                upnlCommentry.Update()
            End If
        End If
        chkQuantoFlag_DRA()
        If txtBasketShares.Text.Trim = "" Then
            ''btnMail.Visible = False
            lblComentry1.Text = ""
        End If
         
    End Sub
    Private Sub getLimit(ByVal sPPCode As String, ByVal dt As DataTable, ByRef dblMinLim As Double, ByRef dblMaxLim As Double, ByVal sCcy As String, ByVal sPrd As String)
        Try
            dblMinLim = 0
            dblMaxLim = 0
            Dim result() As DataRow = dt.Select("EQCPPL_PPCode = '" + sPPCode + "'")
            If result.Length < 1 Then
                dblMinLim = 0
                dblMaxLim = 0
                LogException(LoginInfoGV.Login_Info.LoginId, "No limit setup found for " + sPPCode + " for " + sCcy + " for " + sPrd, LogType.FnqInfo, Nothing, _
                                         sSelfPath, "getLimit", ErrorLevel.Medium)
            Else
                Dim lmtRow As DataRow = result(0)
                dblMinLim = CDbl(If(IsDBNull(lmtRow("EQCPPL_Minm")), 0, CDbl(lmtRow("EQCPPL_Minm"))))
                dblMaxLim = CDbl(If(IsDBNull(lmtRow("EQCPPL_Maxm")), 0, CDbl(lmtRow("EQCPPL_Maxm"))))
            End If
        Catch ex As Exception
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "getLimit", ErrorLevel.High)
        End Try
    End Sub


    Private Sub rblShareData_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles rblShareData.SelectedIndexChanged
        If rblShareData.SelectedValue = "SHAREDATA" Then
            rowGraphData.Visible = False
            rowShareData.Visible = True
            Fill_All_Charts()
        ElseIf rblShareData.SelectedValue = "GRAPHDATA" Then
            rowGraphData.Visible = True
            rowShareData.Visible = False
        Else
            rowGraphData.Visible = False
            rowShareData.Visible = False
            If ((objReadConfig.ReadConfig(dsConfig, "EQC_Show_ELN_Calculator", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper = "YES" Or _
                     objReadConfig.ReadConfig(dsConfig, "EQC_Show_ELN_Calculator", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper = "Y") And tabContainer.ActiveTabIndex = 0) Then
            ElseIf ((objReadConfig.ReadConfig(dsConfig, "EQC_Show_AccDec_Calculator", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper = "YES" Or _
                    objReadConfig.ReadConfig(dsConfig, "EQC_Show_AccDec_Calculator", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper = "Y") And (tabContainer.ActiveTabIndex = 3 Or tabContainer.ActiveTabIndex = 4)) Then
                ''Dilkhush 02Feb2016 Changed tab index 2 to 3 & 4
            Else
            End If
        End If
        hideShowRBLShareData()
    End Sub
    Private Sub hideShowRBLShareData()
        Dim count As Integer = 0
        'Dim ELNCalc As String = objReadConfig.ReadConfig(dsConfig, "EQC_Show_ELN_Calculator", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper
        'Dim AccDecCalc As String = objReadConfig.ReadConfig(dsConfig, "EQC_Show_AccDec_Calculator", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper
        Dim tabIndex As Integer = tabContainer.ActiveTabIndex

        Select Case objReadConfig.ReadConfig(dsConfig, "EQC_ShowTRShareInfo", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
            Case "Y", "YES"
                count = count + 1
            Case "N", "NO"
                rblShareData.Items.FindByValue("SHAREDATA").Attributes.Add("style", "display:none")
                rowShareData.Visible = False
        End Select
        Select Case objReadConfig.ReadConfig(dsConfig, "EQC_DisplayGraph", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper
            Case "Y", "YES"
                count = count + 1
            Case "N", "NO"
                rblShareData.Items.FindByValue("GRAPHDATA").Attributes.Add("style", "display:none")
                rowGraphData.Visible = False
        End Select
        'If tabIndex = 0 Then
        '    If (ELNCalc = "YES" Or ELNCalc = "Y") Then
        '        count = count + 1
        '        rblShareData.Items.FindByValue("calc").Attributes.Add("style", "display:''")
        '    Else
        '        rblShareData.Items.FindByValue("calc").Attributes.Add("style", "display:none")
        '    End If
        'End If

        'If tabIndex = 2 Then
        '    If (AccDecCalc = "YES" Or AccDecCalc = "Y") Then
        '        count = count + 1
        '        rblShareData.Items.FindByValue("calc").Attributes.Add("style", "display:''")
        '    Else
        '        rblShareData.Items.FindByValue("calc").Attributes.Add("style", "display:none")
        '    End If

        'End If

        If tabIndex = 1 Then
            rblShareData.Items.FindByValue("calc").Attributes.Add("style", "display:none")
        End If

        If count >= 2 Then
            rblShareData.Visible = True
            tdrblShareData.Visible = True '<Added By Mohit Lalwnai on 1-Apr-2016 FA-1384>
        Else
            rblShareData.Visible = False
            tdrblShareData.Visible = False '<Added By Mohit Lalwnai on 1-Apr-2016 FA-1384>
        End If
    End Sub


 
    Private Sub setDRAFCNPoolData()
        Dim dtPoolDetails As DataTable
        Dim sPoolID As String
        Dim strNewTenorELN As String = String.Empty
        Dim strNewTenorELNType As String = String.Empty
        Dim strNewDurationDRA As String = String.Empty
        Dim strNewDurationTypeDRA As String = String.Empty
        Try
           

            dtPoolDetails = New DataTable("PoolDetails")
            If Not IsNothing(Request.QueryString("PoolID")) Then
                sPoolID = Request.QueryString("PoolID")
                If sPoolID.Trim <> "" Then
                    Select Case objELNRFQ.GetDRAFCNPoolRecordData(sPoolID, dtPoolDetails)
                        Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful


                            Dim strDRASolveFor As String = dtPoolDetails.Rows(0).Item("SolveFor").ToString

                            If strDRASolveFor = "Strike(%)" Then
                                ddlSolveForDRA.SelectedValue = "CONVERSION_STRIKE"
                                txtStrikeDRAFCN.Text = ""
                                txtStrikeDRAFCN.Enabled = False
                                txtDRAPrice.Enabled = True
                                txtCoupon.Enabled = True
                                lblSolveForType.Text = "Strike / Acc (%)"
                            ElseIf strDRASolveFor = "Coupon(%)" Then
                                ddlSolveForDRA.SelectedValue = "COUPON"
                                txtCoupon.Text = ""
                                txtCoupon.Enabled = False
                                txtDRAPrice.Enabled = True
                                txtStrikeDRAFCN.Enabled = True
                                lblSolveForType.Text = "Coupon (%)"
                            Else
                                ddlSolveForDRA.SelectedValue = "PRICE"
                                txtDRAPrice.Text = ""
                                txtDRAPrice.Enabled = False
                                txtCoupon.Enabled = True
                                txtStrikeDRAFCN.Enabled = True
                                lblSolveForType.Text = "IB Price (%)"
                            End If

                            Dim strUpfront As String = dtPoolDetails.Rows(0).Item("Upfront").ToString.Trim
                            If strUpfront.Trim <> "" Or strUpfront.Trim <> "&nbsp;" Then
                                ''txtUpfrontDRA.Text = FormatNumber(CDbl(strUpfront), 2)
                                ''<Rushikesh D. on 15-May16 EQBOSDEV-360>
                                Select Case objReadConfig.ReadConfig(dsConfig, "EQC_Follow_AtPar_Lock", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper
                                    Case "Y", "YES"
                                        If ddlSolveForDRA.SelectedValue.ToUpper = "PRICE" Then
                                            txtUpfrontDRA.Enabled = False
                                            txtUpfrontDRA.Text = "0.00"
                                        Else
                                            txtUpfrontDRA.Text = FormatNumber((CDbl(strUpfront) / 100).ToString, 2)
                                        End If
                                    Case "N", "NO"
                                        txtUpfrontDRA.Text = FormatNumber((CDbl(strUpfront) / 100).ToString, 2)
                                End Select
                                ''</Rushikesh D. on 15-May16 EQBOSDEV-360>

                            End If

                            Dim strDRAStrike As String = dtPoolDetails.Rows(0).Item("StrikePercentage").ToString
                            If strDRAStrike = "" Then
                                txtStrikeDRAFCN.Text = "0.00"
                            Else
                                txtStrikeDRAFCN.Text = strDRAStrike
                            End If

                            Dim strDRAPrice As String = dtPoolDetails.Rows(0).Item("OfferPrice").ToString

                            If strDRAPrice = "" Then
                                txtDRAPrice.Text = "0.00"
                            Else
                                txtDRAPrice.Text = strDRAPrice
                            End If

                            Dim strDRACoupon As String = dtPoolDetails.Rows(0).Item("CouponPercentage").ToString

                            If strDRACoupon = "" Then
                                txtCoupon.Text = "0.00"
                            Else
                                txtCoupon.Text = strDRACoupon
                            End If

                            ddlExchangeDRAFCN.Items.Clear()
                            ddlExchangeDRAFCN.DataSource = Nothing
                            ddlExchangeDRAFCN.DataBind()
                            ddlExchangeDRAFCN.Enabled = False
                            ddlShareDRA.Enabled = False
                            'Commented by Rushikesh for Trelrtik search.
                            'txtShareSearchDRA.Enabled = False
                            ddlShareDRA.Items.Clear()
                            'ddlShareDRA.DataSource = Nothing
                            'ddlShareDRA.DataBind()
                            'Commented by Rushikesh for Trelrtik search.
                            'txtShareSearchDRA.Text = ""
                            ddlShareDRA.Text = ""
                            lblDRABaseCcy.Text = ""

                            chkAddShare2.Checked = False
                            ddlExchangeDRAFCN2.Items.Clear()
                            ddlExchangeDRAFCN2.DataSource = Nothing
                            ddlExchangeDRAFCN2.DataBind()
                            ddlExchangeDRAFCN2.Enabled = False
                            ddlShareDRA2.Enabled = False
                            'Commented by RushikeshD. on 18-Aug-15 for telerik search
                            'txtShareSearchDRA2.Enabled = False
                            ddlShareDRA2.Items.Clear()
                            'ddlShareDRA2.DataSource = Nothing
                            'ddlShareDRA2.DataBind()
                            'Commented by RushikeshD. on 18-Aug-15 for telerik search
                            'txtShareSearchDRA2.Text = ""
                            lblBaseCurrency2.Text = ""

                            chkAddShare3.Checked = False
                            ddlExchangeDRAFCN3.Items.Clear()
                            ddlExchangeDRAFCN3.DataSource = Nothing
                            ddlExchangeDRAFCN3.DataBind()
                            ddlExchangeDRAFCN3.Enabled = False
                            ddlShareDRA3.Enabled = False
                            '<Commented by RushikeshD. on 18-Aug-15 for telerik search>
                            'txtShareSearchDRA3.Enabled = False
                            ddlShareDRA3.Items.Clear()
                            'ddlShareDRA3.DataSource = Nothing
                            'ddlShareDRA3.DataBind()
                            '<Commented by RushikeshD. on 18-Aug-15 for telerik search>
                            'txtShareSearchDRA3.Text = ""
                            ddlShareDRA3.Text = ""
                            '</Commented by RushikeshD. on 18-Aug-15 for telerik search>
                            lblBaseCurrency3.Text = ""

                            Dim strDRAExchange As String = dtPoolDetails.Rows(0).Item("Exchange").ToString
                            Dim strDRAShare As String = dtPoolDetails.Rows(0).Item("Share").ToString

                            Dim arrExchanges As String()
                            Dim arrShares As String()
                            Dim dtBaseCCY As DataTable
                            arrExchanges = strDRAExchange.Split(CChar(","))
                            arrShares = strDRAShare.Split(CChar(","))

                            If arrExchanges.Length > 0 Then
                                chkAddShare1.Checked = True
                                chkAddShare1_CheckedChanged(Nothing, Nothing)
                                ddlExchangeDRAFCN.Enabled = True
                                ddlShareDRA.Enabled = True
                                FillDRAddl_exchange(ddlExchangeDRAFCN)
                                setShare1(arrExchanges(0), arrShares(0)) ''Mohit/Dilkhush 14Jan2016 added code
                                Select Case objReadConfig.ReadConfig(dsConfig, "EQC_Allow_ALL_AsExchangeOption", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                                    Case "Y", "YES"
                                        ''Mohit/Dilkhush 14Jan2016 commented code
                                        'ddlShareDRA.SelectedIndex = ddlShareDRA.Items.IndexOf(ddlShareDRA.Items.FindItemByValue(arrShares(0)))
                                        'ddlShareDRA.Text = ddlShareDRA.Text
                                        lblExchangeDRAFCN.Text = setExchangeByShare(ddlShareDRA)
                                    Case "N", "NO"
                                        Try
                                            ddlExchangeDRAFCN.SelectedValue = arrExchanges(0)
                                        Catch ex As Exception
                                            lblerror.Text = "Exchange missing from setup."
                                        End Try
                                        'fill_DRA_FCN_Share()  ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
 ''Mohit/Dilkhush 14Jan2016 commented code
                                        'ddlShareDRA.SelectedIndex = ddlShareDRA.Items.IndexOf(ddlShareDRA.Items.FindItemByValue(arrShares(0)))
                                        'ddlShareDRA.Text = ddlShareDRA.Text
                                        lblExchangeDRAFCN.Text = setExchangeByShare(ddlShareDRA)
                                End Select
                                If ddlShareDRA.SelectedItem IsNot Nothing Then
                                    ddlShareDRA.Text = ddlShareDRA.SelectedItem.Text
                                End If
                                dtBaseCCY = New DataTable("BaseCcy")
				 ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                                Select Case objELNRFQ.DB_GetBASECCY(ddlShareDRA.SelectedValue, dtBaseCCY) 
                                    Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                                        lblDRABaseCcy.Text = dtBaseCCY.Rows(0)(0).ToString
                                    Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                                    Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                                End Select
                                If arrExchanges.Length >= 2 Then
                                    chkAddShare2.Checked = True
                                    chkAddShare2_CheckedChanged(Nothing, Nothing)
                                    ddlExchangeDRAFCN2.Enabled = True
                                    ddlShareDRA2.Enabled = True
                                    FillDRAddl_exchange(ddlExchangeDRAFCN2)
                                    setShare2(arrExchanges(1), arrShares(1)) ''Mohit/Dilkhush 14Jan2016 added code
                                    Select Case objReadConfig.ReadConfig(dsConfig, "EQC_Allow_ALL_AsExchangeOption", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                                        Case "Y", "YES"
                                            ''Mohit/Dilkhush 14Jan2016 commented code
                                            ''ddlShareDRA2.SelectedIndex = ddlShareDRA2.Items.IndexOf(ddlShareDRA2.Items.FindItemByValue(arrShares(1)))
                                            ''ddlShareDRA2.Text = ddlShareDRA2.Text
                                            lblExchangeDRAFCN2.Text = setExchangeByShare(ddlShareDRA2)
                                        Case "N", "NO"
                                            Try
                                                ddlExchangeDRAFCN2.SelectedValue = arrExchanges(1)
                                            Catch ex As Exception
                                                lblerror.Text = "Exchange missing from setup."
                                            End Try
                                            'fill_DRA_FCN_Share2()  ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                                             ''Mohit/Dilkhush 14Jan2016 commented code
					    ''ddlShareDRA2.SelectedIndex = ddlShareDRA2.Items.IndexOf(ddlShareDRA2.Items.FindItemByValue(arrShares(1)))
                                            ''ddlShareDRA2.Text = ddlShareDRA2.Text
                                            lblExchangeDRAFCN2.Text = setExchangeByShare(ddlShareDRA2)
                                    End Select
                                    If ddlShareDRA2.SelectedItem IsNot Nothing Then
                                        ddlShareDRA2.Text = ddlShareDRA2.SelectedItem.Text
                                    End If
                                    dtBaseCCY = New DataTable("BaseCcy")
				     ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                                    Select Case objELNRFQ.DB_GetBASECCY(ddlShareDRA2.SelectedValue, dtBaseCCY)
                                        Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                                            lblBaseCurrency2.Text = dtBaseCCY.Rows(0)(0).ToString
                                        Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                                        Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                                    End Select
                                End If

                                If arrExchanges.Length = 3 Then
                                    chkAddShare3.Checked = True
                                    ddlExchangeDRAFCN3.Enabled = True
                                    ddlShareDRA3.Enabled = True
                                    FillDRAddl_exchange(ddlExchangeDRAFCN3)
                                    setShare3(arrExchanges(2), arrShares(2)) ''Mohit/Dilkhush 14Jan2016 added code
                                    Select Case objReadConfig.ReadConfig(dsConfig, "EQC_Allow_ALL_AsExchangeOption", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                                        Case "Y", "YES"
                                            'fill_DRA_FCN_Share3()  ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                                             ''Mohit/Dilkhush 14Jan2016 commented code
					    ''ddlShareDRA3.SelectedIndex = ddlShareDRA3.Items.IndexOf(ddlShareDRA3.Items.FindItemByValue(arrShares(2)))
                                            ''ddlShareDRA3.Text = ddlShareDRA3.Text
                                            lblExchangeDRAFCN3.Text = setExchangeByShare(ddlShareDRA3)
                                        Case "N", "NO"
                                            Try
                                                ddlExchangeDRAFCN3.SelectedValue = arrExchanges(2)
                                            Catch ex As Exception
                                                lblerror.Text = "Exchange missing from setup."
                                            End Try
                                            'fill_DRA_FCN_Share3()  ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                                             ''Mohit/Dilkhush 14Jan2016 commented code
					    ''ddlShareDRA3.SelectedIndex = ddlShareDRA3.Items.IndexOf(ddlShareDRA3.Items.FindItemByValue(arrShares(2)))
                                            ''ddlShareDRA3.Text = ddlShareDRA3.Text
                                            lblExchangeDRAFCN3.Text = setExchangeByShare(ddlShareDRA3)
                                            dtBaseCCY = New DataTable("BaseCcy")
                                    End Select
                                    If ddlShareDRA3.SelectedItem IsNot Nothing Then
                                        ddlShareDRA3.Text = ddlShareDRA3.SelectedItem.Text
                                    End If
 ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                                    Select Case objELNRFQ.DB_GetBASECCY(ddlShareDRA3.SelectedValue, dtBaseCCY)
                                        Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                                            lblBaseCurrency3.Text = dtBaseCCY.Rows(0)(0).ToString
                                        Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                                        Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                                    End Select
                                End If
                            End If
                            ddlNoteCcy.SelectedIndex = ddlNoteCcy.FindItemByText(dtPoolDetails.Rows(0).Item("Currency").ToString).Index
                            Prepare_DRAFCN_Basket()

                            'Dim strDRATenor As String = grdDRAFCN.Items(e.Item.ItemIndex).Cells(grdDRAFCNEnum.Tenor).Text
                            'If CInt(strDRATenor) Mod 12 = 0 Then
                            '    txtTenorDRA.Text = CStr(CInt(strDRATenor) / 12)
                            '    'ddlTenorTypeELN.SelectedItem.Text = "Year"
                            '    ddlTenorTypeDRA.SelectedIndex = 1
                            'Else
                            '    txtTenorDRA.Text = strDRATenor
                            '    ' ddlTenorTypeELN.SelectedItem.Text = "Month"
                            '    ddlTenorTypeDRA.SelectedIndex = 0
                            'End If


                            ''---------------------------------------Rushikesh chng----------------
                            ''ddlTenorTypeDRA.SelectedIndex = ddlTenorTypeDRA.Items.IndexOf(ddlTenorTypeDRA.Items.FindByText(dtPoolDetails.Rows(0).Item("TenorType").ToString))
                            ddlTenorTypeDRA.SelectedValue = dtPoolDetails.Rows(0).Item("TenorType").ToString.Trim
                            txtTenorDRA.Text = dtPoolDetails.Rows(0).Item("Tenor").ToString


                            Dim strKILevel As String = dtPoolDetails.Rows(0).Item("KI_Level").ToString
                            If strKILevel = "&nbsp;" Then
                                txtKILevel.Text = ""
                            Else
                                txtKILevel.Text = strKILevel
                            End If

                            Dim strDRAKIType As String = dtPoolDetails.Rows(0).Item("KI_Type").ToString
                            If strDRAKIType.ToUpper = "NONE" Then
                                chkKI.Checked = False
                                txtKILevel.Enabled = False
                                ddlKIType.Enabled = False

                                ' Added By Sarun 23-Apr-2014
                                ddlKIType.BackColor = Color.LightGray
                                txtKILevel.BackColor = Color.LightGray
                            Else
                                chkKI.Checked = True
                                ''ddlKIType.SelectedIndex = ddlKIType.Items.IndexOf(ddlKIType.Items.FindByText(dtPoolDetails.Rows(0).Item("KI_Type").ToString))
                                ddlKIType.SelectedValue = strDRAKIType.ToUpper
                                txtKILevel.Enabled = True
                                ddlKIType.Enabled = True

                                ' Added By Sarun 23-Apr-2014
                                ddlKIType.BackColor = Color.White
                                txtKILevel.BackColor = Color.White
                            End If

                            Dim strDRAGUPeriod As String = dtPoolDetails.Rows(0).Item("GuDuration").ToString
                            For i = 0 To strDRAGUPeriod.Length - 1
                                If IsNumeric(strDRAGUPeriod.Substring(i, 1)) = True Then
                                    strNewDurationDRA = strNewDurationDRA + strDRAGUPeriod.Substring(i, 1)
                                End If
                            Next

                            txtGuPeriod.Text = strNewDurationDRA

                            If dtPoolDetails.Rows(0).Item("KI_ObservationFrequency").ToString.Trim.ToUpper = "MONTHLY" Then
                                txtGuPeriod.Text = txtGuPeriod.Text
                            ElseIf dtPoolDetails.Rows(0).Item("KI_ObservationFrequency").ToString.Trim.ToUpper = "BIMONTHLY" Then
                                txtGuPeriod.Text = CStr(Val(txtGuPeriod.Text) / 2)
                            ElseIf dtPoolDetails.Rows(0).Item("KI_ObservationFrequency").ToString.Trim.ToUpper = "QUARTERLY" Then
                                txtGuPeriod.Text = CStr(Val(txtGuPeriod.Text) / 3)
                            ElseIf dtPoolDetails.Rows(0).Item("KI_ObservationFrequency").ToString.Trim.ToUpper = "SEMIANNUALLY" Then
                                txtGuPeriod.Text = CStr(Val(txtGuPeriod.Text) / 6)
                            ElseIf dtPoolDetails.Rows(0).Item("KI_ObservationFrequency").ToString.Trim.ToUpper = "ANNUALLY" Then
                                txtGuPeriod.Text = CStr(Val(txtGuPeriod.Text) / 12)
                            End If






                            For i = 0 To strDRAGUPeriod.Length - 1
                                If IsNumeric(strDRAGUPeriod.Substring(i, 1)) = False Then
                                    strNewDurationTypeDRA = (strNewDurationTypeDRA + strDRAGUPeriod.Substring(i, 1)).Trim
                                End If
                            Next

                            Dim strDRAKIfreq As String = dtPoolDetails.Rows(0).Item("KI_ObservationFrequency").ToString
                            ''<Rutuja 18March>
                            ddlKIFrequency.SelectedValue = strDRAKIfreq.ToUpper
                            lblKOLevelSameAsCoupon.Text = strDRAKIfreq   ''25April added to set KO type

                            Dim strDRAKoType As String = dtPoolDetails.Rows(0).Item("KO_Type").ToString
                            ddlKOType.SelectedValue = strDRAKoType.ToUpper
                            'ddlKOType.SelectedItem.Text = strDRAKoType

                            Dim strKOLevel As String = dtPoolDetails.Rows(0).Item("KO_Level").ToString

                            If strKOLevel = "&nbsp;" Then

                            Else
                                txtKOLevel.Text = strKOLevel
                                txtKOLevel.Enabled = True
                                ddlKOType.Enabled = True
                                chkKO.Checked = True
                                txtKOLevel.BackColor = Color.White
                            End If

                            Dim strDRAQty As String = SetNumberFormat(dtPoolDetails.Rows(0).Item("Notional").ToString, 0) '' EQBOSDEV-228 Added by chaitali removing decimal
                            txtOrderDRAFCN.Text = strDRAQty

                            Dim strDRAType As String = dtPoolDetails.Rows(0).Item("DRAType").ToString
                            If strDRAType.ToUpper.Trim = "DRA" Then
                                txtGuPeriod.Enabled = True
                                lblGUPeriod.Visible = True
                                txtGuPeriod.Visible = True
                                lblGUType.Visible = True
                                ddlDRAType.SelectedValue = strDRAType.ToUpper.Trim
                                tabContainer.ActiveTabIndex = prdTab.DRA '<Added by RushikeshD. on 29-Jan-2015 Jira:EQBOSDEV-233 >
                                lblAcc.Visible = True
                                lblAccSameasstrike.Visible = True

                            Else
                                txtGuPeriod.Enabled = False
                                lblGUPeriod.Visible = False
                                txtGuPeriod.Visible = False
                                lblGUType.Visible = False
                                ddlDRAType.SelectedValue = strDRAType.ToUpper.Trim
                                tabContainer.ActiveTabIndex = prdTab.FCN '<Added by RushikeshD. on 29-Jan-2015 Jira:EQBOSDEV-233 >
                                lblAcc.Visible = False
                                lblAccSameasstrike.Visible = False

                            End If

                            ''ddlNoteCcy.SelectedIndex = ddlNoteCcy.Items.IndexOf(ddlNoteCcy.Items.FindByText(dtPoolDetails.Rows(0).Item("Currency").ToString))
                            ddlNoteCcy.SelectedValue = dtPoolDetails.Rows(0).Item("Currency").ToString
                            lblNoteCcy.Text = "(" & dtPoolDetails.Rows(0).Item("Currency").ToString & ")"

                            ''grdDRAFCN.SelectedItemStyle.BackColor = Color.FromArgb(56, 99, 148) ''Color.FromArgb(140, 174, 212)


                            ''----------------------------------------end---------------------

                            'panelDRAFCN.Enabled = False
                            'upnl2.Update()

                            'tblRFQGridHolder.Disabled = True
                            'upnlGrid.Update()
                            resetControlsForPool(False)
                            btnSolveAll.Enabled = False


                       
                            '<AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
                            'getRange()
                            '</AvinashG. on 05-Jan-2016: Update Solo pricer as main pricer>
                            Prepare_DRAFCN_Basket()
 			    EnableDisableForOrderPoolData(dtPoolDetails.Rows(0).Item("PPCODE").ToString.Trim.ToUpper)
                            Session.Add("DRARePricePPName", dtPoolDetails.Rows(0).Item("PPCODE").ToString.Trim.ToUpper)
                            pnlReprice.Update()
                            GetCommentary_DRA()
                            ''<Start |  Nikhil M. on 04-Oct-2016:Added To Set PPR on Order SUmmary>
                            Dim tempCount As Integer
                            Dim tempsPRR As String
                            Dim tempFlag As String
                            For tempCount = 0 To arrShares.Length - 1
                                tempsPRR = ""
                                tempFlag = ""
                                getPRR(arrShares(tempCount), tempsPRR)
                                getFlag(arrShares(tempCount), tempFlag)
                                If tempCount = 0 Then
                                    lblPRRVal.Text = tempsPRR
                                    lblAdvisoryFlagVal.Text = If(tempFlag = "Y", "Yes", "No")
                                    lblPRRVal.ForeColor = If(tempFlag = "Y", Color.Green, Color.Red)
                                    lblAdvisoryFlagVal.ForeColor = If(tempFlag = "Y", Color.Green, Color.Red)
                                ElseIf tempCount = 1 Then
                                    lblPRRVal2.Text = tempsPRR
                                    lblAdvisoryFlagVal2.Text = If(tempFlag = "Y", "Yes", "No")
                                    lblPRRVal2.ForeColor = If(tempFlag = "Y", Color.Green, Color.Red)
                                    lblAdvisoryFlagVal2.ForeColor = If(tempFlag = "Y", Color.Green, Color.Red)
                                ElseIf tempCount = 2 Then
                                    lblPRRVal3.Text = tempsPRR
                                    lblAdvisoryFlagVal3.Text = If(tempFlag = "Y", "Yes", "No")
                                    lblPRRVal3.ForeColor = If(tempFlag = "Y", Color.Green, Color.Red)
                                    lblAdvisoryFlagVal3.ForeColor = If(tempFlag = "Y", Color.Green, Color.Red)
                                End If
                            Next
                            ''<End |  Nikhil M. on 04-Oct-2016:Added To Set PPR on Order SUmmary>

                            '<RiddhiS. on 09-Nov-2016: To set selected booking branch>
                            If dtPoolDetails.Rows(0)(enumPoolDetails.BookingCenter).ToString.Trim = "RETAIL" Then
                                For iBKC As Integer = 0 To ddlBookingBranchPopUpValue.Items.Count - 1
                                    If ddlBookingBranchPopUpValue.Items.Item(iBKC).Value.ToUpper.Contains("RETAIL") Then
                                        ddlBookingBranchPopUpValue.SelectedIndex = iBKC
                                        Exit For
                                    End If
                                Next
                            Else
                                For iBKC As Integer = 0 To ddlBookingBranchPopUpValue.Items.Count - 1
                                    If Not ddlBookingBranchPopUpValue.Items.Item(iBKC).Value.ToUpper.Contains("RETAIL") Then
                                        ddlBookingBranchPopUpValue.SelectedIndex = iBKC
                                        Exit For
                                    End If
                                Next
                            End If

                            ddlBookingBranchPopUpValue.Enabled = False
                            '</RiddhiS.>


                        Case Else
                            lblerror.Text = "Error occured while getting Pool Data."
                    End Select

                Else
                    lblerror.Text = "Received invalid Pool ID."
                End If
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub setRedirectedDRAFCNPoolData()
        Dim dtROrderDetails As DataTable
        Dim sROrderID As String
        Dim strNewTenorELN As String = String.Empty
        Dim strNewTenorELNType As String = String.Empty
        Dim strNewDurationDRA As String = String.Empty
        Dim strNewDurationTypeDRA As String = String.Empty
        Dim strNewTenorDRA As String = String.Empty
        Dim strNewTenorDRAType As String = String.Empty
        Try
            

            dtROrderDetails = New DataTable("OrderDetails")
            If Not IsNothing(Request.QueryString("RedirectedOrderId")) Then
                sROrderID = Request.QueryString("RedirectedOrderId")
                If sROrderID.Trim <> "" Then
                    Select Case objELNRFQ.Get_DRAFCN_Redirected_Order_Details(sROrderID, dtROrderDetails)
                        Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful


                            Dim strDRASolveFor As String = dtROrderDetails.Rows(0).Item("SolveFor").ToString

                            If strDRASolveFor = "Strike(%)" Then
                                ddlSolveForDRA.SelectedValue = "CONVERSION_STRIKE"
                                txtStrikeDRAFCN.Text = ""
                                txtStrikeDRAFCN.Enabled = False
                                txtDRAPrice.Enabled = True
                                txtCoupon.Enabled = True
                                lblSolveForType.Text = "Strike / Acc (%)"
                            ElseIf strDRASolveFor = "Coupon(%)" Then
                                ddlSolveForDRA.SelectedValue = "COUPON"
                                txtCoupon.Text = ""
                                txtCoupon.Enabled = False
                                txtDRAPrice.Enabled = True
                                txtStrikeDRAFCN.Enabled = True
                                lblSolveForType.Text = "Coupon (%)"
                            Else
                                ddlSolveForDRA.SelectedValue = "PRICE"
                                txtDRAPrice.Text = ""
                                txtDRAPrice.Enabled = False
                                txtCoupon.Enabled = True
                                txtStrikeDRAFCN.Enabled = True
                                lblSolveForType.Text = "IB Price (%)"
                            End If



                            Dim strDRAStrike As String = dtROrderDetails.Rows(0).Item("StrikePercentage").ToString
                            If strDRAStrike = "" Then
                                txtStrikeDRAFCN.Text = "0.00"
                            Else
                                txtStrikeDRAFCN.Text = strDRAStrike
                            End If

                            Dim strDRAPrice As String = dtROrderDetails.Rows(0).Item("Price").ToString

                            If strDRAPrice = "" Then
                                txtDRAPrice.Text = "0.00"
                            Else
                                txtDRAPrice.Text = strDRAPrice
                            End If

                            Dim strDRACoupon As String = dtROrderDetails.Rows(0).Item("CouponPercentage").ToString

                            If strDRACoupon = "" Then
                                txtCoupon.Text = "0.00"
                            Else
                                txtCoupon.Text = strDRACoupon
                            End If

                            Dim strUpfront As String = dtROrderDetails.Rows(0).Item("Upfront").ToString
                            If strUpfront.Trim <> "" And strUpfront.Trim <> "&nbsp;" Then
                                ''<Rushikesh D. on 15-May16 EQBOSDEV-360>
                                ''txtUpfrontDRA.Text = FormatNumber((CDbl(strUpfront) / 100).ToString, 2)
                                Select Case objReadConfig.ReadConfig(dsConfig, "EQC_Follow_AtPar_Lock", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper
                                    Case "Y", "YES"
                                        If ddlSolveForDRA.SelectedValue.ToUpper = "PRICE" Then
                                            txtUpfrontDRA.Enabled = False
                                            txtUpfrontDRA.Text = "0.00"
                                        Else
                                            txtUpfrontDRA.Text = FormatNumber((CDbl(strUpfront) / 100).ToString, 2)
                                        End If
                                    Case "N", "NO"
                                        txtUpfrontDRA.Text = FormatNumber((CDbl(strUpfront) / 100).ToString, 2)
                                End Select
                                ''</Rushikesh D. on 15-May16 EQBOSDEV-360>
                            End If



                            ddlExchangeDRAFCN.Items.Clear()
                            ddlExchangeDRAFCN.DataSource = Nothing
                            ddlExchangeDRAFCN.DataBind()
                            ddlExchangeDRAFCN.Enabled = False
                            ddlShareDRA.Enabled = False
                          
                            ddlShareDRA.Items.Clear()
                            'ddlShareDRA.DataSource = Nothing
                            'ddlShareDRA.DataBind()
                           
                            ddlShareDRA.Text = ""
                            lblDRABaseCcy.Text = ""

                            chkAddShare2.Checked = False
                            ddlExchangeDRAFCN2.Items.Clear()
                            ddlExchangeDRAFCN2.DataSource = Nothing
                            ddlExchangeDRAFCN2.DataBind()
                            ddlExchangeDRAFCN2.Enabled = False
                            ddlShareDRA2.Enabled = False
                           
                            ddlShareDRA2.Items.Clear()
                            'ddlShareDRA2.DataSource = Nothing
                            'ddlShareDRA2.DataBind()
                            
                            lblBaseCurrency2.Text = ""

                            chkAddShare3.Checked = False
                            ddlExchangeDRAFCN3.Items.Clear()
                            ddlExchangeDRAFCN3.DataSource = Nothing
                            ddlExchangeDRAFCN3.DataBind()
                            ddlExchangeDRAFCN3.Enabled = False
                            ddlShareDRA3.Enabled = False
                            
                            ddlShareDRA3.Items.Clear()
                            'ddlShareDRA3.DataSource = Nothing
                            'ddlShareDRA3.DataBind()
                           
                            ddlShareDRA3.Text = ""

                            lblBaseCurrency3.Text = ""

                            Dim strDRAExchange As String = dtROrderDetails.Rows(0).Item("Exchange").ToString
                            Dim strDRAShare As String = dtROrderDetails.Rows(0).Item("Underlying").ToString

                            Dim arrExchanges As String()
                            Dim arrShares As String()
                            Dim dtBaseCCY As DataTable
                            arrExchanges = strDRAExchange.Split(CChar(","))
                            arrShares = strDRAShare.Split(CChar(","))

                            If arrExchanges.Length > 0 Then
                                chkAddShare1.Checked = True
                                chkAddShare1_CheckedChanged(Nothing, Nothing)
                                ddlExchangeDRAFCN.Enabled = True
                                ddlShareDRA.Enabled = True
                                FillDRAddl_exchange(ddlExchangeDRAFCN)
                                setShare1(arrExchanges(0), arrShares(0)) ''Mohit/Dilkhush 14Jan2016 added code
                                Select Case objReadConfig.ReadConfig(dsConfig, "EQC_Allow_ALL_AsExchangeOption", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                                    Case "Y", "YES"
                                        ''Mohit/Dilkhush 14Jan2016 commented code
                                        ''ddlShareDRA.SelectedIndex = ddlShareDRA.Items.IndexOf(ddlShareDRA.Items.FindItemByValue(arrShares(0)))
                                        ''ddlShareDRA.Text = ddlShareDRA.Text
                                        lblExchangeDRAFCN.Text = setExchangeByShare(ddlShareDRA)
                                    Case "N", "NO"
                                        Try
                                            ddlExchangeDRAFCN.SelectedValue = arrExchanges(0)
                                        Catch ex As Exception
                                            lblerror.Text = "Exchange missing from setup."
                                        End Try
                                        ''fill_DRA_FCN_Share()  ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
 ''Mohit/Dilkhush 14Jan2016 commented code
                                        ''ddlShareDRA.SelectedIndex = ddlShareDRA.Items.IndexOf(ddlShareDRA.Items.FindItemByValue(arrShares(0)))
                                        ''ddlShareDRA.Text = ddlShareDRA.Text
                                        lblExchangeDRAFCN.Text = setExchangeByShare(ddlShareDRA)
                                End Select
                                If ddlShareDRA.SelectedItem IsNot Nothing Then
                                    ddlShareDRA.Text = ddlShareDRA.SelectedItem.Text
                                End If

                                dtBaseCCY = New DataTable("CashCurrency")
				 ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                                Select Case objELNRFQ.DB_GetBASECCY(ddlShareDRA.SelectedValue, dtBaseCCY)
                                    Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                                        lblDRABaseCcy.Text = dtBaseCCY.Rows(0)(0).ToString
                                    Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                                    Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                                End Select
                                If arrExchanges.Length >= 2 Then
                                    chkAddShare2.Checked = True
                                    chkAddShare2_CheckedChanged(Nothing, Nothing)
                                    ddlExchangeDRAFCN2.Enabled = True
                                    ddlShareDRA2.Enabled = True
                                    FillDRAddl_exchange(ddlExchangeDRAFCN2)
                                    setShare2(arrExchanges(1), arrShares(1)) ''Mohit/Dilkhush 14Jan2016 added code
                                    Select Case objReadConfig.ReadConfig(dsConfig, "EQC_Allow_ALL_AsExchangeOption", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                                        Case "Y", "YES"
                                            ''Mohit/Dilkhush 14Jan2016 commented code
                                            ''ddlShareDRA2.SelectedIndex = ddlShareDRA2.Items.IndexOf(ddlShareDRA2.Items.FindItemByValue(arrShares(1)))
                                            ''ddlShareDRA2.Text = ddlShareDRA2.Text
                                            lblExchangeDRAFCN2.Text = setExchangeByShare(ddlShareDRA2)
                                        Case "N", "NO"
                                            Try
                                                ddlExchangeDRAFCN2.SelectedValue = arrExchanges(1)
                                            Catch ex As Exception
                                                lblerror.Text = "Exchange missing from setup."
                                            End Try
                                            'fill_DRA_FCN_Share2()  ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                                             ''Mohit/Dilkhush 14Jan2016 commented code
					    ''ddlShareDRA2.SelectedIndex = ddlShareDRA2.Items.IndexOf(ddlShareDRA2.Items.FindItemByValue(arrShares(1)))
                                            ''ddlShareDRA2.Text = ddlShareDRA2.Text
                                            lblExchangeDRAFCN2.Text = setExchangeByShare(ddlShareDRA2)
                                    End Select
                                    If ddlShareDRA2.SelectedItem IsNot Nothing Then
                                        ddlShareDRA2.Text = ddlShareDRA2.SelectedItem.Text
                                    End If
                                    dtBaseCCY = New DataTable("CashCurrency")
				     ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                                    Select Case objELNRFQ.DB_GetBASECCY(ddlShareDRA2.SelectedValue, dtBaseCCY)
                                        Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                                            lblBaseCurrency2.Text = dtBaseCCY.Rows(0)(0).ToString
                                        Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                                        Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                                    End Select
                                End If

                                If arrExchanges.Length = 3 Then
                                    chkAddShare3.Checked = True
                                    ddlExchangeDRAFCN3.Enabled = True
                                    ddlShareDRA3.Enabled = True
                                    FillDRAddl_exchange(ddlExchangeDRAFCN3)
                                    setShare3(arrExchanges(2), arrShares(2)) ''Mohit/Dilkhush 14Jan2016 added code
                                    Select Case objReadConfig.ReadConfig(dsConfig, "EQC_Allow_ALL_AsExchangeOption", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "YES").Trim.ToUpper
                                        Case "Y", "YES"
                                            'fill_DRA_FCN_Share3()  ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                                             ''Mohit/Dilkhush 14Jan2016 commented code
					    ''ddlShareDRA3.SelectedIndex = ddlShareDRA3.Items.IndexOf(ddlShareDRA3.Items.FindItemByValue(arrShares(2)))
                                            ''ddlShareDRA3.Text = ddlShareDRA3.Text
                                            lblExchangeDRAFCN3.Text = setExchangeByShare(ddlShareDRA3)
                                        Case "N", "NO"
                                            Try
                                                ddlExchangeDRAFCN3.SelectedValue = arrExchanges(2)
                                            Catch ex As Exception
                                                lblerror.Text = "Exchange missing from setup."
                                            End Try
                                            'fill_DRA_FCN_Share3()  ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                                             ''Mohit/Dilkhush 14Jan2016 commented code
					    ''ddlShareDRA3.SelectedIndex = ddlShareDRA3.Items.IndexOf(ddlShareDRA3.Items.FindItemByValue(arrShares(2)))
                                            ''ddlShareDRA3.Text = ddlShareDRA3.Text
                                            lblExchangeDRAFCN3.Text = setExchangeByShare(ddlShareDRA3)
                                            dtBaseCCY = New DataTable("CashCurrency")
                                    End Select
                                    If ddlShareDRA3.SelectedItem IsNot Nothing Then
                                        ddlShareDRA3.Text = ddlShareDRA3.SelectedItem.Text
                                    End If
 ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                                    Select Case objELNRFQ.DB_GetBASECCY(ddlShareDRA3.SelectedValue, dtBaseCCY)
                                        Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                                            lblBaseCurrency3.Text = dtBaseCCY.Rows(0)(0).ToString
                                        Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                                        Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                                    End Select
                                End If
                            End If

                            ddlNoteCcy.SelectedValue = dtROrderDetails.Rows(0).Item("CashCurrency").ToString
                            Prepare_DRAFCN_Basket()



                            Dim strTenor As String = dtROrderDetails.Rows(0).Item("Tenor").ToString
                            txtTenorDRA.Text = strTenor
                            ddlTenorTypeDRA.SelectedValue = dtROrderDetails.Rows(0).Item("TenorType").ToString.ToUpper


                            Dim strKILevel As String = dtROrderDetails.Rows(0).Item("KI_Level").ToString
                            If strKILevel = "&nbsp;" Then
                                txtKILevel.Text = ""
                            Else
                                txtKILevel.Text = strKILevel
                            End If

                            Dim strDRAKIType As String = dtROrderDetails.Rows(0).Item("KI_Type").ToString
                            If strDRAKIType.ToUpper = "NONE" Then
                                chkKI.Checked = False
                                txtKILevel.Enabled = False
                                ddlKIType.Enabled = False


                                ddlKIType.BackColor = Color.LightGray
                                txtKILevel.BackColor = Color.LightGray
                            Else
                                chkKI.Checked = True

                                ddlKIType.SelectedValue = strDRAKIType.ToUpper
                                txtKILevel.Enabled = True
                                ddlKIType.Enabled = True


                                ddlKIType.BackColor = Color.White
                                txtKILevel.BackColor = Color.White
                            End If

                            Dim strDRAGUPeriod As String = dtROrderDetails.Rows(0).Item("GuaranteedDuration").ToString
                            For i = 0 To strDRAGUPeriod.Length - 1
                                If IsNumeric(strDRAGUPeriod.Substring(i, 1)) = True Then
                                    strNewDurationDRA = strNewDurationDRA + strDRAGUPeriod.Substring(i, 1)
                                End If
                            Next

                            txtGuPeriod.Text = strNewDurationDRA

                            If dtROrderDetails.Rows(0).Item("KI_ObservationFrequency").ToString.Trim.ToUpper = "MONTHLY" Then
                                txtGuPeriod.Text = txtGuPeriod.Text
                            ElseIf dtROrderDetails.Rows(0).Item("KI_ObservationFrequency").ToString.Trim.ToUpper = "BIMONTHLY" Then
                                txtGuPeriod.Text = CStr(Val(txtGuPeriod.Text) / 2)
                            ElseIf dtROrderDetails.Rows(0).Item("KI_ObservationFrequency").ToString.Trim.ToUpper = "QUARTERLY" Then
                                txtGuPeriod.Text = CStr(Val(txtGuPeriod.Text) / 3)
                            ElseIf dtROrderDetails.Rows(0).Item("KI_ObservationFrequency").ToString.Trim.ToUpper = "SEMIANNUALLY" Then
                                txtGuPeriod.Text = CStr(Val(txtGuPeriod.Text) / 6)
                            ElseIf dtROrderDetails.Rows(0).Item("KI_ObservationFrequency").ToString.Trim.ToUpper = "ANNUALLY" Then
                                txtGuPeriod.Text = CStr(Val(txtGuPeriod.Text) / 12)
                            End If


                            For i = 0 To strDRAGUPeriod.Length - 1
                                If IsNumeric(strDRAGUPeriod.Substring(i, 1)) = False Then
                                    strNewDurationTypeDRA = (strNewDurationTypeDRA + strDRAGUPeriod.Substring(i, 1)).Trim
                                End If
                            Next

                            Dim strDRAKIfreq As String = dtROrderDetails.Rows(0).Item("KI_ObservationFrequency").ToString

                            ddlKIFrequency.SelectedValue = strDRAKIfreq.ToUpper
                            lblKOLevelSameAsCoupon.Text = strDRAKIfreq

                            Dim strDRAKoType As String = dtROrderDetails.Rows(0).Item("KO_Type").ToString
                            ddlKOType.SelectedValue = strDRAKoType.ToUpper

                            Dim strKOLevel As String = dtROrderDetails.Rows(0).Item("KO_Level").ToString

                            If strKOLevel = "&nbsp;" Then

                            Else
                                txtKOLevel.Text = strKOLevel
                                txtKOLevel.Enabled = True
                                ddlKOType.Enabled = True
                                chkKO.Checked = True
                                txtKOLevel.BackColor = Color.White
                            End If


                            Dim strDRAQty As String = dtROrderDetails.Rows(0).Item("CashOrderQuantity").ToString
                            ''txtOrderDRAFCN.Text = FormatNumber(strDRAQty, 2)
			 txtOrderDRAFCN.Text = SetNumberFormat(strDRAQty, 0) ''EQBOSDEV-228 Added by chaitali removing decimal
                            Dim strDRAType As String = dtROrderDetails.Rows(0).Item("Type").ToString
                            If strDRAType.ToUpper.Trim = "DRA" Then
                                txtGuPeriod.Enabled = True
                                lblGUPeriod.Visible = True
                                txtGuPeriod.Visible = True
                                lblGUType.Visible = True
                                ddlDRAType.SelectedValue = strDRAType.ToUpper.Trim
                                tabContainer.ActiveTabIndex = prdTab.DRA '<Added by RushikeshD. on 29-Jan-2015 Jira:EQBOSDEV-233 >
                                lblAcc.Visible = True
                                lblAccSameasstrike.Visible = True

                            Else
                                txtGuPeriod.Enabled = False
                                lblGUPeriod.Visible = False
                                txtGuPeriod.Visible = False
                                lblGUType.Visible = False
                                ddlDRAType.SelectedValue = strDRAType.ToUpper.Trim
                                tabContainer.ActiveTabIndex = prdTab.FCN '<Added by RushikeshD. on 29-Jan-2015 Jira:EQBOSDEV-233 >
                                lblAcc.Visible = False
                                lblAccSameasstrike.Visible = False

                            End If

                            ddlNoteCcy.SelectedValue = dtROrderDetails.Rows(0).Item("CashCurrency").ToString
                            lblNoteCcy.Text = "(" & dtROrderDetails.Rows(0).Item("CashCurrency").ToString & ")"


                            getRange()
                            Prepare_DRAFCN_Basket()
                            GetCommentary_DRA()
                            resetControlsForPool(False)
                        Case Else
                            lblerror.Text = "Error occured while getting Pool Data."
                    End Select

                Else
                    lblerror.Text = "Received invalid Pool ID."
                End If
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Sub


    Private Sub btnCapturePoolPrice_ServerClick(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnCapturePoolPrice.ServerClick
        Dim hashRFQID As Hashtable
        Dim hashPPId As Hashtable
        Dim sPoolID As String
        Dim sStrike As String
        Try
            If Not IsNothing(Request.QueryString("PoolID")) Then
                sPoolID = Request.QueryString("PoolID")
                hashPPId = New Hashtable
                hashRFQID = New Hashtable
                hashRFQID = CType(Session("Hash_Values"), Hashtable)
                hashPPId = CType(Session("PP_IdTable"), Hashtable)
                lblerror.Text = ""
                lblerrorPopUp.Text = ""
                chkUpfrontOverride.Checked = False
                chkUpfrontOverride.Visible = False
                lblMsgPriceProvider.Text = ""
                Select Case lblIssuerPopUpValue.Text.ToUpper
                    Case "JPM"
                        sStrike = lblJPMPrice.Text
                        Quote_ID = Convert.ToString(Session("JPMQuote"))
                        Session.Remove("JPMQuote")
                    Case "CS"
                        sStrike = lblCSPrice.Text
                        Quote_ID = Convert.ToString(Session("CSQuote"))
                        Session.Remove("CSQuote")
                    Case "UBS"
                        sStrike = lblUBSPrice.Text
                        Quote_ID = Convert.ToString(Session("UBSQuote"))
                        Session.Remove("UBSQuote")
                    Case "HSBC"
                        sStrike = lblHSBCPrice.Text
                        Quote_ID = Convert.ToString(Session("HSBCQuote"))
                        Session.Remove("HSBCQuote")
                    Case "BAML"
                        sStrike = lblBAMLPrice.Text
                        Quote_ID = Convert.ToString(Session("BAMLQuote"))
                        Session.Remove("BAMLQuote")
                    Case "BNPP"
                        sStrike = lblBNPPPrice.Text
                        Quote_ID = Convert.ToString(Session("BNPPQuote"))
                        Session.Remove("BNPPQuote")
                    Case "DB"
                        sStrike = lblDBIBPrice.Text
                        Quote_ID = Convert.ToString(Session("DBIBQuote"))
                        Session.Remove("DBIBQuote")
                    Case "OCBC"
                        sStrike = lblOCBCPrice.Text
                        Quote_ID = Convert.ToString(Session("OCBCQuote"))
                        Session.Remove("OCBCQuote")
                    Case "CITI"
                        sStrike = lblCITIPrice.Text
                        Quote_ID = Convert.ToString(Session("CITIQuote"))
                        Session.Remove("CITIQuote")
                    Case "LEONTEQ"
                        sStrike = lblLEONTEQPrice.Text
                        Quote_ID = Convert.ToString(Session("LEONTEQQuote"))
                        Session.Remove("LEONTEQQuote")
                    Case "COMMERZ"
                        sStrike = lblCOMMERZPrice.Text
                        Quote_ID = Convert.ToString(Session("COMMERZQuote"))
                        Session.Remove("COMMERZQuote")
                End Select

                If sPoolID.Trim <> "" Then
                    Dim sNewPrice As String
                            If ddlSolveForDRA.SelectedValue = "CONVERSION_STRIKE" Then
                                sNewPrice = sStrike
                            ElseIf ddlSolveForDRA.SelectedValue = "COUPON" Then
                                sNewPrice = lblClientYieldPopUpValue.Text
                            Else
                                sNewPrice = lblIssuerPricePopUpValue.Text
                            End If
                    Select Case objELNRFQ.SetPoolPrice(sPoolID, sNewPrice, LoginInfoGV.Login_Info.LoginId, Quote_ID)
                        Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                            lblerrorPopUp.Text = "Price captured successfully!"
                            lblerrorPopUp.ForeColor = Color.Blue
                            btnCapturePoolPrice.Disabled = True
                        Case Else
                            lblerrorPopUp.Text = "Error occurred while capturing price"
                            lblerrorPopUp.ForeColor = Color.Red
                    End Select
                End If
            End If
        Catch ex As Exception
            lblerrorPopUp.Text = "Error occurred while capturing the price."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnCapturePoolPrice_ServerClick", ErrorLevel.High)
        End Try
    End Sub

    Public Sub resetControlsForPool(ByVal flag As Boolean)
        Try


         
                    panelDRAFCN.Enabled = flag
                    upnl2.Update()
         

            tblRFQGridHolder.Disabled = Not (flag)
            upnlGrid.Update()
            grdOrder.Enabled = flag
            grdDRAFCN.Enabled = flag
            btnSolveAll.Enabled = flag
            EnableDisableForOrderPoolData("")
        Catch ex As Exception
            lblerrorPopUp.Text = "Error occurred while capturing the price."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "resetControlsAfterRepeice_ServerClick", ErrorLevel.High)
        End Try
    End Sub

    Private Sub btnRedirect_ServerClick(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnRedirect.ServerClick
        Dim hashRFQID As Hashtable
        Dim hashPPId As Hashtable
        Dim orderQuantity As String = ""
        Dim strType As String = ""
        Dim strLimitPrice1 As String = ""
        Dim strLimitPrice2 As String = ""
        Dim strLimitPrice3 As String = ""
        Dim strMargin As String = ""
        Dim strClientPrice As String = ""
        Dim strClientYield As String = ""
        Dim strBookingBranch As String = ""
        Dim strJavaScriptDealClicked As New StringBuilder
        Dim strRMNameforOrderConfirm As String = ""
        Dim strRMEmailIdforOrderConfirm As String = ""
        Dim strLoginUserEmail As String = ""
        Try
            hashPPId = New Hashtable
            hashRFQID = New Hashtable

            hashRFQID = CType(Session("Hash_Values"), Hashtable)
            hashPPId = CType(Session("PP_IdTable"), Hashtable)
            lblerror.Text = ""
            lblerrorPopUp.Text = ""
            chkUpfrontOverride.Checked = False
            chkUpfrontOverride.Visible = False
            lblMsgPriceProvider.Text = ""
           
            Select Case lblIssuerPopUpValue.Text.ToUpper
                Case "JPM"
                    If Convert.ToString(Session("flag")) = "I" Then
                        Quote_ID = CStr(hashRFQID(hashPPId("JPM")))
                        Session.Remove("flag")
                        Session("flag") = ""
                    Else
                        Quote_ID = Convert.ToString(Session("JPMQuote"))
                        Session.Remove("JPMQuote")
                    End If
                Case "CS"
                    If Convert.ToString(Session("flag")) = "I" Then
                        Quote_ID = CStr(hashRFQID(hashPPId("CS")))
                        Session.Remove("flag")
                        Session("flag") = ""
                    Else
                        Quote_ID = Convert.ToString(Session("CSQuote"))
                        Session.Remove("CSQuote")
                    End If
                Case "UBS"
                    If Convert.ToString(Session("flag")) = "I" Then
                        Quote_ID = CStr(hashRFQID(hashPPId("UBS")))
                        Session.Remove("flag")
                        Session("flag") = ""
                    Else
                        Quote_ID = Convert.ToString(Session("UBSQuote"))
                        Session.Remove("UBSQuote")
                    End If
                Case "HSBC"
                    If Convert.ToString(Session("flag")) = "I" Then
                        Quote_ID = CStr(hashRFQID(hashPPId("HSBC")))
                        Session.Remove("flag")
                        Session("flag") = ""
                    Else
                        Quote_ID = Convert.ToString(Session("HSBCQuote"))
                        Session.Remove("HSBCQuote")
                    End If
                Case "BAML"
                    If Convert.ToString(Session("flag")) = "I" Then
                        Quote_ID = CStr(hashRFQID(hashPPId("BAML")))
                        Session.Remove("flag")
                        Session("flag") = ""
                    Else
                        Quote_ID = Convert.ToString(Session("BAMLQuote"))
                        Session.Remove("BAMLQuote")
                    End If
                Case "BNPP"
                    If Convert.ToString(Session("flag")) = "I" Then
                        Quote_ID = CStr(hashRFQID(hashPPId("BNPP")))
                        Session.Remove("flag")
                        Session("flag") = ""
                    Else
                        Quote_ID = Convert.ToString(Session("BNPPQuote"))
                        Session.Remove("BNPPQuote")
                    End If
                Case "DB"
                    If Convert.ToString(Session("flag")) = "I" Then
                        Quote_ID = CStr(hashRFQID(hashPPId("DB")))
                        Session.Remove("flag")
                        Session("flag") = ""
                    Else
                        Quote_ID = Convert.ToString(Session("DBIBQuote"))
                        Session.Remove("DBIBQuote")
                    End If
                Case "OCBC"
                    If Convert.ToString(Session("flag")) = "I" Then
                        Quote_ID = CStr(hashRFQID(hashPPId("OCBC")))
                        Session.Remove("flag")
                        Session("flag") = ""
                    Else
                        Quote_ID = Convert.ToString(Session("OCBCQuote"))
                        Session.Remove("OCBCQuote")
                    End If
                Case "CITI"
                    If Convert.ToString(Session("flag")) = "I" Then
                        Quote_ID = CStr(hashRFQID(hashPPId("CITI")))
                        Session.Remove("flag")
                        Session("flag") = ""
                    Else
                        Quote_ID = Convert.ToString(Session("CITIQuote"))
                        Session.Remove("CITIQuote")
                    End If
                Case "LEONTEQ"
                    If Convert.ToString(Session("flag")) = "I" Then
                        Quote_ID = CStr(hashRFQID(hashPPId("LEONTEQ")))
                        Session.Remove("flag")
                        Session("flag") = ""
                    Else
                        Quote_ID = Convert.ToString(Session("LEONTEQQuote"))
                        Session.Remove("LEONTEQQuote")
                    End If
                Case "COMMERZ"
                    If Convert.ToString(Session("flag")) = "I" Then
                        Quote_ID = CStr(hashRFQID(hashPPId("COMMERZ")))
                        Session.Remove("flag")
                        Session("flag") = ""
                    Else
                        Quote_ID = Convert.ToString(Session("COMMERZQuote"))
                        Session.Remove("COMMERZQuote")
                    End If
            End Select
            strMargin = txtUpfrontPopUpValue.Text.Replace(",", "")
            strClientPrice = lblClientPricePopUpValue.Text
            strClientYield = ""
            strBookingBranch = ddlBookingBranchPopUpValue.SelectedValue
            ''orderQuantity = lblNotionalPopUpValue.Text
	    orderQuantity = SetNumberFormat(lblNotionalPopUpValue.Text, 0) ''EQBOSDEV-228 Added by chaitali removing decimal
            strRMNameforOrderConfirm = ddlRM.SelectedValue
            If ddlOrderTypePopUpValue.SelectedItem.Text.ToUpper.Contains("LIMIT") Then
                ddlBasketSharesPopValue.Visible = True
                txtLimitPricePopUpValue.Width = New WebControls.Unit(75)
                ddlBasketSharesPopValue.Width = New WebControls.Unit(100)
                Select Case ddlBasketSharesPopValue.SelectedIndex
                    Case 0
                        strLimitPrice1 = CStr(Val(txtLimitPricePopUpValue.Text.Replace(",", "")))
                        strLimitPrice2 = ""
                        strLimitPrice3 = ""
                    Case 1
                        strLimitPrice1 = ""
                        strLimitPrice2 = CStr(Val(txtLimitPricePopUpValue.Text.Replace(",", "")))
                        strLimitPrice3 = ""
                    Case 2
                        strLimitPrice1 = ""
                        strLimitPrice2 = ""
                        strLimitPrice3 = CStr(Val(txtLimitPricePopUpValue.Text.Replace(",", "")))
                End Select
                strType = "Limit"
            Else
                ddlBasketSharesPopValue.Visible = False
                txtLimitPricePopUpValue.Width = New WebControls.Unit(175)
                strLimitPrice1 = CStr(Val(txtLimitPricePopUpValue.Text.Replace(",", "")))
                strLimitPrice2 = ""
                strLimitPrice3 = ""
                strType = "Market"
            End If
            Dim count As Integer = 0
            txtUpfrontPopUpValue_TextChanged(Nothing, Nothing)
            Select Case objELNRFQ.web_update_RedirectedOrders_with_Margin_Price_Yield(orderQuantity.Replace(",", ""), strType, strLimitPrice1, strLimitPrice2, strLimitPrice3, _
                                                                              Quote_ID, LoginInfoGV.Login_Info.LoginId, strMargin, strClientPrice, _
                                                                              strClientYield, strBookingBranch, _
                                                                              strRMNameforOrderConfirm, strRMEmailIdforOrderConfirm)
                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful

                    '<AvinashG. on 02-Feb-2016: FA-1286 - Display User Limit and mail to dealer desk(email id based on config) >
                    Dim sLSS_DealerNotificationGroupEmailID As String
                    sLSS_DealerNotificationGroupEmailID = objReadConfig.ReadConfig(dsConfig, "LSS_DealerNotificationGroupEmailID", "LSS", CStr(LoginInfoGV.Login_Info.EntityID), "NOVALIDID").Trim.ToUpper
                    Select Case sLSS_DealerNotificationGroupEmailID
                        Case "NOVALIDID"
                            LogException(LoginInfoGV.Login_Info.LoginId, "Cannot notify by mail! Invalid config value (" + sLSS_DealerNotificationGroupEmailID + ") found for 'LSS_DealerNotificationGroupEmailID' ", LogType.FnqInfo, Nothing, _
sSelfPath, "btnRedirect_ServerClick", ErrorLevel.Medium)
                        Case Else

                            Dim sbNotifyMail As StringBuilder
                            Dim errmailnotify As String = ""

                            sbNotifyMail = New StringBuilder()
                            sbNotifyMail.Append("<div   style=""border: solid 1px #CCC;""><table cellpadding='2px' cellspacing='4px' width='490px'><tr><td style=""background-color: #DBE5F1;"">" + _
                            lblIssuerPopUpCaption.Text + "</td><td>" + lblIssuerPopUpValue.Text + "</td><td   style=""background-color: #DBE5F1;"">" + _
    lblUnderlyingPopUpCaption.Text + "</td><td>" + lblUnderlyingPopUpValue.Text + "</td></tr>" + _
   "<tr><td  style=""background-color: #DBE5F1;"">" + lblBookingBranchPopUpCaption.Text + "</td><td >" + ddlBookingBranchPopUpValue.SelectedItem.Text + "</td><td style=""background-color: #DBE5F1;"">" + _
    lblNotionalPopUpCaption.Text + lblCurrencyPopUpValue.Text + "</td><td>" + lblNotionalPopUpValue.Text + "</td></tr>" + _
    "<tr><td  style=""background-color: #DBE5F1;"">" + lblIssuerPricePopUpCaption.Text + "</td><td>" + lblIssuerPricePopUpValue.Text + "</td><td  style=""background-color: #DBE5F1;"">" + _
    lblClientPricePopUpCaption.Text + "</td><td>" + lblClientPricePopUpValue.Text + "</td></tr>" + _
    "<tr><td  style=""background-color: #DBE5F1;"">" + lblStrikePopUpCaption.Text + "</td><td>" + lblStrikePopUpValue.Text + "</td><td  style=""background-color: #DBE5F1;"">" + _
    lblTenorPopUpCaption.Text + "</td><td>" + lblTenorPopUpValue.Text + " " + lblTenorTypePopUpValue.Text + "</td></tr>" + _
    "<tr><td  style=""background-color: #DBE5F1;"">" + lblKOPopUpCaption.Text + "</td><td>" + lblKOPopUpValue.Text + " " + lblKOTypePopUpValue.Text + "</td><td>" + _
    "</td><td>" + "</td></tr>" + _
    "<tr><td  style=""background-color: #DBE5F1;"">" + lblUpfrontPopUpCaption.Text + "</td><td>" + txtUpfrontPopUpValue.Text + "</td><td  style=""background-color: #DBE5F1;"">" + _
    lblClientYieldPopUpCaption.Text + "</td><td>" + lblClientYieldPopUpValue.Text + "</td></tr>" + _
    "<tr><td  style=""background-color: #DBE5F1;"">" + lblOrderTypePopUpCaption.Text + "</td><td>" + ddlOrderTypePopUpValue.SelectedItem.Text + "</td><td  style=""background-color: #DBE5F1;"">" + _
    lblLimitPricePopUpCaption.Text + "</td><td>" + txtLimitPricePopUpValue.Text + "</td></tr></table></div>")

                            '<Changed by Mohit Lalwani on 3-Feb-2016 FA-1339>
                            Dim emailSubject As String = ""
                            emailSubject = objReadConfig.ReadConfig(dsConfig, "EQC_DealerRedirection_Subject", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "EQ Connect Order Redirection for " + ddlDRAType.SelectedItem.Text.ToString + " &#8211; &lt;RFQID&gt;").ToString
                            emailSubject = emailSubject.Trim.Replace("&lt;RFQID&gt;", Quote_ID).Replace("&lt;Product&gt;", ddlDRAType.SelectedItem.Text.ToString.ToUpper).Replace("&#8211;", "-")

                            'oWEBADMIN.Notify_ToDealerDeskGroupEmailID(LoginInfoGV.Login_Info.EntityID.ToString(), _
                            '                                                             LoginInfoGV.Login_Info.LoginId, sLSS_DealerNotificationGroupEmailID, LoginInfoGV.Login_Info.LoginName + " redirected an order.  RFQ Id  for redirected order is: " + Quote_ID + _
                            '                                                             sbNotifyMail.ToString, "EQ Connect Order Redirection for " + ddlDRAType.SelectedItem.Text.ToString + " - " + Quote_ID, errmailnotify)
                            oWEBADMIN.Notify_ToDealerDeskGroupEmailID(LoginInfoGV.Login_Info.EntityID.ToString(), _
                                                                                        LoginInfoGV.Login_Info.LoginId, sLSS_DealerNotificationGroupEmailID, LoginInfoGV.Login_Info.LoginName + " redirected an order.  RFQ Id  for redirected order is: " + Quote_ID + _
                                                                                        sbNotifyMail.ToString, emailSubject, errmailnotify)

                            '</Changed by Mohit Lalwani on 3-Feb-2016 FA-1339>
                    End Select
                    '</AvinashG. on 02-Feb-2016: FA-1286 - Display User Limit and mail to dealer desk(email id based on config) >


                    lblerror.Text = "Order redirected for RFQ " & Quote_ID
                    lblerror.ForeColor = Color.Blue
                    ShowHideConfirmationPopup(False)
                    Stop_timer_Only()

                    rbHistory.SelectedValue = "Order History"
                    fill_OrderGrid()
                    makeThisGridVisible(grdOrder)
                    ColumnVisibility()
                    upnlGrid.Update()


                Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                    lblerrorPopUp.Text = "Error occurred while redirecting the order."
            End Select
        Catch ex As Exception
            lblerrorPopUp.Text = "Error occurred while redirecting the order."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnRedirect_ServerClick", ErrorLevel.High)
        End Try
    End Sub

    'Private Sub btnPrdInfo_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnPrdInfo.Click
    '    Dim Product_name As String = ""
    '    Dim strWebPrdInfo_DirPath As String
    '    Try

    '        Product_name = ddlDRAType.SelectedValue
    '        strWebPrdInfo_DirPath = objReadConfig.ReadConfig(New DataSet, "WebPrdInfo_DirPath", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "")
    '        Dim str As String = String.Empty
    '        str = str & "window.open('" & LoginInfoGV.Login_Info.WebServicePath & "/../" & strWebPrdInfo_DirPath & "/" & Product_name & ".pdf" & "','ProductTermsheet','scrollbars=yes,resizable=yes,menubar=0,status=0,width=1280,height=650,top=0,left=0');"
    '        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "clientstrTypeList", str, True)
    '    Catch ex As Exception

    '    End Try
    'End Sub

     
    
    Private Sub EnableDisableForOrderPoolData(ByVal ppname As String)
        Try
            btnSolveAll.Enabled = False
            btnSolveAll.CssClass = "btnDisabled"
            If ppname.Trim.ToUpper = "HSBC" Then
                TRJPM1.Disabled = True
                TRBAML1.Disabled = True
                TRCS1.Disabled = True
                TRBNPP1.Disabled = True
                TRUBS1.Disabled = True
                TRHSBC1.Disabled = False
                TRDBIB1.Disabled = True

                btnCSPrice.Enabled = False
                btnCSPrice.CssClass = "btnDisabled"
                btnJPMprice.Enabled = False
                btnJPMprice.CssClass = "btnDisabled"
                btnBAMLPrice.Enabled = False
                btnBAMLPrice.CssClass = "btnDisabled"
                btnBNPPPrice.Enabled = False
                btnBNPPPrice.CssClass = "btnDisabled"
                btnUBSPrice.Enabled = False
                btnUBSPrice.CssClass = "btnDisabled"
                btnHSBCPrice.Enabled = True
                btnHSBCPrice.CssClass = "btn"
                btnDBIBPrice.Enabled = False
                btnDBIBPrice.CssClass = "btnDisabled"

                TROCBC1.Disabled = True
                btnOCBCPrice.Enabled = False
                btnOCBCPrice.CssClass = "btnDisabled"

                TRCITI1.Disabled = True
                btnCITIPrice.Enabled = False
                btnCITIPrice.CssClass = "btnDisabled"

                TRLEONTEQ1.Disabled = True
                btnLEONTEQPrice.Enabled = False
                btnLEONTEQPrice.CssClass = "btnDisabled"

                TRCOMMERZ1.Disabled = True
                btnCOMMERZPrice.Enabled = False
                btnCOMMERZPrice.CssClass = "btnDisabled"
            ElseIf ppname.Trim.ToUpper = "JPM" Then
                btnCSPrice.Enabled = False
                btnCSPrice.CssClass = "btnDisabled"
                btnHSBCPrice.Enabled = False
                btnHSBCPrice.CssClass = "btnDisabled"
                btnBAMLPrice.Enabled = False
                btnBAMLPrice.CssClass = "btnDisabled"
                btnBNPPPrice.Enabled = False
                btnBNPPPrice.CssClass = "btnDisabled"
                btnUBSPrice.Enabled = False
                btnUBSPrice.CssClass = "btnDisabled"
                btnDBIBPrice.Enabled = False
                btnDBIBPrice.CssClass = "btnDisabled"
                btnJPMprice.Enabled = True
                btnJPMprice.CssClass = "btn"
                TRJPM1.Disabled = False
                TRBAML1.Disabled = True
                TRCS1.Disabled = True
                TRBNPP1.Disabled = True
                TRUBS1.Disabled = True
                TRHSBC1.Disabled = True
                TRDBIB1.Disabled = True

                TROCBC1.Disabled = True
                btnOCBCPrice.Enabled = False
                btnOCBCPrice.CssClass = "btnDisabled"


                TRCITI1.Disabled = True
                btnCITIPrice.Enabled = False
                btnCITIPrice.CssClass = "btnDisabled"

                TRLEONTEQ1.Disabled = True
                btnLEONTEQPrice.Enabled = False
                btnLEONTEQPrice.CssClass = "btnDisabled"

                TRCOMMERZ1.Disabled = True
                btnCOMMERZPrice.Enabled = False
                btnCOMMERZPrice.CssClass = "btnDisabled"
            ElseIf ppname.Trim.ToUpper = "UBS" Then
                btnCSPrice.Enabled = False
                btnCSPrice.CssClass = "btnDisabled"
                btnHSBCPrice.Enabled = False
                btnHSBCPrice.CssClass = "btnDisabled"
                btnBAMLPrice.Enabled = False
                btnBAMLPrice.CssClass = "btnDisabled"
                btnBNPPPrice.Enabled = False
                btnBNPPPrice.CssClass = "btnDisabled"
                btnJPMprice.Enabled = False
                btnJPMprice.CssClass = "btnDisabled"
                btnDBIBPrice.Enabled = False
                btnDBIBPrice.CssClass = "btnDisabled"
                btnUBSPrice.Enabled = True
                btnUBSPrice.CssClass = "btn"
                TRJPM1.Disabled = True
                TRBAML1.Disabled = True
                TRCS1.Disabled = True
                TRBNPP1.Disabled = True
                TRUBS1.Disabled = False
                TRHSBC1.Disabled = True
                TRDBIB1.Disabled = True
                TROCBC1.Disabled = True
                btnOCBCPrice.Enabled = False
                btnOCBCPrice.CssClass = "btnDisabled"


                TRCITI1.Disabled = True
                btnCITIPrice.Enabled = False
                btnCITIPrice.CssClass = "btnDisabled"

                TRLEONTEQ1.Disabled = True
                btnLEONTEQPrice.Enabled = False
                btnLEONTEQPrice.CssClass = "btnDisabled"

                TRCOMMERZ1.Disabled = True
                btnCOMMERZPrice.Enabled = False
                btnCOMMERZPrice.CssClass = "btnDisabled"
            ElseIf ppname.Trim.ToUpper = "BNPP" Then
                btnCSPrice.Enabled = False
                btnCSPrice.CssClass = "btnDisabled"
                btnHSBCPrice.Enabled = False
                btnHSBCPrice.CssClass = "btnDisabled"
                btnBAMLPrice.Enabled = False
                btnBAMLPrice.CssClass = "btnDisabled"
                btnUBSPrice.Enabled = False
                btnUBSPrice.CssClass = "btnDisabled"
                btnJPMprice.Enabled = False
                btnJPMprice.CssClass = "btnDisabled"
                btnDBIBPrice.Enabled = False
                btnDBIBPrice.CssClass = "btnDisabled"
                btnBNPPPrice.Enabled = True
                btnBNPPPrice.CssClass = "btn"
                TRJPM1.Disabled = True
                TRBAML1.Disabled = True
                TRCS1.Disabled = True
                TRBNPP1.Disabled = False
                TRUBS1.Disabled = True
                TRHSBC1.Disabled = True
                TRDBIB1.Disabled = True
                TROCBC1.Disabled = True
                btnOCBCPrice.Enabled = False
                btnOCBCPrice.CssClass = "btnDisabled"

                TRCITI1.Disabled = True
                btnCITIPrice.Enabled = False
                btnCITIPrice.CssClass = "btnDisabled"

                TRLEONTEQ1.Disabled = True
                btnLEONTEQPrice.Enabled = False
                btnLEONTEQPrice.CssClass = "btnDisabled"

                TRCOMMERZ1.Disabled = True
                btnCOMMERZPrice.Enabled = False
                btnCOMMERZPrice.CssClass = "btnDisabled"
            ElseIf ppname.Trim.ToUpper = "CS" Then
                btnBNPPPrice.Enabled = False
                btnBNPPPrice.CssClass = "btnDisabled"
                btnHSBCPrice.Enabled = False
                btnHSBCPrice.CssClass = "btnDisabled"
                btnBAMLPrice.Enabled = False
                btnBAMLPrice.CssClass = "btnDisabled"
                btnUBSPrice.Enabled = False
                btnUBSPrice.CssClass = "btnDisabled"
                btnJPMprice.Enabled = False
                btnJPMprice.CssClass = "btnDisabled"
                btnDBIBPrice.Enabled = False
                btnDBIBPrice.CssClass = "btnDisabled"
                btnCSPrice.Enabled = True
                btnCSPrice.CssClass = "btn"
                TRJPM1.Disabled = True
                TRBAML1.Disabled = True
                TRCS1.Disabled = False
                TRBNPP1.Disabled = True
                TRUBS1.Disabled = True
                TRHSBC1.Disabled = True
                TRDBIB1.Disabled = True
                TROCBC1.Disabled = True
                btnOCBCPrice.Enabled = False
                btnOCBCPrice.CssClass = "btnDisabled"

                TRCITI1.Disabled = True
                btnCITIPrice.Enabled = False
                btnCITIPrice.CssClass = "btnDisabled"

                TRLEONTEQ1.Disabled = True
                btnLEONTEQPrice.Enabled = False
                btnLEONTEQPrice.CssClass = "btnDisabled"

                TRCOMMERZ1.Disabled = True
                btnCOMMERZPrice.Enabled = False
                btnCOMMERZPrice.CssClass = "btnDisabled"
            ElseIf ppname.Trim.ToUpper = "BAML" Then
                btnBNPPPrice.Enabled = False
                btnBNPPPrice.CssClass = "btnDisabled"
                btnHSBCPrice.Enabled = False
                btnHSBCPrice.CssClass = "btnDisabled"
                btnCSPrice.Enabled = False
                btnCSPrice.CssClass = "btnDisabled"
                btnUBSPrice.Enabled = False
                btnUBSPrice.CssClass = "btnDisabled"
                btnJPMprice.Enabled = False
                btnJPMprice.CssClass = "btnDisabled"
                btnDBIBPrice.Enabled = False
                btnDBIBPrice.CssClass = "btnDisabled"
                btnBAMLPrice.Enabled = True
                btnBAMLPrice.CssClass = "btn"
                TRJPM1.Disabled = True
                TRBAML1.Disabled = False
                TRCS1.Disabled = True
                TRBNPP1.Disabled = True
                TRUBS1.Disabled = True
                TRHSBC1.Disabled = True
                TRDBIB1.Disabled = True
                TROCBC1.Disabled = True
                btnOCBCPrice.Enabled = False
                btnOCBCPrice.CssClass = "btnDisabled"

                TRCITI1.Disabled = True
                btnCITIPrice.Enabled = False
                btnCITIPrice.CssClass = "btnDisabled"

                TRLEONTEQ1.Disabled = True
                btnLEONTEQPrice.Enabled = False
                btnLEONTEQPrice.CssClass = "btnDisabled"

                TRCOMMERZ1.Disabled = True
                btnCOMMERZPrice.Enabled = False
                btnCOMMERZPrice.CssClass = "btnDisabled"
            ElseIf ppname.Trim.ToUpper = "DB" Then
                btnBNPPPrice.Enabled = False
                btnBNPPPrice.CssClass = "btnDisabled"
                btnHSBCPrice.Enabled = False
                btnHSBCPrice.CssClass = "btnDisabled"
                btnCSPrice.Enabled = False
                btnCSPrice.CssClass = "btnDisabled"
                btnUBSPrice.Enabled = False
                btnUBSPrice.CssClass = "btnDisabled"
                btnJPMprice.Enabled = False
                btnJPMprice.CssClass = "btnDisabled"
                btnBAMLPrice.Enabled = False
                btnBAMLPrice.CssClass = "btnDisabled"
                btnDBIBPrice.Enabled = True
                btnDBIBPrice.CssClass = "btn"
                TRJPM1.Disabled = True
                TRBAML1.Disabled = True
                TRDBIB1.Disabled = False
                TRCS1.Disabled = True
                TRBNPP1.Disabled = True
                TRUBS1.Disabled = True
                TRHSBC1.Disabled = True

                TROCBC1.Disabled = True
                btnOCBCPrice.Enabled = False
                btnOCBCPrice.CssClass = "btnDisabled"

                TRCITI1.Disabled = True
                btnCITIPrice.Enabled = False
                btnCITIPrice.CssClass = "btnDisabled"

                TRLEONTEQ1.Disabled = True
                btnLEONTEQPrice.Enabled = False
                btnLEONTEQPrice.CssClass = "btnDisabled"

                TRCOMMERZ1.Disabled = True
                btnCOMMERZPrice.Enabled = False
                btnCOMMERZPrice.CssClass = "btnDisabled"
            ElseIf ppname.Trim.ToUpper = "OCBC" Then
                TRJPM1.Disabled = True
                TRBAML1.Disabled = True
                TRCS1.Disabled = True
                TRBNPP1.Disabled = True
                TRUBS1.Disabled = True
                TRHSBC1.Disabled = True
                TRDBIB1.Disabled = True
                TROCBC1.Disabled = False
                TRCITI1.Disabled = True

                btnCSPrice.Enabled = False
                btnCSPrice.CssClass = "btnDisabled"
                btnJPMprice.Enabled = False
                btnJPMprice.CssClass = "btnDisabled"
                btnBAMLPrice.Enabled = False
                btnBAMLPrice.CssClass = "btnDisabled"
                btnBNPPPrice.Enabled = False
                btnBNPPPrice.CssClass = "btnDisabled"
                btnUBSPrice.Enabled = False
                btnUBSPrice.CssClass = "btnDisabled"
                btnHSBCPrice.Enabled = False
                btnHSBCPrice.CssClass = "btnDisabled"
                btnDBIBPrice.Enabled = False
                btnDBIBPrice.CssClass = "btnDisabled"
                btnOCBCPrice.Enabled = True
                btnOCBCPrice.CssClass = "btn"
		'Avinash on 16-Aug-2016 | Logic missing for CITI
                btnCITIPrice.Enabled = False			
                btnCITIPrice.CssClass = "btnDisabled"

                TRLEONTEQ1.Disabled = True
                btnLEONTEQPrice.Enabled = False
                btnLEONTEQPrice.CssClass = "btnDisabled"

                TRCOMMERZ1.Disabled = True
                btnCOMMERZPrice.Enabled = False
                btnCOMMERZPrice.CssClass = "btnDisabled"
            ElseIf ppname.Trim.ToUpper = "CITI" Then
                btnBNPPPrice.Enabled = False
                btnBNPPPrice.CssClass = "btnDisabled"
                btnHSBCPrice.Enabled = False
                btnHSBCPrice.CssClass = "btnDisabled"
                btnCSPrice.Enabled = False
                btnCSPrice.CssClass = "btnDisabled"
                btnUBSPrice.Enabled = False
                btnUBSPrice.CssClass = "btnDisabled"
                btnJPMprice.Enabled = False
                btnJPMprice.CssClass = "btnDisabled"
                btnBAMLPrice.Enabled = False
                btnBAMLPrice.CssClass = "btnDisabled"
                btnDBIBPrice.Enabled = False
                btnDBIBPrice.CssClass = "btnDisabled"
		'Avinash on 16-Aug-2016 | Incorrect setting for DBIB Logic 
                'btnDBIBPrice.Enabled = True
                'btnDBIBPrice.CssClass = "btn"
                TRJPM1.Disabled = True
                TRBAML1.Disabled = True
                TRCS1.Disabled = True
                TRBNPP1.Disabled = True
                TRUBS1.Disabled = True
                TRHSBC1.Disabled = True
                TRDBIB1.Disabled = True

                TROCBC1.Disabled = True
                btnOCBCPrice.Enabled = False
                btnOCBCPrice.CssClass = "btnDisabled"

                TRCITI1.Disabled = False
                btnCITIPrice.Enabled = True
                btnCITIPrice.CssClass = "btn"

                TRLEONTEQ1.Disabled = True
                btnLEONTEQPrice.Enabled = False
                btnLEONTEQPrice.CssClass = "btnDisabled"

                TRCOMMERZ1.Disabled = True
                btnCOMMERZPrice.Enabled = False
                btnCOMMERZPrice.CssClass = "btnDisabled"
            ElseIf ppname.Trim.ToUpper = "LEONTEQ" Then
                btnBNPPPrice.Enabled = False
                btnBNPPPrice.CssClass = "btnDisabled"
                btnHSBCPrice.Enabled = False
                btnHSBCPrice.CssClass = "btnDisabled"
                btnCSPrice.Enabled = False
                btnCSPrice.CssClass = "btnDisabled"
                btnUBSPrice.Enabled = False
                btnUBSPrice.CssClass = "btnDisabled"
                btnJPMprice.Enabled = False
                btnJPMprice.CssClass = "btnDisabled"
                btnBAMLPrice.Enabled = False
                btnBAMLPrice.CssClass = "btnDisabled"
                btnDBIBPrice.Enabled = False
                btnDBIBPrice.CssClass = "btnDisabled"

                TRJPM1.Disabled = True
                TRBAML1.Disabled = True
                TRCS1.Disabled = True
                TRBNPP1.Disabled = True
                TRUBS1.Disabled = True
                TRHSBC1.Disabled = True
                TRDBIB1.Disabled = True

                TROCBC1.Disabled = True
                btnOCBCPrice.Enabled = False
                btnOCBCPrice.CssClass = "btnDisabled"

                TRLEONTEQ1.Disabled = False
                btnLEONTEQPrice.Enabled = True
                btnLEONTEQPrice.CssClass = "btn"

                TRCITI1.Disabled = True
                btnCITIPrice.Enabled = False
                btnCITIPrice.CssClass = "btnDisabled"

                TRCOMMERZ1.Disabled = True
                btnCOMMERZPrice.Enabled = False
                btnCOMMERZPrice.CssClass = "btnDisabled"
            ElseIf ppname.Trim.ToUpper = "COMMERZ" Then
                btnBNPPPrice.Enabled = False
                btnBNPPPrice.CssClass = "btnDisabled"
                btnHSBCPrice.Enabled = False
                btnHSBCPrice.CssClass = "btnDisabled"
                btnCSPrice.Enabled = False
                btnCSPrice.CssClass = "btnDisabled"
                btnUBSPrice.Enabled = False
                btnUBSPrice.CssClass = "btnDisabled"
                btnJPMprice.Enabled = False
                btnJPMprice.CssClass = "btnDisabled"
                btnBAMLPrice.Enabled = False
                btnBAMLPrice.CssClass = "btnDisabled"
                btnDBIBPrice.Enabled = False
                btnDBIBPrice.CssClass = "btnDisabled"

                TRJPM1.Disabled = True
                TRBAML1.Disabled = True
                TRCS1.Disabled = True
                TRBNPP1.Disabled = True
                TRUBS1.Disabled = True
                TRHSBC1.Disabled = True
                TRDBIB1.Disabled = True

                TROCBC1.Disabled = True
                btnOCBCPrice.Enabled = False
                btnOCBCPrice.CssClass = "btnDisabled"

                TRCOMMERZ1.Disabled = False
                btnCOMMERZPrice.Enabled = True
                btnCOMMERZPrice.CssClass = "btn"

                TRCITI1.Disabled = True
                btnCITIPrice.Enabled = False
                btnCITIPrice.CssClass = "btnDisabled"

                TRLEONTEQ1.Disabled = True
                btnLEONTEQPrice.Enabled = False
                btnLEONTEQPrice.CssClass = "btnDisabled"
            ElseIf ppname.Trim.ToUpper = "" Then
                'enable all field 
                btnBNPPPrice.Enabled = True
                btnBNPPPrice.CssClass = "btn"
                btnHSBCPrice.Enabled = True
                btnHSBCPrice.CssClass = "btn"
                btnCSPrice.Enabled = True
                btnCSPrice.CssClass = "btn"
                btnUBSPrice.Enabled = True
                btnUBSPrice.CssClass = "btn"
                btnJPMprice.Enabled = True
                btnJPMprice.CssClass = "btn"
                btnBAMLPrice.Enabled = True
                btnBAMLPrice.CssClass = "btn"
                btnDBIBPrice.Enabled = True
                btnDBIBPrice.CssClass = "btn"
                TRJPM1.Disabled = False
                TRBAML1.Disabled = False
                TRCS1.Disabled = False
                TRBNPP1.Disabled = False
                TRUBS1.Disabled = False
                TRHSBC1.Disabled = False
                TRDBIB1.Disabled = False
                TROCBC1.Disabled = False
                btnOCBCPrice.Enabled = True
                btnOCBCPrice.CssClass = "btn"
                TRCITI1.Disabled = False
                btnCITIPrice.Enabled = True
                btnCITIPrice.CssClass = "btn"
                TRLEONTEQ1.Disabled = False
                btnLEONTEQPrice.Enabled = True
                btnLEONTEQPrice.CssClass = "btn"

                TRCOMMERZ1.Disabled = False
                btnCOMMERZPrice.Enabled = True
                btnCOMMERZPrice.CssClass = "btn"

                btnSolveAll.Enabled = True
                btnSolveAll.CssClass = "btn"
            End If

        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    'Private Sub setRedirectedOrderData()
    '    Dim dtROrderDetails As DataTable
    '    Dim sROrderID As String
    '    Dim strNewTenorELN As String = String.Empty
    '    Dim strNewTenorELNType As String = String.Empty
    '    Try
    '        dtROrderDetails = New DataTable("ROrderDetails")
    '        If Not IsNothing(Request.QueryString("RedirectedOrderId")) Then
    '            sROrderID = Request.QueryString("RedirectedOrderId")
    '            If sROrderID.Trim <> "" Then
    '                objELNRFQ.Get_ELN_Redirected_Order_Details(sROrderID, dtROrderDetails)
    '                Dim strType As String = dtROrderDetails.Rows(0)(RedirectOrderDetails.ELNType).ToString.Trim
    '                If strType = "Simple" Then
    '                    chkELNType.Checked = False
    '                    txtBarrier.Enabled = False
    '                    ddlBarrier.Enabled = False
    '                    txtBarrier.Visible = False
    '                    ddlBarrier.Visible = False
    '                Else

    '                    chkELNType.Checked = True
    '                    txtBarrier.Enabled = True
    '                    ddlBarrier.Enabled = True
    '                    txtBarrier.Visible = True
    '                    ddlBarrier.Visible = True
    '                    Dim strBarrierType As String = dtROrderDetails.Rows(0)(RedirectOrderDetails.BarrierType).ToString.Trim
    '                    ddlBarrier.SelectedValue = strBarrierType
    '                    Dim strBarrier As String = dtROrderDetails.Rows(0)(RedirectOrderDetails.BarrierPercentage).ToString.Trim
    '                    txtBarrier.Text = strBarrier
    '                End If
    '                Dim strExchng As String = dtROrderDetails.Rows(0)(RedirectOrderDetails.Exchange).ToString.Trim
    '                If ddlExchange.SelectedValue = strExchng Then
    '                    ddlExchange.SelectedValue = strExchng
    '                Else
    '                    ddlExchange.SelectedValue = strExchng
    '                    Fillddl_Share()
    '                End If
    '                getCurrency(dtROrderDetails.Rows(0)(RedirectOrderDetails.Share).ToString.Trim)
    '                Dim strQuantoCcy As String = dtROrderDetails.Rows(0)(RedirectOrderDetails.Currency).ToString.Trim
    '                If lblELNBaseCcy.Text = strQuantoCcy Then
    '                    chkQuantoCcy.Checked = False
    '                    ddlQuantoCcy.Enabled = False
    '                    lblQuantity.Text = "Notional (<font style='font-weight:bold;'>" & lblELNBaseCcy.Text & "</font>)"
    '                    ddlQuantoCcy.DataSource = Nothing
    '                    ddlQuantoCcy.DataBind()
    '                    ddlQuantoCcy.Items.Clear()
    '                    ddlQuantoCcy.Items.Add(lblELNBaseCcy.Text)
    '                    ddlQuantoCcy.BackColor = Color.LightGray
    '                Else
    '                    chkQuantoCcy.Checked = True
    '                    ddlQuantoCcy.Enabled = True
    '                    ddlQuantoCcy.BackColor = Color.White
    '                    ddlQuantoCcy.SelectedIndex = ddlQuantoCcy.Items.IndexOf(ddlQuantoCcy.Items.FindByText(dtROrderDetails.Rows(0)(RedirectOrderDetails.Currency).ToString.Trim))
    '                    lblQuantity.Text = "Notional (<font style='font-weight:bold;'>" & strQuantoCcy & "</font>)"
    '                End If

    '                Dim strTenor As String = dtROrderDetails.Rows(0)(RedirectOrderDetails.Tenor).ToString.Trim
    '                txtTenor.Text = strTenor
    '                ddlTenorTypeELN.SelectedItem.Text = dtROrderDetails.Rows(0)(RedirectOrderDetails.TenorType).ToString.Trim
    '                Dim strSetDays As String = dtROrderDetails.Rows(0)(RedirectOrderDetails.SettlementDays).ToString.Trim
    '                txtValueDays.Text = strSetDays
    '                Dim strTradeDate As String = dtROrderDetails.Rows(0)(RedirectOrderDetails.TradeDate).ToString.Trim
    '                If strTradeDate.ToUpper = Today.ToString("dd-MMM-yyyy").ToUpper Then
    '                    txtTradeDate.Value = Convert.ToDateTime(strTradeDate).ToString("dd-MMM-yyyy")
    '                    Dim strSettDate As String = dtROrderDetails.Rows(0)(RedirectOrderDetails.SettlementDate).ToString.Trim
    '                    txtSettlementDate.Value = Convert.ToDateTime(strSettDate).ToString("dd-MMM-yyyy")
    '                    Dim strExpDate As String = dtROrderDetails.Rows(0)(RedirectOrderDetails.ExpiryDate).ToString.Trim
    '                    txtExpiryDate.Value = Convert.ToDateTime(strExpDate).ToString("dd-MMM-yyyy")
    '                    Dim strMatDate As String = dtROrderDetails.Rows(0)(RedirectOrderDetails.MaturityDate).ToString.Trim
    '                    txtMaturityDate.Value = Convert.ToDateTime(strMatDate).ToString("dd-MMM-yyyy")
    '                Else
    '                    lblerror.Text = "Pool ID " + sROrderID + " not having todays' trade date."
    '                End If

    '                Dim strSolveFor As String = dtROrderDetails.Rows(0)(RedirectOrderDetails.SolveFor).ToString.Trim
    '                If strSolveFor = "PricePercentage" Then
    '                    ddlSolveFor.SelectedValue = "PricePercentage"
    '                    txtELNPrice.Text = "0.0"
    '                    txtELNPrice.Enabled = False
    '                    txtELNPrice.BackColor = Color.LightGray
    '                    txtStrike.Enabled = True
    '                    txtStrike.BackColor = Color.White
    '                    lblSolveForType.Text = "IB Price (%)"
    '                Else
    '                    ddlSolveFor.SelectedValue = "StrikePercentage"
    '                    txtELNPrice.Enabled = True
    '                    txtELNPrice.BackColor = Color.White
    '                    txtStrike.Text = "0.0"
    '                    txtStrike.Enabled = False
    '                    txtStrike.BackColor = Color.LightGray
    '                    lblSolveForType.Text = "Strike (%)"
    '                End If

    '                Dim strStrike As String = SetNumberFormat(dtROrderDetails.Rows(0)(RedirectOrderDetails.StrikePercentage).ToString.Trim, 2)
    '                If strStrike = "&nbsp;" Then
    '                    txtStrike.Text = "0.0"
    '                Else
    '                    txtStrike.Text = strStrike
    '                End If

    '                Dim strELNPrice As String = SetNumberFormat(dtROrderDetails.Rows(0)(RedirectOrderDetails.PricePercentage).ToString.Trim, 2)

    '                If strELNPrice = "&nbsp;" Then
    '                    txtELNPrice.Text = "0.0"
    '                Else
    '                    txtELNPrice.Text = strELNPrice
    '                End If

    '                Dim strOrderqty As String = SetNumberFormat(dtROrderDetails.Rows(0)(RedirectOrderDetails.Notional).ToString.Trim, 2)
    '                txtQuantity.Text = strOrderqty

    '                panelELN.Enabled = False
    '                upnl1.Update()

    '                tblRFQGridHolder.Disabled = True
    '                upnlGrid.Update()

    '                btnSolveAll.Enabled = True

    '                Call getRange()
    '            Else
    '                lblerror.Text = "Received invalid Order ID."
    '            End If
    '        End If
    '    Catch ex As Exception
    '        Throw ex
    '    End Try
    'End Sub

    Private Function setExchangeByShare(ByVal _ddlShare As RadComboBox) As String
        Dim sExchangeName As String
        Try
            sExchangeName = ""
	     ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
            'If _ddlShare.SelectedItem.Value.Trim = "" Then
            If _ddlShare.SelectedValue.Trim = "" Then
                sExchangeName = ""
            Else
                If (Not IsNothing(CType(Session("Share_Value"), DataTable)) AndAlso CType(Session("Share_Value"), DataTable).Rows.Count > 0) Then
                    Dim drShareData As DataRow
                    drShareData = CType(Session("Share_Value"), DataTable).Select("Code = '" + _ddlShare.SelectedValue.ToString + "'")(0)
                    sExchangeName = drShareData.Item("ExchangeCode").ToString + " - " + drShareData.Item("ExchangeName").ToString
                Else
                    objELNRFQ.GetShareExchange(_ddlShare.SelectedValue.ToString, sExchangeName)
                End If
            End If

            Return sExchangeName
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Private Function SelectIntoDataTable(ByVal selectFilter As String, ByVal sourceDataTable As DataTable) As DataTable
        Try
            Dim newDataTable As DataTable = sourceDataTable.Clone
            Dim dataRows As DataRow() = sourceDataTable.Select(selectFilter)
            Dim typeDataRow As DataRow

            For Each typeDataRow In dataRows
                newDataTable.ImportRow(typeDataRow)
            Next
            Return newDataTable
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Sub getCurrency(ByVal Share As String, Optional ByRef sCcy As String = "")
        Dim sShareCcy As String
        Try
            Dim dtBaseCCY As DataTable
            sShareCcy = ""
            If Share.Trim = "" Then
                sCcy = ""
            Else
                If (Not IsNothing(CType(Session("Share_Value"), DataTable)) AndAlso CType(Session("Share_Value"), DataTable).Rows.Count > 0) Then
                    sShareCcy = CType(Session("Share_Value"), DataTable).Select("Code = '" + Share.Trim + "'")(0)("Ccy").ToString
                    If tabContainer.ActiveTabIndex = 0 Then
                    ElseIf tabContainer.ActiveTabIndex = 2 Then
                    End If
                    sCcy = sShareCcy
                Else
                    dtBaseCCY = New DataTable("Dummy")

                    Select Case objELNRFQ.DB_GetBASECCY(Share, dtBaseCCY)
                        Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                            sCcy = dtBaseCCY.Rows(0)(0).ToString
                        Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data

                        Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                    End Select
                End If
            End If


        Catch ex As Exception
            lblerror.Text = "getCurrency:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "getCurrency", ErrorLevel.High)
            Throw ex
        End Try
    End Sub

    Public Sub DrawColumnChart(ByVal _ChartData As DataTable, _
                      ByVal _AxisXValueMember As String, _
                      ByVal _AxisYValueMember As String, _
                      ByVal Chart As System.Web.UI.DataVisualization.Charting.Chart, _
                      ByVal _SeriesName As String, _
                      ByVal _ShowValuesWithAmountMultiplier As Boolean, _
                      ByVal _ChartTitle As String, ByVal strChartType As System.Web.UI.DataVisualization.Charting.SeriesChartType)
        Dim i As Integer = 0
        Try
            Dim colorBackGround As Color
            colorBackGround = Color.FromArgb(252, 252, 252)

            Chart.Series.Clear()

            ''Set Chart
            Chart.BackColor = colorBackGround

            Chart.BackGradientStyle = _ChartBackGradientStyle
            Chart.BorderlineDashStyle = _ChartBorderlineDashStyle
            Chart.BorderSkin.SkinStyle = _ChartBorderSkinStyle

            Chart.ChartAreas("Default").BackColor = colorBackGround
            Chart.ChartAreas("Default").BackGradientStyle = GradientStyle.None
            Chart.ChartAreas("Default").InnerPlotPosition.X = 12
            Chart.ChartAreas("Default").InnerPlotPosition.Y = 10
            Chart.ChartAreas("Default").AxisX.TitleFont = New Font("arial", 1.0F, FontStyle.Regular)
            Chart.ChartAreas("Default").AxisY.TitleFont = New Font("arial", 1.0F, FontStyle.Regular)
            Chart.ChartAreas("Default").InnerPlotPosition.Height = 80
            Chart.ChartAreas("Default").InnerPlotPosition.Width = 80
            Chart.ChartAreas("Default").InnerPlotPosition.Auto = False
            Chart.Legends("Default").Enabled = True
            Chart.Legends(0).Docking = _DockingLocation

            If _ChartData Is Nothing OrElse _ChartData.Rows.Count = 0 Then
                Throw New Exception("No data to display")
            End If

            If Not _ChartData.Columns.Contains(_AxisXValueMember) Then
                Throw New Exception("Column " & _AxisXValueMember & " not found in datasource.")
            End If

            If Not _ChartData.Columns.Contains(_AxisYValueMember) Then
                Throw New Exception("Column " & _AxisYValueMember & " not found in datasource.")
            End If


            Chart.Series.Add(_SeriesName)

            Chart.Series(0).ChartType = strChartType
            Chart.Series(0).Color = System.Drawing.Color.FromArgb(CInt(CByte(180)), CInt(CByte(65)), CInt(CByte(140)), CInt(CByte(240)))
            Chart.Series(0).Font = New Font("arial", 1.0F, FontStyle.Regular)

            Chart.Legends(0).Enabled = False
            Chart.Legends(0).BackColor = colorBackGround
            Chart.Legends(0).Font = New Font("arial", 1.0F, FontStyle.Regular)
            Chart.Series(0).MarkerSize = 0
            Chart.Series(0).MarkerStyle = System.Web.UI.DataVisualization.Charting.MarkerStyle.None
            Chart.Series(0).XValueMember = _AxisXValueMember
            Chart.Series(0).YValueMembers = _AxisYValueMember

            Chart.Series(0).Label = "#VALY{N0}"

            Chart.ChartAreas(0).ShadowColor = System.Drawing.Color.Transparent

            Chart.ChartAreas("Default").Area3DStyle.Enable3D = False

            Chart.DataSource = _ChartData
            Chart.DataBind()
            Dim strcount As Integer = Chart.Series(0).Points.Count

            For i = 0 To strcount - 1
                Select Case Chart.Series(0).Points.Item(i).AxisLabel
                    Case "JPM"
                        Chart.Series(0).Points(i).Color = Me.structChartColors.JPM
                    Case "HSBC"
                        Chart.Series(0).Points(i).Color = Me.structChartColors.HSBC
                    Case "CS"
                        Chart.Series(0).Points(i).Color = Me.structChartColors.CS
                    Case "BNPP"
                        Chart.Series(0).Points(i).Color = Me.structChartColors.BNPP
                    Case "UBS"
                        Chart.Series(0).Points(i).Color = Me.structChartColors.UBS
                    Case "DB"
                        Chart.Series(0).Points(i).Color = Me.structChartColors.DBIB
                    Case "OCBC"
                        Chart.Series(0).Points(i).Color = Me.structChartColors.OCBC
                    Case "CITI"
                        Chart.Series(0).Points(i).Color = Me.structChartColors.CITI
                    Case "LEONTEQ"
                        Chart.Series(0).Points(i).Color = Me.structChartColors.LEONTEQ
                    Case "COMMERZ"
                        Chart.Series(0).Points(i).Color = Me.structChartColors.COMMERZ
                    Case "BAML"
                        Chart.Series(0).Points(i).Color = Me.structChartColors.BAML
                End Select
            Next
            Chart.Series(0)("PointWidth") = "0.3"

            If strcount = 1 Then
                Chart.ChartAreas("Default").InnerPlotPosition.Width = 20 ''55
            End If

            upnlChart.Update()
        Catch ex As Exception
            lblerror.Text = "DrawColumnChart:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "DrawColumnChart", ErrorLevel.High)
            Throw ex
        End Try
    End Sub

    Public Function CheckGUVsTenor(ByVal TenorType As String, ByVal TenorValue As String, ByVal GUType As String, ByVal GUValue As String) As Boolean
        Dim intTenorDays As Long = 0
        Dim intGuranteedDays As Long = 0
        Dim ToDate As Date
        Try
            Select Case TenorType.ToUpper
                Case "MONTH"
                    ToDate = DateAdd(DateInterval.Month, Val(TenorValue), Date.Today)
                Case "WEEK"
                    ToDate = DateAdd(DateInterval.Day, (Val(TenorValue) * 7), Date.Today)
                Case "DAY"
                    ToDate = DateAdd(DateInterval.Day, Val(TenorValue), Date.Today)
                Case "YEAR"
                    ToDate = DateAdd(DateInterval.Year, Val(TenorValue), Date.Today)
            End Select

            intTenorDays = DateDiff(DateInterval.Day, Date.Today, ToDate)

            Select Case GUType.ToUpper
                Case "MONTH"
                    ToDate = DateAdd(DateInterval.Month, Val(GUValue), Date.Today)
                Case "WEEK"
                    ToDate = DateAdd(DateInterval.Day, (Val(GUValue) * 7), Date.Today)
                Case "DAY"
                    ToDate = DateAdd(DateInterval.Day, Val(GUValue), Date.Today)
                Case "YEAR"
                    ToDate = DateAdd(DateInterval.Year, Val(GUValue), Date.Today)
            End Select

            intGuranteedDays = DateDiff(DateInterval.Day, Date.Today, ToDate)
            If intGuranteedDays >= intTenorDays Then
                Return False
            End If
            Return True
        Catch ex As Exception
            lblerror.Text = "CheckGUVsTenor:Error occurred in Processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "CheckGUVsTenor", ErrorLevel.High)
            Throw ex
        End Try
    End Function

    Private Sub tabContainer_ActiveTabChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles tabContainer.ActiveTabChanged
        Select Case tabContainer.ActiveTabIndex
            Case prdTab.ELN
                Response.Redirect("../ELN_DealEntry1/ELN_RFQL1.aspx?menustr=EQ%20Sales%20-%20EQ%20RFQ%20And%20Order%20Entry&Mode=" + UCase(Request.QueryString("Mode")) + "&token=", False)
            Case prdTab.DRA
                Response.Redirect("../ELN_DealEntry1/DRAFCNRFQ1.aspx?menustr=EQ%20Sales%20-%20DRA%20RFQ%20And%20Order%20Entry&Mode=" + UCase(Request.QueryString("Mode")) + "&token=&PrdToLoad=DRA", False)
            Case prdTab.FCN
                Response.Redirect("../ELN_DealEntry1/DRAFCNRFQ1.aspx?menustr=EQ%20Sales%20-%20FCN%20RFQ%20And%20Order%20Entry&Mode=" + UCase(Request.QueryString("Mode")) + "&token=&PrdToLoad=FCN", False)
            Case prdTab.Acc
                Response.Redirect("../ELN_DealEntry1/AccDecRFQ1.aspx?menustr=EQ%20Sales%20-%20Acc%20RFQ%20And%20Order%20Entry&Mode=" + UCase(Request.QueryString("Mode")) + "&token=&PrdToLoad=ACCUMULATOR", False)
            Case prdTab.Dec
                Response.Redirect("../ELN_DealEntry1/AccDecRFQ1.aspx?menustr=EQ%20Sales%20-%20Dec%20RFQ%20And%20Order%20Entry&Mode=" + UCase(Request.QueryString("Mode")) + "&token=&PrdToLoad=DECUMULATOR", False) '<AvinashG. on 24-Jan-2016: >
            Case prdTab.EQO
                Response.Redirect("../ELN_DealEntry1/EQORFQ1.aspx?menustr=EQ%20Sales%20-%EQO%20RFQ%20And%20Order%20Entry&Mode=" + UCase(Request.QueryString("Mode")) + "&token=", False) '<AvinashG. on 24-Jan-2016: >
        End Select
    End Sub

    Private Sub btnEMLMailTrial_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnEMLMailTrial.Click
        Dim sMailBodyTemplate As String
        Dim EmailtemplateFilePath As String = ""
        Dim sUnderlyingTicker, sUnderlyingTicker2, sUnderlyingTicker3 As String
        Dim hashRFQID As Hashtable
        Dim hashPPId As Hashtable
        Dim bestPP As String
        Dim RFQID As String
        Dim Issuer As String
        Dim Yield As String
        Dim PriceOrStrike As String
        Dim mailFileName As String
        Dim sDayCount As String
        Try
            hashPPId = New Hashtable
            hashRFQID = New Hashtable

            Select Case objReadConfig.ReadConfig(dsConfig, "EQC_MailText_Narration_AS", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "TEXT").Trim.ToUpper
                Case "DOCGEN"

                    hashRFQID = CType(Session("Hash_Values"), Hashtable)
                    hashPPId = CType(Session("PP_IdTable"), Hashtable)
                    bestPP = CheckBestPriceForEmail()

                    Select Case hdnBestProvider.Value
                        Case "JPM"
                            PriceOrStrike = lblJPMPrice.Text
                            Issuer = "JPM"
                            Yield = lblJPMClientYield.Text
                            If Convert.ToString(Session("flag")) = "I" Then
                                RFQID = CStr(hashRFQID(hashPPId("JPM")))
                            Else
                                RFQID = Convert.ToString(Session("JPMQuote"))
                            End If
                        Case "HSBC"
                            PriceOrStrike = lblHSBCPrice.Text
                            Issuer = "HSBC"
                            Yield = lblHSBCClientYield.Text
                            If Convert.ToString(Session("flag")) = "I" Then
                                RFQID = CStr(hashRFQID(hashPPId("HSBC")))
                            Else
                                RFQID = Convert.ToString(Session("HSBCQuote"))
                            End If
                        Case "CS"
                            PriceOrStrike = lblCSPrice.Text
                            Issuer = "CS"
                            Yield = lblCSClientYield.Text
                            If Convert.ToString(Session("flag")) = "I" Then
                                RFQID = CStr(hashRFQID(hashPPId("CS")))
                            Else
                                RFQID = Convert.ToString(Session("CSQuote"))
                            End If
                        Case "UBS"
                            PriceOrStrike = lblUBSPrice.Text
                            Issuer = "UBS"
                            Yield = lblUBSClientYield.Text
                            If Convert.ToString(Session("flag")) = "I" Then
                                RFQID = CStr(hashRFQID(hashPPId("UBS")))
                            Else
                                RFQID = Convert.ToString(Session("UBSQuote"))
                            End If
                        Case "BNPP"
                            PriceOrStrike = lblBNPPPrice.Text
                            Issuer = "BNPP"
                            Yield = lblBNPPClientYield.Text
                            If Convert.ToString(Session("flag")) = "I" Then
                                RFQID = CStr(hashRFQID(hashPPId("BNPP")))
                            Else
                                RFQID = Convert.ToString(Session("BNPPQuote"))
                            End If
                        Case "BAML"
                            PriceOrStrike = lblBAMLPrice.Text
                            Issuer = "BAML"
                            Yield = lblBAMLClientYield.Text
                            If Convert.ToString(Session("flag")) = "I" Then
                                RFQID = CStr(hashRFQID(hashPPId("BAML")))
                            Else
                                RFQID = Convert.ToString(Session("BAMLQuote"))
                            End If
                        Case "DBIB" ''Comparing with ID
                            PriceOrStrike = lblDBIBPrice.Text
                            Issuer = "DB"
                            Yield = lblDBIBClientYield.Text
                            If Convert.ToString(Session("flag")) = "I" Then
                                RFQID = CStr(hashRFQID(hashPPId("DB")))
                            Else
                                RFQID = Convert.ToString(Session("DBIBQuote"))
                            End If
                        Case "OCBC"
                            PriceOrStrike = lblOCBCPrice.Text
                            Issuer = "OCBC"
                            Yield = lblOCBCClientYield.Text
                            If Convert.ToString(Session("flag")) = "I" Then
                                RFQID = CStr(hashRFQID(hashPPId("OCBC")))
                            Else
                                RFQID = Convert.ToString(Session("OCBCQuote"))
                            End If
                        Case "CITI"
                            PriceOrStrike = lblCITIPrice.Text
                            Issuer = "CITI"
                            Yield = lblCITIClientYield.Text
                            If Convert.ToString(Session("flag")) = "I" Then
                                RFQID = CStr(hashRFQID(hashPPId("CITI")))
                            Else
                                RFQID = Convert.ToString(Session("CITIQuote"))
                            End If
                        Case "LEONTEQ"
                            PriceOrStrike = lblLEONTEQPrice.Text
                            Issuer = "LEONTEQ"
                            Yield = lblLEONTEQClientYield.Text
                            If Convert.ToString(Session("flag")) = "I" Then
                                RFQID = CStr(hashRFQID(hashPPId("LEONTEQ")))
                            Else
                                RFQID = Convert.ToString(Session("LEONTEQQuote"))
                            End If
                        Case "COMMERZ"
                            PriceOrStrike = lblCOMMERZPrice.Text
                            Issuer = "COMMERZ"
                            Yield = lblCOMMERZClientYield.Text
                            If Convert.ToString(Session("flag")) = "I" Then
                                RFQID = CStr(hashRFQID(hashPPId("COMMERZ")))
                            Else
                                RFQID = Convert.ToString(Session("COMMERZQuote"))
                            End If
                        Case Nothing, ""
                            PriceOrStrike = ""
                            Issuer = ""
                            Yield = ""

                    End Select

                    If RFQID Is Nothing Or RFQID = "" Or PriceOrStrike = "" Or PriceOrStrike.ToUpper = "REJECTED" Then
                        lblerror.ForeColor = Color.Red
                        lblerror.Text = "No price available for mailing!"
                        Exit Sub
                    End If
                    Dim strFileName As String
                    Dim strDocGenVirtualPath As String
                    strFileName = generateDocument.StartDocumentGeneration(LoginInfoGV.Login_Info.LoginId, ddlDRAType.SelectedValue.ToUpper, "SEND_QUOTE_EMAIL", RFQID, "ELN_DEAL", LoginInfoGV.Login_Info.EntityID.ToString, LoginInfoGV.Login_Info.GlobalServerDateTime, 1)

                    'Dim strTempPath As String
                    'strTempPath = "C:/FinIQ/dat/Templates/DCD/MY/Termsheet.html"

                    'strFileName = Path.GetFileName(strFileName)
                    'strDocGenVirtualPath = objReadConfig.ReadConfig(New DataSet, "WebDocGen_VirtualPath", "DocGen", CStr(LoginInfoGV.Login_Info.EntityID), "")

                    'Dim str As String = String.Empty
                    'str = LoginInfoGV.Login_Info.WebServicePath & "/../" & strDocGenVirtualPath & "/" & strFileName
                    'Dim FileText As String = File.ReadAllText(str)
                    Dim FileText As String = File.ReadAllText(strFileName)
                    ''Dim FileText As String = File.ReadAllText(strTempPath)
                    'str = str & "window.open('" & LoginInfoGV.Login_Info.WebServicePath & "/../" & strDocGenVirtualPath & "/" & strFileName & "','Confirmation','scrollbars=yes,resizable=yes,menubar=0,status=0,width=1500,height=300');"
                    'Page.ClientScript.RegisterStartupScript(Me.GetType, "Confirmation", str, True)

                    replaceClassToStyle(FileText)

                    Dim mailSubject As New StringBuilder
                    If ddlDRAType.SelectedValue.ToString.Trim.ToUpper = "DRA" Then
                        mailSubject.Append(objReadConfig.ReadConfig(dsConfig, "EQC_QuoteMailSubjectBankName", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), " <EQ_Connect RFQ>").Replace("&lt;", "<").Replace("&gt;", ">"))
                        mailSubject.Append(" " + txtTenorDRA.Text.ToString.Trim + " " + ddlTenorTypeDRA.SelectedItem.Text)
                        mailSubject.Append(" " + lblNoteCcy.Text.ToString.Trim)
                        mailSubject.Append(" " + If(chkKI.Checked, "DRA KI", "DRA") + " on ")
                        'mailSubject.Append(" DRA on ")
                    Else
                        mailSubject.Append(objReadConfig.ReadConfig(dsConfig, "EQC_QuoteMailSubjectBankName", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), " <EQ_Connect RFQ>").Replace("&lt;", "<").Replace("&gt;", ">"))
                        mailSubject.Append(" " + txtTenorDRA.Text.ToString.Trim + " " + ddlTenorTypeDRA.SelectedItem.Text)
                        mailSubject.Append(" " + lblNoteCcy.Text.ToString.Trim)
                        mailSubject.Append(" " + If(chkKI.Checked, "FCN KI", "FCN") + " on ")
                        'mailSubject.Append(" FCN on ")
                    End If

                    Dim strUnderlyingTicker As String = getUnderlyingTicker(ddlShareDRA.Text)
                    Dim strDRAUnderlying2 As String = If(chkAddShare2.Checked, If(ddlShareDRA2.SelectedValue Is Nothing Or ddlShareDRA2.SelectedValue = "", "", ddlShareDRA2.Text), "")
                    strDRAUnderlying2 = If(strDRAUnderlying2 <> "", getUnderlyingTicker(strDRAUnderlying2), "")
                    Dim strDRAUnderlying3 As String = If(chkAddShare3.Checked, If(ddlShareDRA3.SelectedValue Is Nothing Or ddlShareDRA3.SelectedValue = "", "", ddlShareDRA3.Text), "")
                    strDRAUnderlying3 = If(strDRAUnderlying3 <> "", getUnderlyingTicker(strDRAUnderlying3), "")

                    Dim sSubjectBasket As String = strUnderlyingTicker
                    If strDRAUnderlying2 <> "" Then
                        sSubjectBasket += ", " + strDRAUnderlying2
                        If strDRAUnderlying3 <> "" Then
                            sSubjectBasket += ", " + strDRAUnderlying3
                        End If
                    End If
                    mailSubject.Append(If(sSubjectBasket.EndsWith(", "), sSubjectBasket.Substring(0, sSubjectBasket.LastIndexOf(", ")), sSubjectBasket))

                    Dim strLoginUserEmail As String = objELNRFQ.web_Get_EmailOf_Login_User(LoginInfoGV.Login_Info.LoginId)
                   

                    Dim dtImageDetails As DataTable
                    dtImageDetails = New DataTable("dtImageDetails")
                    dtImageDetails.Columns.Add("imageID", GetType(String))
                    dtImageDetails.Columns.Add("imagePath", GetType(String))
                    dtImageDetails.Rows.InsertAt(dtImageDetails.NewRow(), 0)
                    dtImageDetails.Rows(0).Item(0) = "Image"
                    If ddlDRAType.SelectedValue.ToUpper = "DRA" Then
                        dtImageDetails.Rows(0).Item(1) = System.Web.HttpContext.Current.Server.MapPath("..\..\FinIQWebApp\ELN_DealEntry1\Images\EmailPrdHeaders\DRA_Header.png")
                    Else
                        dtImageDetails.Rows(0).Item(1) = System.Web.HttpContext.Current.Server.MapPath("..\..\FinIQWebApp\ELN_DealEntry1\Images\EmailPrdHeaders\FCN_Header.png")
                    End If

                    ''<TRDS Email Code>
                    'dtImageDetails.Rows.InsertAt(dtImageDetails.NewRow(), 1)
                    'dtImageDetails.Rows(1).Item(0) = "GraphSample"
                    'dtImageDetails.Rows(1).Item(1) = System.Web.HttpContext.Current.Server.MapPath("..\..\FinIQWebApp\ELN_DealEntry1\Images\EmailPrdHeaders\StockGraphSample.png")

                    Dim sGraphImagePath As String = ""
                    ''sGraphImagePath = "E:\MailingHeaders\FromTRDS\graph_" + ddlShareDRA.SelectedValue + "_" + RFQID + ".gif"
                    sGraphImagePath = objReadConfig.ReadConfig(dsConfig, "EQC_QuoteEmailGraphImagePath", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "C:\FinIQ\Product_Info\GraphImagePath\")
                    sGraphImagePath = sGraphImagePath + ddlShareDRA.SelectedValue + "_" + RFQID + ".gif"

                    Dim tImage As Image = getEmailGraphImage(RFQID, ddlShareDRA.SelectedValue, "TRDS1")
                    If tImage Is Nothing Then
                        dtImageDetails.Rows.InsertAt(dtImageDetails.NewRow(), 1)
                        dtImageDetails.Rows(1).Item(0) = "GraphSample"
                        dtImageDetails.Rows(1).Item(1) = System.Web.HttpContext.Current.Server.MapPath("..\..\FinIQWebApp\ELN_DealEntry1\Images\EmailPrdHeaders\GraphNotFound.PNG")
                    Else
                        tImage.Save(sGraphImagePath, System.Drawing.Imaging.ImageFormat.Gif)
                        dtImageDetails.Rows.InsertAt(dtImageDetails.NewRow(), 1)
                        dtImageDetails.Rows(1).Item(0) = "GraphSample"
                        dtImageDetails.Rows(1).Item(1) = sGraphImagePath
                    End If

                    If (txtBasketShares.Text.Split(CChar(",")).Length >= 2) Then
                        Dim sGraphImagePath2 As String = ""
                        'sGraphImagePath2 = "E:\MailingHeaders\FromTRDS\graph_" + ddlShareDRA2.SelectedValue + "_" + RFQID + ".gif"
                        sGraphImagePath2 = objReadConfig.ReadConfig(dsConfig, "EQC_QuoteEmailGraphImagePath", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "C:\FinIQ\Product_Info\GraphImagePath\")
                        sGraphImagePath2 = sGraphImagePath + ddlShareDRA2.SelectedValue + "_" + RFQID + ".gif"

                        Dim tImage2 As Image = getEmailGraphImage(RFQID, ddlShareDRA2.SelectedValue, "TRDS2")
                        If tImage2 Is Nothing Then
                            dtImageDetails.Rows.InsertAt(dtImageDetails.NewRow(), 1)
                            dtImageDetails.Rows(2).Item(0) = "GraphSample2"
                            dtImageDetails.Rows(2).Item(1) = System.Web.HttpContext.Current.Server.MapPath("..\..\FinIQWebApp\ELN_DealEntry1\Images\EmailPrdHeaders\GraphNotFound.PNG")
                        Else
                            tImage2.Save(sGraphImagePath2, System.Drawing.Imaging.ImageFormat.Gif)

                            dtImageDetails.Rows.InsertAt(dtImageDetails.NewRow(), 2)
                            dtImageDetails.Rows(2).Item(0) = "GraphSample2"
                            dtImageDetails.Rows(2).Item(1) = sGraphImagePath2
                        End If
                    End If

                        If (txtBasketShares.Text.Split(CChar(",")).Length = 3) Then
                            Dim sGraphImagePath3 As String = ""
                            'sGraphImagePath3 = "E:\MailingHeaders\FromTRDS\graph_" + ddlShareDRA3.SelectedValue + "_" + RFQID + ".gif"
                            sGraphImagePath3 = objReadConfig.ReadConfig(dsConfig, "EQC_QuoteEmailGraphImagePath", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "C:\FinIQ\Product_Info\GraphImagePath\")
                            sGraphImagePath3 = sGraphImagePath + ddlShareDRA3.SelectedValue + "_" + RFQID + ".gif"

                        Dim tImage3 As Image = getEmailGraphImage(RFQID, ddlShareDRA3.SelectedValue, "TRDS3")
                        If tImage3 Is Nothing Then
                            dtImageDetails.Rows.InsertAt(dtImageDetails.NewRow(), 1)
                            dtImageDetails.Rows(3).Item(0) = "GraphSample3"
                            dtImageDetails.Rows(3).Item(1) = System.Web.HttpContext.Current.Server.MapPath("..\..\FinIQWebApp\ELN_DealEntry1\Images\EmailPrdHeaders\GraphNotFound.PNG")
                        Else
                            tImage3.Save(sGraphImagePath3, System.Drawing.Imaging.ImageFormat.Gif)
                            dtImageDetails.Rows.InsertAt(dtImageDetails.NewRow(), 3)
                            dtImageDetails.Rows(3).Item(0) = "GraphSample3"
                            dtImageDetails.Rows(3).Item(1) = sGraphImagePath3
                        End If
                    End If
                        ''</TRDS Email Code>

                        Dim filePath As String
                        Dim fileName As String
                        filePath = objReadConfig.ReadConfig(dsConfig, "EQC_ProductKYIRPath", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "C:\FinIQ\Product_Info\")
                        Select Case tabContainer.ActiveTabIndex
                            Case prdTab.DRA
                                fileName = "KYIR - DRA.pdf"
                            Case prdTab.FCN
                                fileName = "KYIR - FCN.pdf"
                        End Select
                        filePath = filePath + fileName

                        If oWEBADMIN.Notify_ToDealerDeskGroupEmailID_imageContent(LoginInfoGV.Login_Info.EntityID.ToString(), _
                                                                                           LoginInfoGV.Login_Info.LoginId, strLoginUserEmail, FileText, mailSubject.ToString(), filePath, dtImageDetails, "") Then
                            lblerror.Text = "Email sent successfully."
                        Else
                            lblerror.Text = "Email sending failed."
                        End If
                        If File.Exists(strFileName) Then
                            File.Delete(strFileName)
                        End If
                Case "TEXT"
                        System.Web.UI.ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "hideEmail13", "mailtoMail();", True)
                Case "HTML"

                        hashRFQID = CType(Session("Hash_Values"), Hashtable)
                        hashPPId = CType(Session("PP_IdTable"), Hashtable)
                        bestPP = CheckBestPriceForEmail()


                        EmailtemplateFilePath = System.Web.HttpContext.Current.Server.MapPath("BasicMailTemplate.eml")    ''mangesh wakode 26 nov 2015  Relative path  
                        '' sMailBodyTemplate = System.IO.File.ReadAllText("C:\inetpub\wwwroot\FinIQWebApp\ELN_DealEntry_Layout10\BasicMailTemplate.eml")
                        sMailBodyTemplate = System.IO.File.ReadAllText(EmailtemplateFilePath)
                        ''mangesh wakode 25 nov 2015 
                        Dim strMailHTML As String = ""


                        Dim mailSubject As New StringBuilder     ''mangesh wakode 26 nov 2015  for mail subject
                        ''mangesh wakode 26 nov 2015 for quote mail narration tab wise 

                        Select Case bestPP
                            Case "JPM"
                                PriceOrStrike = lblJPMPrice.Text
                                Issuer = "JPM"
                                Yield = lblJPMClientYield.Text
                                If Convert.ToString(Session("flag")) = "I" Then
                                    RFQID = CStr(hashRFQID(hashPPId("JPM")))
                                Else
                                    RFQID = Convert.ToString(Session("JPMQuote"))
                                End If
                            Case "HSBC"
                                PriceOrStrike = lblHSBCPrice.Text
                                Issuer = "HSBC"
                                Yield = lblHSBCClientYield.Text
                                If Convert.ToString(Session("flag")) = "I" Then
                                    RFQID = CStr(hashRFQID(hashPPId("HSBC")))
                                Else
                                    RFQID = Convert.ToString(Session("HSBCQuote"))
                                End If
                            Case "CS"
                                PriceOrStrike = lblCSPrice.Text
                                Issuer = "CS"
                                Yield = lblCSClientYield.Text
                                If Convert.ToString(Session("flag")) = "I" Then
                                    RFQID = CStr(hashRFQID(hashPPId("CS")))
                                Else
                                    RFQID = Convert.ToString(Session("CSQuote"))
                                End If
                            Case "UBS"
                                PriceOrStrike = lblUBSPrice.Text
                                Issuer = "UBS"
                                Yield = lblUBSClientYield.Text
                                If Convert.ToString(Session("flag")) = "I" Then
                                    RFQID = CStr(hashRFQID(hashPPId("UBS")))
                                Else
                                    RFQID = Convert.ToString(Session("UBSQuote"))
                                End If
                            Case "BNPP"
                                PriceOrStrike = lblBNPPPrice.Text
                                Issuer = "BNPP"
                                Yield = lblBNPPClientYield.Text
                                If Convert.ToString(Session("flag")) = "I" Then
                                    RFQID = CStr(hashRFQID(hashPPId("BNPP")))
                                Else
                                    RFQID = Convert.ToString(Session("BNPPQuote"))
                                End If
                            Case "BAML"
                                PriceOrStrike = lblBAMLPrice.Text
                                Issuer = "BAML"
                                Yield = lblBAMLClientYield.Text
                                If Convert.ToString(Session("flag")) = "I" Then
                                    RFQID = CStr(hashRFQID(hashPPId("BAML")))
                                Else
                                    RFQID = Convert.ToString(Session("BAMLQuote"))
                                End If
                            Case "DBIB" ''Comparing with ID
                                PriceOrStrike = lblDBIBPrice.Text
                                Issuer = "DB"
                                Yield = lblDBIBClientYield.Text
                                If Convert.ToString(Session("flag")) = "I" Then
                                    RFQID = CStr(hashRFQID(hashPPId("DB")))
                                Else
                                    RFQID = Convert.ToString(Session("DBIBQuote"))
                                End If
                            Case "OCBC"
                                PriceOrStrike = lblOCBCPrice.Text
                                Issuer = "OCBC"
                                Yield = lblOCBCClientYield.Text
                                If Convert.ToString(Session("flag")) = "I" Then
                                    RFQID = CStr(hashRFQID(hashPPId("OCBC")))
                                Else
                                    RFQID = Convert.ToString(Session("OCBCQuote"))
                                End If
                            Case "CITI"
                                PriceOrStrike = lblCITIPrice.Text
                                Issuer = "CITI"
                                Yield = lblCITIClientYield.Text
                                If Convert.ToString(Session("flag")) = "I" Then
                                    RFQID = CStr(hashRFQID(hashPPId("CITI")))
                                Else
                                    RFQID = Convert.ToString(Session("CITIQuote"))
                                End If
                            Case "LEONTEQ"
                                PriceOrStrike = lblLEONTEQPrice.Text
                                Issuer = "LEONTEQ"
                                Yield = lblLEONTEQClientYield.Text
                                If Convert.ToString(Session("flag")) = "I" Then
                                    RFQID = CStr(hashRFQID(hashPPId("LEONTEQ")))
                                Else
                                    RFQID = Convert.ToString(Session("LEONTEQQuote"))
                                End If
                            Case "COMMERZ"
                                PriceOrStrike = lblCOMMERZPrice.Text
                                Issuer = "COMMERZ"
                                Yield = lblCOMMERZClientYield.Text
                                If Convert.ToString(Session("flag")) = "I" Then
                                    RFQID = CStr(hashRFQID(hashPPId("COMMERZ")))
                                Else
                                    RFQID = Convert.ToString(Session("COMMERZQuote"))
                                End If
                            Case Nothing, ""
                                PriceOrStrike = ""
                                Issuer = ""
                                Yield = ""

                        End Select

                        If RFQID Is Nothing Or RFQID = "" Then
                            lblerror.ForeColor = Color.Red
                            lblerror.Text = "No price available for mailing!"
                            Exit Sub
                        End If
                        ''Rushikesh 14Jan2016:- For Share load on lazyload change item to value
                        sUnderlyingTicker = getUnderlyingTicker(ddlShareDRA.Text)
                        'Dim sDRAUnderlying2 As String = If(chkAddShare2.Checked, If(ddlShareDRA2.SelectedItem Is Nothing Or ddlShareDRA2.SelectedValue = "", "", ddlShareDRA2.Text), "")
                        Dim sDRAUnderlying2 As String = If(chkAddShare2.Checked, If(ddlShareDRA2.SelectedValue Is Nothing Or ddlShareDRA2.SelectedValue = "", "", ddlShareDRA2.Text), "")
                        sUnderlyingTicker2 = If(sDRAUnderlying2 <> "", getUnderlyingTicker(sDRAUnderlying2), "")
                        'Dim sDRAUnderlying3 As String = If(chkAddShare3.Checked, If(ddlShareDRA3.SelectedItem Is Nothing Or ddlShareDRA3.SelectedValue = "", "", ddlShareDRA3.Text), "")
                        Dim sDRAUnderlying3 As String = If(chkAddShare3.Checked, If(ddlShareDRA3.SelectedValue Is Nothing Or ddlShareDRA3.SelectedValue = "", "", ddlShareDRA3.Text), "")
                        sUnderlyingTicker3 = If(sDRAUnderlying3 <> "", getUnderlyingTicker(sDRAUnderlying3), "")

                        If ddlDRAType.SelectedValue.ToString.Trim.ToUpper = "DRA" Then
                            strMailHTML = getQuoteMailHTMLString_DRA(sUnderlyingTicker, sUnderlyingTicker2, sUnderlyingTicker3, _
                                                                     PriceOrStrike, bestPP, Issuer, Yield, RFQID)
                            'mailSubject.Append(" " + RFQID)                                 ''Mangesh wakode <8 dec 2015>RFQ Removed from mail subject as told by Avinash G.
                            '<AvinashG. on 06-Jan-2016: Config based bank name>
                            mailSubject.Append(objReadConfig.ReadConfig(dsConfig, "EQC_QuoteMailSubjectBankName", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), " <EQ_Connect RFQ>").Replace("&lt;", "<").Replace("&gt;", ">"))
                            'mailSubject.Append(" <EQ_Connect RFQ>")   ''Mangesh wakode <8 dec 2015>
                            '<AvinashG. on 06-Jan-2016: Config based bank name>
                            '</AvinashG. on 24-Dec-2015: Tenor not notional >
                            mailSubject.Append(" " + txtTenorDRA.Text.ToString.Trim + " " + ddlTenorTypeDRA.SelectedItem.Text)
                            'mailSubject.Append(" " + txtOrderDRAFCN.Text.ToString.Trim)      ''append notional to subject
                            '</AvinashG. on 24-Dec-2015: Tenor not notional >
                            mailSubject.Append(" " + lblDRABaseCcy.Text.ToString.Trim)       ''append CCy to subject
                            mailSubject.Append(" DRA on ")                                ''append product to subject
                        Else
                            strMailHTML = getQuoteMailHTMLString_FCN(sUnderlyingTicker, sUnderlyingTicker2, sUnderlyingTicker3, _
                                                                     PriceOrStrike, bestPP, Issuer, Yield, RFQID)   ''for fCN
                            'mailSubject.Append(" " + RFQID)                                 ''Mangesh wakode <8 dec 2015>RFQ Removed from mail subject as told by Avinash G.
                            mailSubject.Append(objReadConfig.ReadConfig(dsConfig, "EQC_QuoteMailSubjectBankName", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), " <EQ_Connect RFQ>").Replace("&lt;", "<").Replace("&gt;", ">"))
                            'mailSubject.Append(" <EQ_Connect RFQ>")                          ''Mangesh wakode <8 dec 2015>
                            '</AvinashG. on 24-Dec-2015: Tenor not notional >
                            mailSubject.Append(" " + txtTenorDRA.Text.ToString.Trim + " " + ddlTenorTypeDRA.SelectedItem.Text)
                            'mailSubject.Append(" " + txtOrderDRAFCN.Text.ToString.Trim)      ''append notional to subject
                            '</AvinashG. on 24-Dec-2015: Tenor not notional >
                            mailSubject.Append(" " + lblDRABaseCcy.Text.ToString.Trim)       ''append CCy to subject
                            mailSubject.Append(" FCN on ")                                ''append product to subject
                        End If
                        Dim sSubjectBasket As String = sUnderlyingTicker
                        If sUnderlyingTicker2 <> "" Then
                            sSubjectBasket += ", " + sUnderlyingTicker2
                            If sUnderlyingTicker3 <> "" Then
                                sSubjectBasket += ", " + sUnderlyingTicker3
                            End If
                        End If
                        mailSubject.Append(If(sSubjectBasket.EndsWith(", "), sSubjectBasket.Substring(0, sSubjectBasket.LastIndexOf(", ")), sSubjectBasket))

                        If ddlDRAType.SelectedValue.ToString.Trim.ToUpper = "DRA" Then
                            mailFileName = "EQ_Connect_DRA_" + txtTenorDRA.Text + "_" + ddlTenorTypeDRA.SelectedValue.ToString + "_" + sSubjectBasket + ".eml"
                        Else
                            mailFileName = "EQ_Connect_FCN_" + txtTenorDRA.Text + "_" + ddlTenorTypeDRA.SelectedValue.ToString + "_" + sSubjectBasket + ".eml"
                        End If


                        Dim sMailBody As String = sMailBodyTemplate.Replace("[Mail_subject]", mailSubject.ToString).Replace("[Mail_Body]", strMailHTML)

                        HttpContext.Current.Response.Clear()
                        ' HttpContext.Current.Response.AddHeader("Content-Disposition", "attachment; filename=EQConnect_RFQ_Details_ELN_" + txtTenor.Text + "_" + ddlTenorTypeELN.SelectedItem.Text + If(ddlShare.SelectedItem.Value <> "", ddlShare.SelectedItem.Value, "") + ".eml")
                        HttpContext.Current.Response.AddHeader("Content-Disposition", "attachment; filename=" + mailFileName)
                        HttpContext.Current.Response.Write(sMailBody)

                        HttpContext.Current.Response.Charset = ""
                        HttpContext.Current.Response.Cache.SetCacheability(HttpCacheability.NoCache)
                        HttpContext.Current.Response.ContentType = "application/octet-stream"
                        HttpContext.Current.Response.End()
                        HttpContext.Current.ApplicationInstance.CompleteRequest()
            End Select
            RestoreSolveAll()
            RestoreAll()
            upnlGrid.Update()
        Catch ex As Exception
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                        sSelfPath, "btnEMLMailTrial_Click", ErrorLevel.High)
            Throw ex
        End Try
    End Sub
    Function getEmailGraphImage(ByVal sRFQID As String, ByVal sChareCode As String, ByVal sMode As String) As Image
        Try
            Dim tClient As WebClient = New WebClient
            Dim strImageURL As String
            Dim dtEmailDetails As DataTable
            dtEmailDetails = Nothing
            Dim strTokenCon As String = ""

            strImageURL = ConfigurationManager.AppSettings("quoteEmail_imageUrl")
            If strImageURL <> "" Then
                strImageURL = strImageURL.Replace("[QE_Share]", sChareCode)
                strImageURL = strImageURL.Replace("[QE_Style]", "1")
                strImageURL = strImageURL.Replace("[QE_Int]", "4")
                strImageURL = strImageURL.Replace("[QE_Per]", "11")
                strImageURL = strImageURL.Replace("[QE_Width]", "540")
                strImageURL = strImageURL.Replace("[QE_Height]", "200")

                getQuoteEmailDetails(sRFQID, sMode, dtEmailDetails)
                If dtEmailDetails.Rows.Count > 0 Then
                    Dim strParam As String
                    strParam = "&l=" + dtEmailDetails.Rows(0)("ABSKO").ToString() + ",31CFEF,1" ''AbsKO,lineColor,LineStyle
                    strParam = strParam + "%7C" + dtEmailDetails.Rows(0)("ABSStrike").ToString() + ",428EDE,1" ''AbsStrike,lineColor,LineStyle
                    If chkKI.Checked Then
                        strParam = strParam + "%7C" + dtEmailDetails.Rows(0)("ABSKI").ToString() + ",428E52,1" ''AbsKI,lineColor,LineStyle
                    End If
                    strImageURL = strImageURL.Replace("[QE_Param]", strParam)
                End If

                strTokenCon = objReadConfig.ReadConfig(dsConfig, "EQC_QuoteEmailToken", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "token=2B157F5064B581A671634B2403F9EAAAAC90B9744204D3EA4AAFB995952A182571D71AB3E961D80ABFE91B504277C109C8DEFF69F9A70119F5EA52C9F2FDA9CD940A8E95A6620F94E61539EE1CAEF720")
                strImageURL = strImageURL.Replace("token=[QE_Token]", strTokenCon)
            Else
                LogException(LoginInfoGV.Login_Info.LoginId, "Exception:Graph image url generation failed.", LogType.FnqError, Nothing, _
                        sSelfPath, "getEmailGraphImage", ErrorLevel.High)
                Dim blankImage As Image
                Return blankImage
            End If

            'strImageURL = New StringBuilder()
            'strImageURL.Append("http://t1.trkd-asia.com/finiq/?")
            'strImageURL.Append("sym=" + sChareCode) ''Stock code
            'strImageURL.Append("&style=1") ''Graph Style
            ''int: (Interval)
            ''    4 - Daily Chart
            ''    5 - Weekly Chart
            ''    6 - Monthly Chart
            ''    7 - Quarterly Chart
            'strImageURL.Append("&int=4")
            ''per: (Period)
            ''    7 - 3 Months
            ''    8 - 6 Months
            ''    11 - 1 Year
            ''    12 - 2 Years
            'getQuoteEmailDetails(sRFQID, sMode, dtEmailDetails)
            'strImageURL.Append("&per=11")
            'strImageURL.Append("&w=540") ''Width
            'strImageURL.Append("&h=200") ''Height
            'If dtEmailDetails.Rows.Count > 0 Then
            '    strImageURL.Append("&l=" + dtEmailDetails.Rows(0)("ABSKO").ToString() + ",31CFEF,1") ''AbsKO,lineColor,LineStyle
            '    strImageURL.Append("%7C" + dtEmailDetails.Rows(0)("ABSStrike").ToString() + ",428EDE,1") ''AbsStrike,lineColor,LineStyle
            '    If chkKI.Checked Then
            '        strImageURL.Append("%7C" + dtEmailDetails.Rows(0)("ABSKI").ToString() + ",428E52,1") ''AbsKI,lineColor,LineStyle
            '    End If
            'End If
            '' strImageURL.Append("&token=2B157F5064B581A671634B2403F9EAAAAC90B9744204D3EA4AAFB995952A182571D71AB3E961D80ABFE91B504277C109C8DEFF69F9A70119F5EA52C9F2FDA9CD940A8E95A6620F94E61539EE1CAEF720")
            'strTokenCon = objReadConfig.ReadConfig(dsConfig, "EQC_QuoteEmailToken", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "token=2B157F5064B581A671634B2403F9EAAAAC90B9744204D3EA4AAFB995952A182571D71AB3E961D80ABFE91B504277C109C8DEFF69F9A70119F5EA52C9F2FDA9CD940A8E95A6620F94E61539EE1CAEF720")
            'strImageURL.Append("&" & strTokenCon)

            Return Bitmap.FromStream(New MemoryStream(tClient.DownloadData(strImageURL.ToString)))
        Catch ex As Exception
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                        sSelfPath, "getEmailGraphImage", ErrorLevel.High)
            Dim blankImage As Image
            Return blankImage
        End Try
    End Function

    Sub getQuoteEmailDetails(ByVal sRFQID As String, ByVal sMode As String, ByRef dtEmailDetails As DataTable)
        Select Case objELNRFQ.Web_getQuoteEmailDetails(sRFQID, sMode, dtEmailDetails)
            Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
            Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                ''no data
        End Select
    End Sub

    Sub replaceClassToStyle(ByRef strHtmlText As String)

        Dim strblueHeader As String = "background-color :#003466;color :White ;text-align :left ;height:20 !important"
        Dim strfontCss As String = "font-family :verdana,tahoma,helvetica;font-size :10pt;color:#03316C"
        Dim strouterTR As String = "outline: 2px solid #41ABD1"
        Dim strouterTR3 As String = ""
        Dim strouter4TR As String = ""
        Dim strouter5TR As String = ""

        Dim strouterTR46 As String = ""
        Dim strouterTR56 As String = ""

        Dim isShare2visible As String = ""
        Dim isShare3visible As String = ""

        Dim strFCNorNot As String = ""

        Dim strtrKI As String = ""
        strtrKI = If(chkKI.Checked, "", "display:none;")


        '<Changed By Rushikesh on 08-Oct-2016>
        strouter4TR = If(txtBasketShares.Text.Split(CChar(",")).Length >= 2, "", "display:none")
        strouter5TR = If(txtBasketShares.Text.Split(CChar(",")).Length = 3, "", "display:none")

        strouterTR46 = If(txtBasketShares.Text.Split(CChar(",")).Length >= 2, "", "display:none")
        strouterTR56 = If(txtBasketShares.Text.Split(CChar(",")).Length = 3, "", "display:none")

        isShare2visible = If(txtBasketShares.Text.Split(CChar(",")).Length >= 2, "", "display:none")
        isShare3visible = If(txtBasketShares.Text.Split(CChar(",")).Length = 3, "", "display:none")

        strFCNorNot = If(ddlDRAType.SelectedValue = "FCN", "", "display:none")

        Dim strtableizertable As String = "font-size: 12px;border: 1px solid #CCC;font-family: Arial, Helvetica, sans-serif"
        Dim strtableizer_table_th As String = "background-color: #104E8B;color: #FFF;font-weight: bold"
        Dim strredClass As String = "color: red;font-weight:bold"
        Dim strblueClass As String = "color: #004d99;font-weight:bold"
        Dim strgraybackClass As String = "background-color: #C0C0C0;width:110px"

        strHtmlText = strHtmlText.Replace("trKI", strtrKI)
        strHtmlText = strHtmlText.Replace("graybackClass", strgraybackClass)
        strHtmlText = strHtmlText.Replace("blueHeader", strblueHeader)
        strHtmlText = strHtmlText.Replace("fontCss", strfontCss)
        strHtmlText = strHtmlText.Replace("outerTR", strouterTR)
        strHtmlText = strHtmlText.Replace("outer3TR", strouterTR3)
        strHtmlText = strHtmlText.Replace("outer4TR", strouter4TR)
        strHtmlText = strHtmlText.Replace("outer5TR", strouter5TR)

        strHtmlText = strHtmlText.Replace("tableizer-table", strtableizertable)
        strHtmlText = strHtmlText.Replace("tableizer-table_th", strtableizer_table_th)
        strHtmlText = strHtmlText.Replace("redClass", strredClass)
        strHtmlText = strHtmlText.Replace("blueClass", strblueClass)
        strHtmlText = strHtmlText.Replace("FCNorNot", strFCNorNot)

        strHtmlText = strHtmlText.Replace("outerTR46", strouterTR46)
        strHtmlText = strHtmlText.Replace("outerTR56", strouterTR56)

        strHtmlText = strHtmlText.Replace("cssShare2visible", isShare2visible)
        strHtmlText = strHtmlText.Replace("cssShare3visible", isShare3visible)

        Dim xst As Integer = strHtmlText.IndexOf("<--TR4-->")
        Dim xend As Integer = strHtmlText.IndexOf("<--ENDTR4-->")
        If (txtBasketShares.Text.Split(CChar(",")).Length >= 2) Then

            strHtmlText = strHtmlText.Replace("<--ENDTR4-->", String.Empty)
            strHtmlText = strHtmlText.Replace("<--TR4-->", String.Empty)
        Else
            xend = xend + "<--ENDTR4-->".Length - 1
            Dim xsub As String = strHtmlText.Substring(xst, (xend - xst) + 1)
            strHtmlText = strHtmlText.Replace(xsub, String.Empty)
        End If

        Dim xst2 As Integer = strHtmlText.IndexOf("<--TR5-->")
        Dim xend2 As Integer = strHtmlText.IndexOf("<--ENDTR5-->")
        xend2 = xend2 + "<--ENDTR5-->".Length - 1

        If (txtBasketShares.Text.Split(CChar(",")).Length = 3) Then
            strHtmlText = strHtmlText.Replace("<--ENDTR5-->", String.Empty)
            strHtmlText = strHtmlText.Replace("<--TR5-->", String.Empty)
        Else
            Dim xsub2 As String = strHtmlText.Substring(xst2, (xend2 - xst2) + 1)
            strHtmlText = strHtmlText.Replace(xsub2, String.Empty)

        End If



       


    End Sub
#Region "functions For Quote MailHTML String"
    
    ''Mangesh wakode 25 nov 2015 added function for quote mail format(DRA)
    Public Function getQuoteMailHTMLString_DRA(ByVal sUnderlyingTicker As String, ByVal sUnderlyingTicker2 As String, _
                                               ByVal sUnderlyingTicker3 As String, ByVal PriceOrStrike As String, ByVal bestPP As String, ByVal Issuer As String, _
                                               ByVal Yield As String, ByRef RFQID As String) As String
        ''23 nov 2015 Mangesh / Imran <START>
        Dim sNotePrice As String
        Dim BestPPMoodys As String
        Dim MoodysRating As String
        Dim SnPRating As String
        Dim FitchRating As String

        Try
            bestPP = CheckBestPriceForEmail()
            ''23 nov 2015 Mangesh / Imran <END>
            ''25 nov 2015 Mangesh wakode padding added to header
            Dim sbELNMailColumnHeader As StringBuilder
            sbELNMailColumnHeader = New StringBuilder()
            sbELNMailColumnHeader.Append("<br/>")
            sbELNMailColumnHeader.Append("<HTML><HEAD></HEAD>")
            sbELNMailColumnHeader.Append("<BODY dir=3Dltr>")
            sbELNMailColumnHeader.Append("<DIV dir=3Dltr>")
            sbELNMailColumnHeader.Append("<DIV style=3D""FONT-SIZE: 12pt; FONT-FAMILY: 'Calibri'; COLOR: #000000"">")
            sbELNMailColumnHeader.Append("<TABLE style=3D""BORDER-COLLAPSE: collapse; COLOR: #000000; ""=20")
            sbELNMailColumnHeader.Append("cellSpacing=3D0 cellPadding=3D0  border=3D0>")
            sbELNMailColumnHeader.Append("  <TBODY>")
            '<AvinashG. on 07-Jan-2016: Optimization Reduction in size of download file>
            sbELNMailColumnHeader.Append("  <TR style=3D""HEIGHT: 25pt; BACKGROUND: #336699; color:#ffffff"">")
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; padding:4pt;"" align=3Dcenter vAlign=3Dtop noWrap>RFQ ID</TD>")    ''mangesh wakode 16 dec 2015
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; padding:4pt;"" align=3Dcenter vAlign=3Dtop noWrap>Product</TD>")
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; padding:4pt;"" align=3Dcenter vAlign=3Dtop noWrap>Currency</TD>")
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; padding:4pt;"" align=3Dcenter vAlign=3Dtop noWrap>Guaranteed</TD>")
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; padding:4pt;"" align=3Dcenter vAlign=3Dtop noWrap>Strike</TD>")
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; padding:4pt;"" align=3Dcenter vAlign=3Dtop noWrap>KO Barrier</TD>")
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; padding:4pt;"" align=3Dcenter vAlign=3Dtop noWrap>KO Type</TD>")
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; padding:4pt;"" align=3Dcenter vAlign=3Dtop noWrap>KI Barrier</TD>")
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; padding:4pt;"" align=3Dcenter vAlign=3Dtop noWrap>KI Type</TD>")
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; padding:4pt;"" align=3Dcenter vAlign=3Dtop noWrap>Coupon P.A.</TD>")
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; padding:4pt;"" align=3Dcenter vAlign=3Dtop noWrap>Tenor</TD>")
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; padding:4pt;"" align=3Dcenter vAlign=3Dtop noWrap>Freq (m)</TD>")
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; padding:4pt;"" align=3Dcenter vAlign=3Dtop noWrap>Underlying</TD>")
            If chkAddShare2.Checked = True Then

                sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; padding:4pt;"" align=3Dcenter vAlign=3Dtop noWrap>Underlying</TD>")
            End If
            If chkAddShare3.Checked = True Then

                sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; padding:4pt;"" align=3Dcenter vAlign=3Dtop noWrap>Underlying</TD>")
            End If

            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; padding:4pt;"" align=3Dcenter vAlign=3Dtop noWrap>Issuer</TD>")
            ''Dilkhush/Avinash 09Dec2015: Commented from  Russell mail
            'sbELNMailColumnHeader.Append("    <TD style=3D""BORDER: windowtext 1pt solid;"" height=3D20 vAlign=3Dbottom>")
            'sbELNMailColumnHeader.Append("      <P style=3D""MARGIN: 0in 0in 10pt; LINE-HEIGHT: 13pt"" align=3Dcenter><SPAN lang=3DEN-SG style=3D""COLOR: ; ""><FONT style=3D""FONT-SIZE: 11pt; padding:4pt;"" color=3D#ffffff>Note Price</FONT></SPAN></P></TD>")

            ''sbELNMailColumnHeader.Append("<TR style=3D""HEIGHT: 15pt; BACKGROUND: #336699;"">")
            ''sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; "" height=3D20 vAlign=3Dbottom noWrap>")
            ''sbELNMailColumnHeader.Append("<P style=3D""MARGIN: 0in 0in 10pt; LINE-HEIGHT: 13pt"" align=3Dcenter><SPAN lang=3DEN-SG style=3D""COLOR: ; ""><FONT style=3D"" FONT-SIZE: 11pt; padding:4pt;"" color=3D#ffffff>RFQ ID</FONT></SPAN></P></TD>")
            ''sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; "" height=3D20 vAlign=3Dbottom noWrap>")
            ''sbELNMailColumnHeader.Append("<P style=3D""MARGIN: 0in 0in 10pt; LINE-HEIGHT: 13pt"" align=3Dcenter><SPAN lang=3DEN-SG style=3D""COLOR: ; ""><FONT style=3D"" FONT-SIZE: 11pt; padding:4pt;"" color=3D#ffffff>Product</FONT></SPAN></P></TD>")
            ''sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; "" height=3D20 vAlign=3Dbottom >")
            ''sbELNMailColumnHeader.Append("<P style=3D""MARGIN: 0in 0in 10pt; LINE-HEIGHT: 13pt"" align=3Dcenter><SPAN lang=3DEN-SG style=3D""COLOR: ; ""><FONT style=3D"" FONT-SIZE: 11pt; padding:4pt;"" color=3D#ffffff>Currency</FONT></SPAN></P></TD>")
            ''sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid;"" height=3D20 vAlign=3Dbottom noWrap>")
            ''sbELNMailColumnHeader.Append("<P style=3D""MARGIN: 0in 0in 10pt; LINE-HEIGHT: 13pt"" align=3Dcenter><SPAN lang=3DEN-SG style=3D""COLOR: ; ""><FONT style=3D""FONT-SIZE: 11pt; padding:4pt;"" color=3D#ffffff>Strike</FONT></SPAN></P></TD>")
            ''sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid;"" height=3D20 vAlign=3Dbottom noWrap>")
            ''sbELNMailColumnHeader.Append("<P style=3D""MARGIN: 0in 0in 10pt; LINE-HEIGHT: 13pt"" align=3Dcenter><SPAN lang=3DEN-SG style=3D""COLOR: ; ""><FONT style=3D""FONT-SIZE: 11pt; padding:4pt;"" color=3D#ffffff>KO Barrier</FONT></SPAN></P></TD>")
            ''sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid;"" height=3D20 vAlign=3Dbottom noWrap>")
            ''sbELNMailColumnHeader.Append("<P style=3D""MARGIN: 0in 0in 10pt; LINE-HEIGHT: 13pt"" align=3Dcenter><SPAN lang=3DEN-SG style=3D""COLOR: ; ""><FONT style=3D""FONT-SIZE: 11pt; padding:4pt;"" color=3D#ffffff>KO Type</FONT></SPAN></P></TD>")
            ''sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid;"" height=3D20 vAlign=3Dbottom noWrap>")
            ''sbELNMailColumnHeader.Append("<P style=3D""MARGIN: 0in 0in 10pt; LINE-HEIGHT: 13pt"" align=3Dcenter><SPAN lang=3DEN-SG style=3D""COLOR: ; ""><FONT style=3D""FONT-SIZE: 11pt; padding:4pt;"" color=3D#ffffff>KI Barrier</FONT></SPAN></P></TD>")
            ''sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid;""height=3D20 vAlign=3Dbottom noWrap>")
            ''sbELNMailColumnHeader.Append("<P style=3D""MARGIN: 0in 0in 10pt; LINE-HEIGHT: 13pt"" align=3Dcenter><SPAN lang=3DEN-SG style=3D""COLOR: ; ""><FONT style=3D""FONT-SIZE: 11pt; padding:4pt;"" color=3D#ffffff>KI Type</FONT></SPAN></P></TD>")
            ''sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid;"" height=3D20 vAlign=3Dbottom noWrap>")
            ''sbELNMailColumnHeader.Append("<P style=3D""MARGIN: 0in 0in 10pt; LINE-HEIGHT: 13pt"" align=3Dcenter><SPAN lang=3DEN-SG style=3D""COLOR: ; ""><FONT style=3D""FONT-SIZE: 11pt; padding:4pt;"" color=3D#ffffff>Coupon P.A.</FONT></SPAN></P></TD>")
            ''sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid;"" height=3D20 vAlign=3Dbottom noWrap>")
            ''sbELNMailColumnHeader.Append("<P style=3D""MARGIN: 0in 0in 10pt; LINE-HEIGHT: 13pt"" align=3Dcenter><SPAN lang=3DEN-SG style=3D""COLOR: ; ""><FONT style=3D""FONT-SIZE: 11pt; padding:4pt;"" color=3D#ffffff>Tenor</FONT></SPAN></P></TD>")
            ''sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid;"" height=3D20 vAlign=3Dbottom noWrap>")
            ''sbELNMailColumnHeader.Append("<P style=3D""MARGIN: 0in 0in 10pt; LINE-HEIGHT: 13pt"" align=3Dcenter><SPAN lang=3DEN-SG style=3D""COLOR: ; ""><FONT style=3D""FONT-SIZE: 11pt; padding:4pt;"" color=3D#ffffff>KO Obs</FONT></SPAN></P></TD>")
            ''sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid;"" height=3D20 vAlign=3Dbottom noWrap>")
            ''sbELNMailColumnHeader.Append("<P style=3D""MARGIN: 0in 0in 10pt; LINE-HEIGHT: 13pt"" align=3Dcenter><SPAN lang=3DEN-SG style=3D""COLOR: ; ""><FONT style=3D""FONT-SIZE: 11pt; padding:4pt;"" color=3D#ffffff>Underlying</FONT></SPAN></P></TD>")
            ''If chkAddShare2.Checked = True Then
            ''    sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid;"" height=3D20 vAlign=3Dbottom noWrap>")
            ''    sbELNMailColumnHeader.Append("<P style=3D""MARGIN: 0in 0in 10pt; LINE-HEIGHT: 13pt"" align=3Dcenter><SPAN lang=3DEN-SG style=3D""COLOR: ; ""><FONT style=3D""FONT-SIZE: 11pt; padding:4pt;"" color=3D#ffffff>Underlying</FONT></SPAN></P></TD>")
            ''End If
            ''If chkAddShare3.Checked = True Then
            ''    sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid;"" height=3D20 vAlign=3Dbottom noWrap>")
            ''    sbELNMailColumnHeader.Append("<P style=3D""MARGIN: 0in 0in 10pt; LINE-HEIGHT: 13pt"" align=3Dcenter><SPAN lang=3DEN-SG style=3D""COLOR: ; ""><FONT style=3D""FONT-SIZE: 11pt; padding:4pt;"" color=3D#ffffff>Underlying</FONT></SPAN></P></TD>")
            ''End If
            ''sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid;"" height=3D20 vAlign=3Dbottom>")
            ''sbELNMailColumnHeader.Append("<P style=3D""MARGIN: 0in 0in 10pt; LINE-HEIGHT: 13pt"" align=3Dcenter><SPAN lang=3DEN-SG style=3D""COLOR: ; ""><FONT style=3D""FONT-SIZE: 11pt; padding:4pt;"" color=3D#ffffff>Issuer</FONT></SPAN></P></TD>")
            '' ''Dilkhush/Avinash 09Dec2015: Commented from  Russell mail
            ' ''sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid;"" height=3D20 vAlign=3Dbottom>")
            ' ''sbELNMailColumnHeader.Append("<P style=3D""MARGIN: 0in 0in 10pt; LINE-HEIGHT: 13pt"" align=3Dcenter><SPAN lang=3DEN-SG style=3D""COLOR: ; ""><FONT style=3D""FONT-SIZE: 11pt; padding:4pt;"" color=3D#ffffff>Note Price</FONT></SPAN></P></TD>")
            '</AvinashG. on 07-Jan-2016: Optimization Reduction in size of download file>

            sbELNMailColumnHeader.Append(" </TR ><TR >")
            ''data
            sbELNMailColumnHeader.Append(" <TD style=3D""BORDER: windowtext 1pt solid;PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + RFQID + "</TD>")                     ''RFQID   mangesh wakode 16 dec 2015
            sbELNMailColumnHeader.Append(" <TD style=3D""BORDER: windowtext 1pt solid;PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">DRA</TD>")                     ''Product
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + ddlNoteCcy.SelectedItem.Text + " </TD>") ''CCY
            Dim sGuarantee As Double = 1.0
            Dim strtxtGuPeriod As String
            strtxtGuPeriod = IIf(txtGuPeriod.Text.Trim = "", "0", txtGuPeriod.Text.Trim).ToString
            If lblKOLevelSameAsCoupon.Text.ToUpper = "MONTHLY" Then
                sGuarantee = CDbl(strtxtGuPeriod) * 1
            ElseIf lblKOLevelSameAsCoupon.Text.ToUpper = "TWO-MONTHLY" Then
                sGuarantee = CDbl(strtxtGuPeriod) * 2
            ElseIf lblKOLevelSameAsCoupon.Text.ToUpper = "QUARTERLY" Then
                sGuarantee = CDbl(strtxtGuPeriod) * 3
            ElseIf lblKOLevelSameAsCoupon.Text.ToUpper = "SEMIANNUALLY" Then
                sGuarantee = CDbl(strtxtGuPeriod) * 6
            ElseIf lblKOLevelSameAsCoupon.Text.ToUpper = "ANNUALLY" Then
                sGuarantee = CDbl(strtxtGuPeriod) * 12
            End If
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + sGuarantee.ToString + "m </TD>")   ''Guaranteed  


            If ddlSolveForDRA.SelectedValue.ToString.Trim.ToUpper = "CONVERSION_STRIKE" Then
                sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;  BACKGROUND: #f5fb99;"">" + PriceOrStrike + "%</TD>")           ''Strike        
            Else
                sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;  BACKGROUND: #f5fb99;"">" + txtStrikeDRAFCN.Text.ToString.Trim + "%</TD>")           ''Strike            
            End If


            If chkKO.Checked = True Then
                sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + txtKOLevel.Text.ToString.Trim + "%</TD>")  ''KO Barrier                
                sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + lblKOLevelSameAsCoupon.Text + " </TD>")           ''KO Type            
            Else
                sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + "N.A." + " </TD>")           ''KO Barrier            
                sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + "N.A." + " </TD>")           ''KO Type            
            End If


            If chkKI.Checked = True Then
                sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + txtKILevel.Text.ToString.Trim + "%</TD>")           ''KI Barrier            
                sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + ddlKIType.SelectedItem.Text.ToString.Trim + " </TD>")           ''KI Type            
            Else
                sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + "N.A." + " </TD>")           ''KI Barrier  
                sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + "N.A." + " </TD>")           ''KI Type            
            End If


            If ddlSolveForDRA.SelectedValue.ToString.Trim.ToUpper = "COUPON" Then
                sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + PriceOrStrike + "%</TD>")           ''Copoun PA           
            Else
                sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + txtCoupon.Text + "%</TD>")           ''Copoun PA           
            End If



            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + txtTenorDRA.Text + If(ddlTenorTypeDRA.SelectedValue.ToString.ToUpper = "MONTH", "m", "y") + " </TD>")           ''Tenor       

            Dim sKIFreq As String = ""
            If lblKOLevelSameAsCoupon.Text.ToUpper = "MONTHLY" Then
                sKIFreq = "1m"
            ElseIf lblKOLevelSameAsCoupon.Text.ToUpper = "TWO-MONTHLY" Then
                sKIFreq = "2m"
            ElseIf lblKOLevelSameAsCoupon.Text.ToUpper = "QUARTERLY" Then
                sKIFreq = "3m"
            ElseIf lblKOLevelSameAsCoupon.Text.ToUpper = "SEMIANNUALLY" Then
                sKIFreq = "6m"
            ElseIf lblKOLevelSameAsCoupon.Text.ToUpper = "ANNUALLY" Then
                sKIFreq = "12m"
            End If
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + sKIFreq + " </TD>") ''Freq (m)       
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + sUnderlyingTicker + " </TD>") ''Underlying    


            If chkAddShare2.Checked = True Then
                sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + sUnderlyingTicker2 + " </TD>") ''Underlying    
            End If

            If chkAddShare3.Checked = True Then
                sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + sUnderlyingTicker3 + " </TD>") ''Underlying    
            End If

            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + Issuer + " </TD>")               ''Issuer    
            ''<Mangesh/Rushikesh> 30 nov 2015 
            If ddlSolveForDRA.SelectedValue = "PRICE" Then
                sNotePrice = PriceOrStrike + "%"
            Else
                sNotePrice = txtDRAPrice.Text + "%"
            End If
            ''Dilkhush/Avinash 09Dec2015: Commented from  Russell mail
            'sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + sNotePrice + "</TD>")               ''Note price       
            ''</Mangesh/Rushikesh> 30 nov 2015 

            '' <Ashwini P> 01-Aug-2016
            BestPPMoodys = CheckBestPriceForEmail()
            GetIssuerRatingForMail(BestPPMoodys, MoodysRating, SnPRating, FitchRating)
            sbELNMailColumnHeader.Append("<TR><TD>* Issuer Rating: Moody's Rating:  " + MoodysRating + ", S&P Rating:  " + SnPRating + ", Fitch Rating:  " + FitchRating + "</TD></TR>")
            ''</Ashwini P>

            sbELNMailColumnHeader.Append("</TR></TBODY></TABLE></DIV></DIV></BODY>")
            sbELNMailColumnHeader.Append("</HTML>")

            '</mangesh wakode> 23 Nov 2015 

            Return sbELNMailColumnHeader.ToString

        Catch ex As Exception
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                   sSelfPath, "GetQuoteMailHTMLString_DRA", ErrorLevel.High)
            Throw ex
        End Try
    End Function

    ''Mangesh wakode 25 nov 2015 added function for quote mail format(FCN)
    Public Function getQuoteMailHTMLString_FCN(ByVal sUnderlyingTicker As String, ByVal sUnderlyingTicker2 As String, _
                                               ByVal sUnderlyingTicker3 As String, ByVal PriceOrStrike As String, ByVal bestPP As String, ByVal Issuer As String, _
                                               ByVal Yield As String, ByRef RFQID As String) As String
        ''23 nov 2015 Mangesh / Imran <START>
        Dim sNotePrice As String
        Dim BestPPMoodys As String
        Dim MoodysRating As String
        Dim SnPRating As String
        Dim FitchRating As String

        Try
            ''23 nov 2015 Mangesh / Imran <END>

            ''25 nov 2015 Mangesh wakode padding added to header
            Dim sbELNMailColumnHeader As StringBuilder
            sbELNMailColumnHeader = New StringBuilder()
            sbELNMailColumnHeader.Append("<br/>")
            sbELNMailColumnHeader.Append("<HTML><HEAD></HEAD>")
            sbELNMailColumnHeader.Append("<BODY dir=3Dltr>")
            sbELNMailColumnHeader.Append("<DIV dir=3Dltr>")
            sbELNMailColumnHeader.Append("<DIV style=3D""FONT-SIZE: 12pt; FONT-FAMILY: 'Calibri'; COLOR: #000000"">")
            sbELNMailColumnHeader.Append("<TABLE style=3D""BORDER-COLLAPSE: collapse; COLOR: #000000; ""=20")
            sbELNMailColumnHeader.Append("cellSpacing=3D0 cellPadding=3D0  border=3D0>")
            sbELNMailColumnHeader.Append("<TBODY>")

            '<AvinashG. on 07-Jan-2016: Optimization Reduction in size of download file>
            sbELNMailColumnHeader.Append(" <TR style=3D""HEIGHT: 25pt; BACKGROUND: #336699; color:#ffffff"">")

            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; padding:4pt;"" align=3Dcenter vAlign=3Dtop noWrap>RFQ ID</TD>")
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; padding:4pt;"" align=3Dcenter vAlign=3Dtop noWrap>Product</TD>")
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; padding:4pt;"" align=3Dcenter vAlign=3Dtop noWrap>Currency</TD>")
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; padding:4pt;"" align=3Dcenter vAlign=3Dtop noWrap>Strike</TD>")
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; padding:4pt;"" align=3Dcenter vAlign=3Dtop noWrap>KO Barrier</TD>")
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; padding:4pt;"" align=3Dcenter vAlign=3Dtop noWrap>KO Type</TD>")
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; padding:4pt;"" align=3Dcenter vAlign=3Dtop noWrap>KI Barrier</TD>")
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; padding:4pt;"" align=3Dcenter vAlign=3Dtop noWrap>KI Type</TD>")
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; padding:4pt;"" align=3Dcenter vAlign=3Dtop noWrap>Coupon P.A.</TD>")
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; padding:4pt;"" align=3Dcenter vAlign=3Dtop noWrap>Tenor</TD>")
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; padding:4pt;"" align=3Dcenter vAlign=3Dtop noWrap>KO Obs</TD>")
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; padding:4pt;"" align=3Dcenter vAlign=3Dtop noWrap>Underlying</TD>")
            If chkAddShare2.Checked = True Then
                sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; padding:4pt;"" align=3Dcenter vAlign=3Dtop noWrap>Underlying</TD>")
            End If
            If chkAddShare3.Checked = True Then
                sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; padding:4pt;"" align=3Dcenter vAlign=3Dtop noWrap>Underlying</TD>")
            End If
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; padding:4pt;"" align=3Dcenter vAlign=3Dtop noWrap>Issuer</TD>")
            ''Dilkhush/Avinash 09Dec2015: Commented from  Russell mail
            'sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid;"" height=3D20 vAlign=3Dbottom>")
            'sbELNMailColumnHeader.Append("<P style=3D""MARGIN: 0in 0in 10pt; LINE-HEIGHT: 13pt"" align=3Dcenter><SPAN lang=3DEN-SG style=3D""COLOR: ; ""><FONT style=3D""FONT-SIZE: 11pt; padding:4pt;"" color=3D#ffffff>Note Price</FONT></SPAN></P></TD>")

            ''sbELNMailColumnHeader.Append("<TR style=3D""HEIGHT: 15pt; BACKGROUND: #336699;"">")
            ''sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; "" height=3D20 vAlign=3Dbottom noWrap>")
            ''sbELNMailColumnHeader.Append("<P style=3D""MARGIN: 0in 0in 10pt; LINE-HEIGHT: 13pt"" align=3Dcenter><SPAN lang=3DEN-SG style=3D""COLOR: ; ""><FONT style=3D"" FONT-SIZE: 11pt; padding:4pt;"" color=3D#ffffff>RFQ ID</FONT></SPAN></P></TD>")
            ''sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; "" height=3D20 vAlign=3Dbottom noWrap>")
            ''sbELNMailColumnHeader.Append("<P style=3D""MARGIN: 0in 0in 10pt; LINE-HEIGHT: 13pt"" align=3Dcenter><SPAN lang=3DEN-SG style=3D""COLOR: ; ""><FONT style=3D"" FONT-SIZE: 11pt; padding:4pt;"" color=3D#ffffff>Product</FONT></SPAN></P></TD>")
            ''sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; "" height=3D20 vAlign=3Dbottom >")
            ''sbELNMailColumnHeader.Append("<P style=3D""MARGIN: 0in 0in 10pt; LINE-HEIGHT: 13pt"" align=3Dcenter><SPAN lang=3DEN-SG style=3D""COLOR: ; ""><FONT style=3D"" FONT-SIZE: 11pt; padding:4pt;"" color=3D#ffffff>Currency</FONT></SPAN></P></TD>")
            ''sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid;"" height=3D20 vAlign=3Dbottom noWrap>")
            ''sbELNMailColumnHeader.Append("<P style=3D""MARGIN: 0in 0in 10pt; LINE-HEIGHT: 13pt"" align=3Dcenter><SPAN lang=3DEN-SG style=3D""COLOR: ; ""><FONT style=3D""FONT-SIZE: 11pt; padding:4pt;"" color=3D#ffffff>Strike</FONT></SPAN></P></TD>")
            ''sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid;"" height=3D20 vAlign=3Dbottom noWrap>")
            ''sbELNMailColumnHeader.Append("<P style=3D""MARGIN: 0in 0in 10pt; LINE-HEIGHT: 13pt"" align=3Dcenter><SPAN lang=3DEN-SG style=3D""COLOR: ; ""><FONT style=3D""FONT-SIZE: 11pt; padding:4pt;"" color=3D#ffffff>KO Barrier</FONT></SPAN></P></TD>")
            ''sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid;"" height=3D20 vAlign=3Dbottom noWrap>")
            ''sbELNMailColumnHeader.Append("<P style=3D""MARGIN: 0in 0in 10pt; LINE-HEIGHT: 13pt"" align=3Dcenter><SPAN lang=3DEN-SG style=3D""COLOR: ; ""><FONT style=3D""FONT-SIZE: 11pt; padding:4pt;"" color=3D#ffffff>KO Type</FONT></SPAN></P></TD>")
            ''sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid;"" height=3D20 vAlign=3Dbottom noWrap>")
            ''sbELNMailColumnHeader.Append("<P style=3D""MARGIN: 0in 0in 10pt; LINE-HEIGHT: 13pt"" align=3Dcenter><SPAN lang=3DEN-SG style=3D""COLOR: ; ""><FONT style=3D""FONT-SIZE: 11pt; padding:4pt;"" color=3D#ffffff>KI Barrier</FONT></SPAN></P></TD>")
            ''sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid;""height=3D20 vAlign=3Dbottom noWrap>")
            ''sbELNMailColumnHeader.Append("<P style=3D""MARGIN: 0in 0in 10pt; LINE-HEIGHT: 13pt"" align=3Dcenter><SPAN lang=3DEN-SG style=3D""COLOR: ; ""><FONT style=3D""FONT-SIZE: 11pt; padding:4pt;"" color=3D#ffffff>KI Type</FONT></SPAN></P></TD>")
            ''sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid;"" height=3D20 vAlign=3Dbottom noWrap>")
            ''sbELNMailColumnHeader.Append("<P style=3D""MARGIN: 0in 0in 10pt; LINE-HEIGHT: 13pt"" align=3Dcenter><SPAN lang=3DEN-SG style=3D""COLOR: ; ""><FONT style=3D""FONT-SIZE: 11pt; padding:4pt;"" color=3D#ffffff>Coupon P.A.</FONT></SPAN></P></TD>")
            ''sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid;"" height=3D20 vAlign=3Dbottom noWrap>")
            ''sbELNMailColumnHeader.Append("<P style=3D""MARGIN: 0in 0in 10pt; LINE-HEIGHT: 13pt"" align=3Dcenter><SPAN lang=3DEN-SG style=3D""COLOR: ; ""><FONT style=3D""FONT-SIZE: 11pt; padding:4pt;"" color=3D#ffffff>Tenor</FONT></SPAN></P></TD>")
            ''sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid;"" height=3D20 vAlign=3Dbottom noWrap>")
            ''sbELNMailColumnHeader.Append("<P style=3D""MARGIN: 0in 0in 10pt; LINE-HEIGHT: 13pt"" align=3Dcenter><SPAN lang=3DEN-SG style=3D""COLOR: ; ""><FONT style=3D""FONT-SIZE: 11pt; padding:4pt;"" color=3D#ffffff>KO Obs</FONT></SPAN></P></TD>")
            ''sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid;"" height=3D20 vAlign=3Dbottom noWrap>")
            ''sbELNMailColumnHeader.Append("<P style=3D""MARGIN: 0in 0in 10pt; LINE-HEIGHT: 13pt"" align=3Dcenter><SPAN lang=3DEN-SG style=3D""COLOR: ; ""><FONT style=3D""FONT-SIZE: 11pt; padding:4pt;"" color=3D#ffffff>Underlying</FONT></SPAN></P></TD>")
            ''If chkAddShare2.Checked = True Then
            ''    sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid;"" height=3D20 vAlign=3Dbottom noWrap>")
            ''    sbELNMailColumnHeader.Append("<P style=3D""MARGIN: 0in 0in 10pt; LINE-HEIGHT: 13pt"" align=3Dcenter><SPAN lang=3DEN-SG style=3D""COLOR: ; ""><FONT style=3D""FONT-SIZE: 11pt; padding:4pt;"" color=3D#ffffff>Underlying</FONT></SPAN></P></TD>")
            ''End If
            ''If chkAddShare3.Checked = True Then
            ''    sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid;"" height=3D20 vAlign=3Dbottom noWrap>")
            ''    sbELNMailColumnHeader.Append("<P style=3D""MARGIN: 0in 0in 10pt; LINE-HEIGHT: 13pt"" align=3Dcenter><SPAN lang=3DEN-SG style=3D""COLOR: ; ""><FONT style=3D""FONT-SIZE: 11pt; padding:4pt;"" color=3D#ffffff>Underlying</FONT></SPAN></P></TD>")
            ''End If
            ''sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid;"" height=3D20 vAlign=3Dbottom>")
            ''sbELNMailColumnHeader.Append("<P style=3D""MARGIN: 0in 0in 10pt; LINE-HEIGHT: 13pt"" align=3Dcenter><SPAN lang=3DEN-SG style=3D""COLOR: ; ""><FONT style=3D""FONT-SIZE: 11pt; padding:4pt;"" color=3D#ffffff>Issuer</FONT></SPAN></P></TD>")
            '' ''Dilkhush/Avinash 09Dec2015: Commented from  Russell mail
            ' ''sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid;"" height=3D20 vAlign=3Dbottom>")
            ' ''sbELNMailColumnHeader.Append("<P style=3D""MARGIN: 0in 0in 10pt; LINE-HEIGHT: 13pt"" align=3Dcenter><SPAN lang=3DEN-SG style=3D""COLOR: ; ""><FONT style=3D""FONT-SIZE: 11pt; padding:4pt;"" color=3D#ffffff>Note Price</FONT></SPAN></P></TD>")
            '</AvinashG. on 07-Jan-2016: Optimization Reduction in size of download file>
            sbELNMailColumnHeader.Append("</TR><TR>")
            ''data
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid;PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + RFQID + "</TD>")                     ''Product
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid;PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">FCN</TD>")                     ''Product
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + ddlNoteCcy.SelectedItem.Text + " </TD>") ''CCY   

            If ddlSolveForDRA.SelectedValue.ToString.Trim.ToUpper = "CONVERSION_STRIKE" Then
                sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;  BACKGROUND: #f5fb99;"">" + PriceOrStrike + "%</TD>")           ''Strike        
            Else
                sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;  BACKGROUND: #f5fb99;"">" + txtStrikeDRAFCN.Text.ToString.Trim + "%</TD>")           ''Strike            
            End If

            If chkKO.Checked = True Then
                sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + txtKOLevel.Text.ToString.Trim + "%</TD>")  ''KO Barrier                
                sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + lblKOLevelSameAsCoupon.Text + " </TD>")           ''KO Type            
            Else
                sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + "N.A." + " </TD>")           ''KO Barrier            
                sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + "N.A." + " </TD>")           ''KO Type            
            End If

            If chkKI.Checked = True Then
                sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + txtKILevel.Text.ToString.Trim + "%</TD>")           ''KI Barrier            
                sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + ddlKIType.SelectedItem.Text.ToString.Trim + " </TD>")           ''KI Type            
            Else
                sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + "N.A." + " </TD>")           ''KI Barrier  
                sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + "N.A." + " </TD>")           ''KI Type            
            End If

            If ddlSolveForDRA.SelectedValue.ToString.Trim.ToUpper = "COUPON" Then
                sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + PriceOrStrike + "%</TD>")           ''Copoun PA           
            Else
                sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + txtCoupon.Text + "%</TD>")           ''Copoun PA           
            End If

            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + txtTenorDRA.Text + If(ddlTenorTypeDRA.SelectedValue.ToString.ToUpper = "MONTH", "m", "y") + " </TD>")           ''Tenor       
            Dim sKOObs As String = ""
            If lblKOLevelSameAsCoupon.Text.ToUpper = "MONTHLY" Then
                sKOObs = "1m"
            ElseIf lblKOLevelSameAsCoupon.Text.ToUpper = "TWO-MONTHLY" Then
                sKOObs = "2m"
            ElseIf lblKOLevelSameAsCoupon.Text.ToUpper = "QUARTERLY" Then
                sKOObs = "3m"
            ElseIf lblKOLevelSameAsCoupon.Text.ToUpper = "SEMIANNUALLY" Then
                sKOObs = "6m"
            ElseIf lblKOLevelSameAsCoupon.Text.ToUpper = "ANNUALLY" Then
                sKOObs = "12m"
            End If
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + sKOObs + " </TD>") ''KO Obs       
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + sUnderlyingTicker + " </TD>") ''Underlying    
            If chkAddShare2.Checked = True Then
                sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + sUnderlyingTicker2 + " </TD>") ''Underlying    
            End If

            If chkAddShare3.Checked = True Then
                sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + sUnderlyingTicker3 + " </TD>") ''Underlying    
            End If
            sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + Issuer + " </TD>")               ''Issuer    
            ''<Mangesh/Rushikesh> 30 nov 2015 
            If ddlSolveForDRA.SelectedValue = "PRICE" Then
                sNotePrice = PriceOrStrike + "%"
            Else
                sNotePrice = txtDRAPrice.Text + "%"
            End If
            ''Dilkhush/Avinash 09Dec2015: Commented from  Russell mail
            'sbELNMailColumnHeader.Append("<TD style=3D""BORDER: windowtext 1pt solid; PADDING-LEFT: 0.05in; PADDING-RIGHT: 0.05in; text-align: center;"">" + sNotePrice + "</TD>")               ''Note price         
            ''<Mangesh/Rushikesh> 30 nov 2015

            '' <Ashwini P> 01-Aug-2016
            BestPPMoodys = CheckBestPriceForEmail()
            GetIssuerRatingForMail(BestPPMoodys, MoodysRating, SnPRating, FitchRating)
            sbELNMailColumnHeader.Append("<TR><TD>* Issuer Rating: Moody's Rating:  " + MoodysRating + ", S&P Rating:  " + SnPRating + "</TD></TR>")
            ''</Ashwini P>

            sbELNMailColumnHeader.Append("</TR></TBODY></TABLE></DIV></DIV></BODY>")
            sbELNMailColumnHeader.Append("</HTML>")



            Return sbELNMailColumnHeader.ToString

        Catch ex As Exception
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                sSelfPath, "GetQuoteMailHTMLString_FCN", ErrorLevel.High)
            Throw ex
        End Try
    End Function

    Private Function getUnderlyingTicker(ByVal sUnderlying As String) As String
        Dim sUnderlyingTicker As String
        Try
            Dim iBBGSeparatorIdx = sUnderlying.IndexOf(CChar("/"))
            Dim iDescSeparatorIdx = sUnderlying.IndexOf(CChar("-"))
            Dim sBBGTicker As String

            If iBBGSeparatorIdx <> -1 Or iDescSeparatorIdx <> -1 Then
                sBBGTicker = sUnderlying.Substring(iBBGSeparatorIdx + 1, iDescSeparatorIdx - iBBGSeparatorIdx - 1)
            Else
                sBBGTicker = ""
            End If
            sUnderlyingTicker = If(sBBGTicker <> "", sBBGTicker, sUnderlying.Substring(sUnderlying.IndexOf(CChar("(")) + 1, sUnderlying.IndexOf(CChar(")")) - 1))
            Return sUnderlyingTicker
        Catch ex As Exception
            Return ""
            Throw ex
        End Try
    End Function

    ''Ashwini P on 01-Aug-2016
    Private Sub GetIssuerRatingForMail(ByVal BestPPMoodys As String, ByRef MoodysRating As String, ByRef SnPRating As String, ByRef FitchRating As String)
        Try
            Dim dtMoodysRating As DataTable
            dtMoodysRating = Nothing
            BestPPMoodys = CheckBestPriceForEmail()
            Select Case objELNRFQ.DB_GetMoodysRatingForMail(BestPPMoodys, dtMoodysRating)
                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                    MoodysRating = dtMoodysRating.Rows(0).Item(0).ToString()
                    SnPRating = dtMoodysRating.Rows(0).Item(1).ToString()
                    FitchRating = dtMoodysRating.Rows(0).Item(2).ToString()
                Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                    ''no data
            End Select
        Catch ex As Exception
            Throw ex
        End Try
    End Sub
#End Region
    Private Function checkIssuerLimit(ByVal PPName As String) As Boolean
        Dim min As Double
        Dim max As Double
        Select Case PPName.ToUpper
            Case "JPM"
                min = CDbl(Split(lblJPMlimit.ToolTip, " / ")(0).Trim)
                max = CDbl(Split(lblJPMlimit.ToolTip, " / ")(1).Trim)
            Case "HSBC"
                '  lblHSBClimit       
                min = CDbl(Split(lblHSBClimit.ToolTip, " / ")(0).Trim)
                max = CDbl(Split(lblHSBClimit.ToolTip, " / ")(1).Trim)
            Case "UBS"
                ' lblUBSlimit       
                min = CDbl(Split(lblUBSlimit.ToolTip, " / ")(0).Trim)
                max = CDbl(Split(lblUBSlimit.ToolTip, " / ")(1).Trim)
            Case "CS"
                ' lblCSLimit       
                min = CDbl(Split(lblCSLimit.ToolTip, " / ")(0).Trim)
                max = CDbl(Split(lblCSLimit.ToolTip, " / ")(1).Trim)
            Case "BNPP"
                ' lblBNPPlimit       
                min = CDbl(Split(lblBNPPlimit.ToolTip, " / ")(0).Trim)
                max = CDbl(Split(lblBNPPlimit.ToolTip, " / ")(1).Trim)
            Case "BAML"
                ' lblBAMLlimit       
                min = CDbl(Split(lblBAMLlimit.ToolTip, " / ")(0).Trim)
                max = CDbl(Split(lblBAMLlimit.ToolTip, " / ")(1).Trim)
            Case "DB"
                ' lblDBIBlimit       
                min = CDbl(Split(lblDBIBlimit.ToolTip, " / ")(0).Trim)
                max = CDbl(Split(lblDBIBlimit.ToolTip, " / ")(1).Trim)
            Case "OCBC"
                ' lblOCBClimit       
                min = CDbl(Split(lblOCBClimit.ToolTip, " / ")(0).Trim)
                max = CDbl(Split(lblOCBClimit.ToolTip, " / ")(1).Trim)
            Case "CITI"
                ' lblCITIlimit       
                min = CDbl(Split(lblCITIlimit.ToolTip, " / ")(0).Trim)
                max = CDbl(Split(lblCITIlimit.ToolTip, " / ")(1).Trim)
            Case "LEONTEQ"
                ' lblLEONTEQlimit       
                min = CDbl(Split(lblLEONTEQlimit.ToolTip, " / ")(0).Trim)
                max = CDbl(Split(lblLEONTEQlimit.ToolTip, " / ")(1).Trim)
            Case "COMMERZ"
                ' lblCOMMERZlimit       
                min = CDbl(Split(lblCOMMERZlimit.ToolTip, " / ")(0).Trim)
                max = CDbl(Split(lblCOMMERZlimit.ToolTip, " / ")(1).Trim)
        End Select

       
        Dim Notional As Double = Convert.ToDouble(txtOrderDRAFCN.Text)
        If (Notional < min) Then
            lblerror.Text = "Can not place Order. Notional Size is smaller than the minimum permitted."
            Return False
        ElseIf (Notional > max) Then
            lblerror.Text = "Can not place order. Notional size is larger than the maximum permitted."
            Return False
        Else
            Return True
        End If
     

    End Function
    ''14Jan2016
    ''Rushikesh to set share value for grid selection and for other operations
    Private Sub setShare1(ByVal strExchng As String, ByVal strShareVal As String)
        Try
            Dim dtSelectedShare As DataTable
            dtSelectedShare = Nothing
            Select Case objELNRFQ.Db_Get_Selected_Share("EQ", strExchng, "", strShareVal, dtSelectedShare)
                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                    With ddlShareDRA
                        .Items.Clear()
                        .DataSource = dtSelectedShare
                        .DataTextField = "LongName"
                        .DataValueField = "Code"
                        .DataBind()
                        .SelectedIndex = 0
                    End With
                    ddlShareDRA.SelectedIndex = ddlShareDRA.Items.IndexOf(ddlShareDRA.Items.FindItemByValue(strShareVal))
                Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                    With ddlShareDRA
                        .DataSource = dtSelectedShare
                        .DataBind()
                    End With
            End Select
        Catch ex As Exception
            Throw ex
        End Try
    End Sub
    Private Sub setShare2(ByVal strExchng As String, ByVal strShareVal As String)
        Try
            Dim dtSelectedShare As DataTable
            dtSelectedShare = Nothing
            Select Case objELNRFQ.Db_Get_Selected_Share("EQ", strExchng, "", strShareVal, dtSelectedShare)
                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                    With ddlShareDRA2
                        .Items.Clear()
                        .DataSource = dtSelectedShare
                        .DataTextField = "LongName"
                        .DataValueField = "Code"
                        .DataBind()
                        .SelectedIndex = 0
                    End With
                    ddlShareDRA2.SelectedIndex = ddlShareDRA2.Items.IndexOf(ddlShareDRA2.Items.FindItemByValue(strShareVal))
                Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                    With ddlShareDRA2
                        .DataSource = dtSelectedShare
                        .DataBind()
                    End With
            End Select
        Catch ex As Exception
            Throw ex
        End Try
    End Sub
    Private Sub setShare3(ByVal strExchng As String, ByVal strShareVal As String)
        Try
            Dim dtSelectedShare As DataTable
            dtSelectedShare = Nothing
            Select Case objELNRFQ.Db_Get_Selected_Share("EQ", strExchng, "", strShareVal, dtSelectedShare)
                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                    With ddlShareDRA3
                        .Items.Clear()
                        .DataSource = dtSelectedShare
                        .DataTextField = "LongName"
                        .DataValueField = "Code"
                        .DataBind()
                        .SelectedIndex = 0
                    End With
                    ddlShareDRA3.SelectedIndex = ddlShareDRA3.Items.IndexOf(ddlShareDRA3.Items.FindItemByValue(strShareVal))
                Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                    With ddlShareDRA3
                        .DataSource = dtSelectedShare
                        .DataBind()
                    End With
            End Select
        Catch ex As Exception
            Throw ex
        End Try
    End Sub
    ''</Rushikesh to set share value for grid selection and for other operations>
    ''Avinash 28Dec2015 For leng roundup and roundDown
    '   Private Delegate Function RoundingFunction(ByVal value As Double) As Double

    '   Private Enum RoundingDirection
    '       Up
    '       Down
    '   End Enum

    '   Public Function RoundUp(ByVal value As Double, ByVal precision As Integer) As Double
    '       Return Round(value, precision, RoundingDirection.Up)
    '   End Function

    '   Public Function RoundDown(ByVal value As Double, ByVal precision As Integer) _
    'As Double
    '       Return Round(value, precision, RoundingDirection.Down)
    '   End Function

    '   Private Function Round(ByVal value As Double, ByVal precision As Integer, _
    'ByVal roundingDirection As RoundingDirection) As Double
    '       Dim roundingFunction As RoundingFunction
    '       If roundingDirection = roundingDirection.Up Then
    '           roundingFunction = AddressOf Math.Ceiling
    '       Else
    '           roundingFunction = AddressOf Math.Floor
    '       End If
    '       value = value * Math.Pow(10, precision)
    '       value = roundingFunction(value)
    '       Return value * Math.Pow(10, -1 * precision)
    '   End Function


    'Mohit Lalwani on 20-Jan-2015
    Private Sub btnDetailsCancle_ServerClick(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnDetailsCancle.ServerClick
        ShowHideDeatils(False)
        pnlDetailsPopup.Visible = False
        upnlDetails.Update()
    End Sub
    '/Mohit Lalwani on 20-Jan-2015

    Private Function FillRFQDataTable(ByVal sPP_ID As String) As Boolean
        Dim sRFQId As String
        Dim arrSelectedShare() As String ''Dilkhush 19SEp2016 Added condition to check basket is not with duplicate shares
        Dim addshare As Boolean  ''Dilkhush 19SEp2016 Added condition to check basket is not with duplicate shares
        addshare = False
        Try
            Dim dtRFQInsertData As DataTable

            Dim sProductDefinition As String = ""


            ''<added by Rushikesh on 4-July-16:EQBOSDEV-434 Preventive check for underlying mismatch issue.>
            Dim strSelectedBasketShares As String = ""
            If chkAddShare1.Checked = True Then
                If ddlShareDRA.SelectedValue Is Nothing Then
                    strSelectedBasketShares = ""
                Else
                    strSelectedBasketShares = ddlShareDRA.SelectedValue
                End If
            End If
            If chkAddShare2.Checked = True Then
                ''<Dilkhush 19SEp2016 Added condition to check basket is not with duplicate shares>
                arrSelectedShare = strSelectedBasketShares.Split(CChar(","))  ''Dilkhush 19SEp2016 Added condition to check basket is not with duplicate shares
                For i = 0 To arrSelectedShare.Length - 1
                    If ddlShareDRA2.SelectedValue Is Nothing Then
                        strSelectedBasketShares = ""
                    Else
                        If arrSelectedShare(i) <> ddlShareDRA2.SelectedValue Then
                            addshare = True
                        Else
                            addshare = False
                            Exit For
                        End If
                    End If
                Next
                If addshare Then
                    strSelectedBasketShares = If(strSelectedBasketShares = "", ddlShareDRA2.SelectedValue, If(ddlShareDRA2.SelectedValue <> "", strSelectedBasketShares & "," & ddlShareDRA2.SelectedValue, strSelectedBasketShares))
                End If
            End If
            If chkAddShare3.Checked = True Then
                arrSelectedShare = strSelectedBasketShares.Split(CChar(","))  ''Dilkhush 19SEp2016 Added condition to check basket is not with duplicate shares
                For i = 0 To arrSelectedShare.Length - 1
                    If ddlShareDRA3.SelectedValue Is Nothing Then
                        strSelectedBasketShares = ""
                    Else
                        If arrSelectedShare(i) <> ddlShareDRA3.SelectedValue Then
                            addshare = True
                        Else
                            addshare = False
                            Exit For
                        End If
                    End If
                Next
                If addshare Then
                    strSelectedBasketShares = If(strSelectedBasketShares = "", ddlShareDRA3.SelectedValue, If(ddlShareDRA3.SelectedValue <> "", strSelectedBasketShares & "," & ddlShareDRA3.SelectedValue, strSelectedBasketShares))
                End If
                ''</Dilkhush 19SEp2016 Added condition to check basket is not with duplicate shares>
            End If
            If strSelectedBasketShares.StartsWith(",") Then
                strSelectedBasketShares = strSelectedBasketShares.Substring(1)
            End If
            ''</added by Rushikesh on 4-July-16:EQBOSDEV-434 Preventive check for underlying mismatch issue.>

            objELNRFQ.GetUDTSchema("udtDRAFCNRFQ", dtRFQInsertData)

            dtRFQInsertData.Rows.Add()
            dtRFQInsertData.Rows(0)("ER_PP_ID") = sPP_ID
            dtRFQInsertData.Rows(0)("ER_Type") = ddlDRAType.SelectedValue
            sProductDefinition += ddlDRAType.SelectedValue
            dtRFQInsertData.Rows(0)("ER_StrikePercentage") = Val(txtStrikeDRAFCN.Text)
            sProductDefinition += Val(txtStrikeDRAFCN.Text).ToString
            dtRFQInsertData.Rows(0)("ER_InterBankPrice") = Val(txtDRAPrice.Text)
            dtRFQInsertData.Rows(0)("ER_InterBankPriceSolve_YN") = "Y"
            dtRFQInsertData.Rows(0)("ER_UnderlyingCode_Type") = "RIC"
            If strSelectedBasketShares = txtBasketShares.Text Then ''<added by Rushikesh on 4-July-16:EQBOSDEV-434 Preventive check for underlying mismatch issue.>
                If txtBasketShares.Text = "" Then
                    dtRFQInsertData.Rows(0)("ER_UnderlyingCode") = ddlShareDRA.SelectedValue
                    sProductDefinition += ddlShareDRA.SelectedValue
                Else
                    dtRFQInsertData.Rows(0)("ER_UnderlyingCode") = txtBasketShares.Text
                    sProductDefinition += txtBasketShares.Text
                End If
            Else
                lblerror.Text = "Please select valid basket."
                Exit Function
            End If
            dtRFQInsertData.Rows(0)("ER_TenorType") = ddlTenorTypeDRA.SelectedValue
            dtRFQInsertData.Rows(0)("ER_Tenor") = CInt(Val(txtTenorDRA.Text))
            dtRFQInsertData.Rows(0)("ER_SecurityDescription") = "DRA/FCN"
            dtRFQInsertData.Rows(0)("ER_QuoteType") = "0"
            dtRFQInsertData.Rows(0)("ER_BuySell") = "Buy"

            '<Added by AshwiniP on 05-Oct-2016 : For notional validation at the time of pricing>
            If Qty_Validate(txtOrderDRAFCN.Text) = False Then
                Exit Function
            End If
            Try
                txtOrderDRAFCN.Text = FinIQApp_Number.ConvertFormattedAmountToNumber(txtOrderDRAFCN.Text).ToString
                txtOrderDRAFCN.Text = SetNumberFormat(txtOrderDRAFCN.Text, 0)
                dtRFQInsertData.Rows(0)("ER_CashOrderQuantity") = Replace(txtOrderDRAFCN.Text, ",", "")
            Catch ex As Exception
                lblerror.Text = "Please enter valid Notional"
                Exit Function
            End Try
            '</Added by AshwiniP on 05-Oct-2016>

            dtRFQInsertData.Rows(0)("ER_CashCurrency") = ddlNoteCcy.SelectedValue.ToUpper
            dtRFQInsertData.Rows(0)("ER_TransactionTime") = DateTime.Now.ToString("dd-MMM-yyyy HH:mm:ss.fff")
            dtRFQInsertData.Rows(0)("ER_ProductDefinition") = sProductDefinition
            dtRFQInsertData.Rows(0)("ER_Text") = "2012_QR12"
            dtRFQInsertData.Rows(0)("ER_Symbol") = ""
            dtRFQInsertData.Rows(0)("ER_Created_By") = LoginInfoGV.Login_Info.LoginId
            dtRFQInsertData.Rows(0)("ER_Exchange") = CType(Session("BasketExchange"), String)
            dtRFQInsertData.Rows(0)("ER_Quote_Request_YN") = "Y"
            dtRFQInsertData.Rows(0)("ER_Entity_ID") = LoginInfoGV.Login_Info.EntityID.ToString
            SetTemplateDetails(SchemeName) ''Dilkhush
            dtRFQInsertData.Rows(0)("ER_Template_ID") = Convert.ToString(Session("Template_Code_DRAFCN"))
            dtRFQInsertData.Rows(0)("ER_Upfront") = Val(txtUpfrontDRA.Text) * 100
            If ddlDRAType.SelectedValue.Trim.ToUpper = "DRA" Then
                dtRFQInsertData.Rows(0)("ER_GuaranteedDuration") = DRA_Get_NumberOf_Months_From_KIFrequency_GU_Periods().ToString
                dtRFQInsertData.Rows(0)("ER_GuaranteedDurationType") = "MONTH"
            Else
                dtRFQInsertData.Rows(0)("ER_GuaranteedDuration") = ""
                dtRFQInsertData.Rows(0)("ER_GuaranteedDurationType") = ""
            End If

            dtRFQInsertData.Rows(0)("ER_SolveFor") = ddlSolveForDRA.SelectedValue
            If chkKI.Checked = True Then
                dtRFQInsertData.Rows(0)("ER_KI_Type") = ddlKIType.SelectedValue
            Else
                dtRFQInsertData.Rows(0)("ER_KI_Type") = "none"
            End If
            dtRFQInsertData.Rows(0)("ER_KI_Level") = Val(txtKILevel.Text)
            dtRFQInsertData.Rows(0)("ER_KI_ObservationFrequency") = ddlKIFrequency.SelectedValue
            dtRFQInsertData.Rows(0)("ER_CouponPercentage") = Val(txtCoupon.Text)
            If chkKO.Checked = True Then
                '<AvinashG. on 29-Sep-2016:Save dropdown based KO Type for SCB| EQSCB-3 DRA FCN : Daily KO to be supported >
                dtRFQInsertData.Rows(0)("ER_KO_Type") = ddlKOType.SelectedValue
                'dtRFQInsertData.Rows(0)("ER_KO_Type") = "European"
                '</AvinashG. on 29-Sep-2016:Save dropdown based KO Type for SCB| EQSCB-3 DRA FCN : Daily KO to be supported >
            End If
            dtRFQInsertData.Rows(0)("ER_KO_Level") = Val(txtKOLevel.Text)
            dtRFQInsertData.Rows(0)("ER_OTC_YN") = "N"
            dtRFQInsertData.Rows(0)("ER_EntityName") = ddlentity.SelectedItem.Text
            Dim strLoginUserEmailID As String
            strLoginUserEmailID = objELNRFQ.web_Get_EmailOf_Login_User(LoginInfoGV.Login_Info.LoginId)
            dtRFQInsertData.Rows(0)("ER_EmailId") = strLoginUserEmailID
            dtRFQInsertData.Rows(0)("ER_Branch") = lblbranch.Text
            dtRFQInsertData.Rows(0)("ER_RFQ_RMName") = ddlRFQRM.SelectedItem.Value
            dtRFQInsertData.Rows(0)("ER_RFQ_Source") = "MONOTAB_PRICER"
            If ddlSolveForDRA.SelectedValue = "CONVERSION_STRIKE" Then
                dtRFQInsertData.Rows(0)("EP_OfferPrice") = Val(txtDRAPrice.Text)
                dtRFQInsertData.Rows(0)("EP_CouponPercentage") = Val(txtCoupon.Text)
            ElseIf ddlSolveForDRA.SelectedValue = "COUPON" Then
                dtRFQInsertData.Rows(0)("EP_StrikePercentage") = Val(txtStrikeDRAFCN.Text)
                dtRFQInsertData.Rows(0)("EP_OfferPrice") = Val(txtDRAPrice.Text)
            Else
                dtRFQInsertData.Rows(0)("EP_StrikePercentage") = Val(txtStrikeDRAFCN.Text)
                dtRFQInsertData.Rows(0)("EP_CouponPercentage") = Val(txtCoupon.Text)
            End If

            dtRFQInsertData.Rows(0)("EP_RM_Margin") = CDbl(txtUpfrontDRA.Text)

            Select Case objELNRFQ.Insert_Dt_DRAFCN_RFQ(dtRFQInsertData, sRFQId)
                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                    Session.Add("Quote_ID", sRFQId)
            End Select
            FillRFQDataTable = True                 ''Added by AshwiniP on 05-Oct-2016
        Catch ex As Exception
            Throw ex
        End Try

    End Function

    Private Sub ddlBasketSharesPopValue_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlBasketSharesPopValue.SelectedIndexChanged
        Try
            'Added by Mohit Lalwani on 1-Aug-2016
            RestoreSolveAll()
            RestoreAll()
            '/Added by Mohit Lalwani on 1-Aug-2016
            lblerrorPopUp.Text = ""
            chkUpfrontOverride.Checked = False
            chkUpfrontOverride.Visible = False
        Catch ex As Exception
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                        sSelfPath, "ddlBasketSharesPopValue_SelectedIndexChanged", ErrorLevel.High)
        End Try
    End Sub
    'Added by Mohit Lalwani on 1-Aug-2016
    Private Sub ddlBookingBranchPopUpValue_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlBookingBranchPopUpValue.SelectedIndexChanged
        RestoreSolveAll()
        RestoreAll()

        '<RiddhiS. on 10-Nov-2016: On change of book center, reset customer grid>
        Session.Remove("dtDRAFCNPreTradeAllocation")
        Dim tempDt As DataTable
        tempDt = New DataTable("tempDt")
        tempDt.Columns.Add("RM_Name", GetType(String))
        tempDt.Columns.Add("Account_Number", GetType(String))
        tempDt.Columns.Add("AlloNotional", GetType(String))
        tempDt.Columns.Add("Cust_ID", GetType(String))
        tempDt.Columns.Add("DocId", GetType(String))
        tempDt.Columns.Add("EPOF_OrderId", GetType(String))
        tempDt.Rows.InsertAt(tempDt.NewRow(), 0)
        Session.Add("dtDRAFCNPreTradeAllocation", tempDt)
        grdRMData.DataSource = tempDt
        grdRMData.DataBind()
        For Each row As GridViewRow In grdRMData.Rows
            If row.RowType = DataControlRowType.DataRow Then
                row.Cells(0).Controls.OfType(Of CheckBox)().FirstOrDefault().Checked = True
            End If
            OnCheckedChanged(CType(grdRMData.Rows((0)).Cells(0).FindControl("CheckBox1"), CheckBox), Nothing)
        Next

    End Sub
    '/Added by Mohit Lalwani on 1-Aug-2016

    'Added by Mohit Lalwani on 1-Aug-2016
    Private Sub txtOrderCmt_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtOrderCmt.TextChanged
        RestoreSolveAll()
        RestoreAll()
    End Sub
    '/Added by Mohit Lalwani on 1-Aug-2016
        Private Sub Generate_DRAFCN(ByVal DealNO As String)
        Try
            Dim objDocGen As Web_DocGen.DocGen
            objDocGen = New Web_DocGen.DocGen
            objDocGen.Url = LoginInfoGV.Login_Info.WebServicePath & "/DocumentGeneration/DocGen.asmx"
            Dim O_Outputfile() As String
            Dim strDocGenVirtualPath As String = String.Empty
            strDocGenVirtualPath = objReadConfig.ReadConfig(New DataSet, "WebDocGen_VirtualPath", "DocGen", CStr(LoginInfoGV.Login_Info.EntityID), "")
            objDocGen.Generate_DRAFCN(DealNO, LoginInfoGV.Login_Info.LoginId, LoginInfoGV.Login_Info.EntityID, "PUBLISH_TERMSHEET", "ELN_RFQ", O_Outputfile)
            If Not IsNothing(O_Outputfile) Then
                If O_Outputfile.Length > 0 Then
                    ScriptManager.RegisterStartupScript(Me.Page, Me.GetType, "JSgetDescription5446", "window.open('" & LoginInfoGV.Login_Info.WebServicePath & "/../" & strDocGenVirtualPath & "/" & O_Outputfile(O_Outputfile.Length - 1).ToString & "','CUSTOMER_PROFILE','scrollbars=yes,resizable=yes,menubar=0,status=0,width=1280,height=650,top=0,left=0');", True)
                    ScriptManager.RegisterStartupScript(Me.Page, Me.GetType, "JSSpineer", "setSpineer();", True)
                Else
                    lblError.Text = "Document generation failed !"
                End If
            Else
            End If

        Catch ex As Exception

        End Try
    End Sub
    Private Sub Generate_Deal(ByVal DealNO As String)
        Try
            Dim objDocGen As Web_DocGen.DocGen
            objDocGen = New Web_DocGen.DocGen
            objDocGen.Url = LoginInfoGV.Login_Info.WebServicePath & "/DocumentGeneration/DocGen.asmx"
            Dim O_Outputfile() As String
            Dim strDocGenVirtualPath As String = String.Empty
            strDocGenVirtualPath = objReadConfig.ReadConfig(New DataSet, "WebDocGen_VirtualPath", "DocGen", CStr(LoginInfoGV.Login_Info.EntityID), "")
            objDocGen.Generate_DRAFCN(DealNO, LoginInfoGV.Login_Info.LoginId, LoginInfoGV.Login_Info.EntityID, "PUBLISH_TERMSHEET", "RM_ORDER", O_Outputfile)
            If Not IsNothing(O_Outputfile) Then
                If O_Outputfile.Length > 0 Then
                    ScriptManager.RegisterStartupScript(Me.Page, Me.GetType, "JSgetDescription5446", "window.open('" & LoginInfoGV.Login_Info.WebServicePath & "/../" & strDocGenVirtualPath & "/" & O_Outputfile(O_Outputfile.Length - 1).ToString & "','CUSTOMER_PROFILE','scrollbars=yes,resizable=yes,menubar=0,status=0,width=1280,height=650,top=0,left=0');", True)
                    ScriptManager.RegisterStartupScript(Me.Page, Me.GetType, "JSSpineer", "setSpineer();", True)
                Else
                    lblerror.Text = "Document generation failed !"
                End If
            Else
            End If

        Catch ex As Exception

        End Try
    End Sub

    Private Sub addPPimg_Click(ByVal sender As Object, ByVal e As System.Web.UI.ImageClickEventArgs) Handles addPPimg.Click
        Try
            chkPPmaillist.Visible = True
        Catch ex As Exception
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                       sSelfPath, "addPPimg_Click", ErrorLevel.High)
            Throw ex
        End Try
    End Sub

    Private Function GetBestPriceConfirm(ByVal BasePrice As String) As Boolean ''<Nikhil M. on 20-Sep-2016: Removed Parmetter , ByVal IssureName As String>
        Try

            Dim temp As HiddenField
            temp = getBestPrice(JpmHiddenPrice, HsbcHiddenPrice)
            temp = getBestPrice(temp, UbsHiddenPrice)
            temp = getBestPrice(temp, CsHiddenPrice)
            temp = getBestPrice(temp, BNPPHiddenPrice)
            temp = getBestPrice(temp, BAMLHiddenPrice)
            temp = getBestPrice(temp, DBIBHiddenPrice)
            temp = getBestPrice(temp, OCBCHiddenPrice)
            temp = getBestPrice(temp, CITIHiddenPrice)
            temp = getBestPrice(temp, LEONTEQHiddenPrice)
            temp = getBestPrice(temp, COMMERZHiddenPrice)

            If temp.Value.Split(CChar(","))(0) = BasePrice.Split(CChar(","))(0) Then

            Else
                displayReason()
            End If
        Catch ex As Exception
            lblerror.Text = "GetBestPriceConfirm: Error occurred in Processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                               sSelfPath, "GetBestPriceConfirm", ErrorLevel.High)
        End Try
    End Function


    Private Function displayReason() As Boolean
        Try
            Dim DtReason As DataTable
            DtReason = New DataTable("Dummy")
            Select Case WebCommonFunction.DB_Get_Common_Data("EQC_Dealconfirmation_reason", DtReason)
                Case Web_CommonFunction.Database_Transaction_Response.Db_Successful
                    drpConfirmDeal.DataTextField = "Data_Value"
                    drpConfirmDeal.DataValueField = "Misc1"
                    drpConfirmDeal.DataSource = DtReason
                    drpConfirmDeal.DataBind()
                    drpConfirmDeal.Items.Insert(0, New DropDownListItem("", ""))
                    drpConfirmDeal.SelectedIndex = 0
                Case Web_CommonFunction.Database_Transaction_Response.DB_Unsuccessful, Web_CommonFunction.Database_Transaction_Response.Db_No_Data
                    drpConfirmDeal.DataSource = DtReason
                    drpConfirmDeal.DataBind()
            End Select
        Catch ex As Exception
            lblerror.Text = "displayReason: Error occurred in Processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                                sSelfPath, "displayReason", ErrorLevel.High)
        End Try
    End Function
    
    'Added by Chitralekha on 12-Sept-16
    Protected Sub EnableTimerTick()
        Try
            ChkGridRefreshRate()
            ' fillGrid()
        Catch ex As Exception
		Throw ex
        End Try
    End Sub

    Private Sub ChkGridRefreshRate()
        Try
            interval = objReadConfig.ReadConfig(dsConfig, "EQC_Pricer_RefreshTimeInSec", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "60")
            If String.Compare(interval, "0") <> 0 Then
                TmRefresh.Interval = CInt(interval) * 1000
                TmRefresh.Enabled = True
            End If
        Catch ex As Exception
		Throw ex
        End Try
    End Sub


    Private Sub TmRefresh_Tick(ByVal sender As Object, ByVal e As System.EventArgs) Handles TmRefresh.Tick
        Try
            interval = objReadConfig.ReadConfig(dsConfig, "EQC_Pricer_RefreshTimeInSec", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "60")
            If String.Compare(interval, "0") <> 0 Then
                If rbHistory.SelectedValue.Trim = "Order History" Then
                fill_OrderGrid() ' changed by Chitralekha on 12-sep-16
                End If
            End If

        Catch ex As Exception

            lblError.Text = "TmRefresh_Tick: Error occurred in Processing."

            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                                sSelfPath, "TmRefresh_Tick", ErrorLevel.High)
        End Try
    End Sub
    'Ended by Chitralekha on 12-sept-16
    ''<Start  | Nikhil M. on 17-Sep-2016: Added>

    Private Sub chkCITI_CheckedChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles chkCITI.CheckedChanged
        Try
            hdnBestStrike.Value = lblCITIPrice.Text
            hdnBestProvider.Value = "CITI"
            CheckUncheck(chkCITI)
            ''<Nikhil M. on 22-Oct-2016: Added for Enabling the conrol for Hedge>
            If UCase(Request.QueryString("EXTLOD")) = "HEDGE" Then
                EnableDisableForOrderPoolData(Convert.ToString(Session("RePricePPName")))
            End If
        Catch ex As Exception
            lblerror.Text = "chkCITI_CheckedChanged: Error occurred in Processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                                sSelfPath, "chkCITI_CheckedChanged", ErrorLevel.High)
        End Try

    End Sub


    Private Sub chkBAML_CheckedChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles chkBAML.CheckedChanged
        Try
            hdnBestStrike.Value = lblBAMLPrice.Text
            hdnBestProvider.Value = "BAML"
            CheckUncheck(chkBAML)
            ''<Nikhil M. on 22-Oct-2016: Added for Enabling the conrol for Hedge>
            If UCase(Request.QueryString("EXTLOD")) = "HEDGE" Then
                EnableDisableForOrderPoolData(Convert.ToString(Session("RePricePPName")))
            End If
        Catch ex As Exception
            lblerror.Text = "chkBAML_CheckedChanged: Error occurred in Processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                                sSelfPath, "chkBAML_CheckedChanged", ErrorLevel.High)
        End Try

    End Sub

    Private Sub chkJPM_CheckedChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles chkJPM.CheckedChanged
        Try
            hdnBestStrike.Value = lblJPMPrice.Text
            hdnBestProvider.Value = "JPM"
            CheckUncheck(chkJPM)
            ''<Nikhil M. on 22-Oct-2016: Added for Enabling the conrol for Hedge>
            If UCase(Request.QueryString("EXTLOD")) = "HEDGE" Then
                EnableDisableForOrderPoolData(Convert.ToString(Session("RePricePPName")))
            End If
        Catch ex As Exception
            lblerror.Text = "chkJPM_CheckedChanged: Error occurred in Processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                                sSelfPath, "chkJPM_CheckedChanged", ErrorLevel.High)
        End Try

    End Sub

    Private Sub chkUBS_CheckedChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles chkUBS.CheckedChanged
        Try
            hdnBestStrike.Value = lblUBSPrice.Text
            hdnBestProvider.Value = "UBS"
            CheckUncheck(chkUBS)
            ''<Nikhil M. on 22-Oct-2016: Added for Enabling the conrol for Hedge>
            If UCase(Request.QueryString("EXTLOD")) = "HEDGE" Then
                EnableDisableForOrderPoolData(Convert.ToString(Session("RePricePPName")))
            End If
        Catch ex As Exception
            lblerror.Text = "chkUBS_CheckedChanged: Error occurred in Processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                                sSelfPath, "chkUBS_CheckedChanged", ErrorLevel.High)
        End Try

    End Sub

    Private Sub chkBNPP_CheckedChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles chkBNPP.CheckedChanged
        Try
            hdnBestStrike.Value = lblBNPPPrice.Text
            hdnBestProvider.Value = "BNPP"
            CheckUncheck(chkBNPP)
            ''<Nikhil M. on 22-Oct-2016: Added for Enabling the conrol for Hedge>
            If UCase(Request.QueryString("EXTLOD")) = "HEDGE" Then
                EnableDisableForOrderPoolData(Convert.ToString(Session("RePricePPName")))
            End If
        Catch ex As Exception
            lblerror.Text = "chkBNPP_CheckedChanged: Error occurred in Processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                                sSelfPath, "chkBNPP_CheckedChanged", ErrorLevel.High)
        End Try

    End Sub

    Private Sub chkDBIB_CheckedChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles chkDBIB.CheckedChanged
        Try
            hdnBestStrike.Value = lblDBIBPrice.Text
            hdnBestProvider.Value = "DBIB"
            CheckUncheck(chkDBIB)
            ''<Nikhil M. on 22-Oct-2016: Added for Enabling the conrol for Hedge>
            If UCase(Request.QueryString("EXTLOD")) = "HEDGE" Then
                EnableDisableForOrderPoolData(Convert.ToString(Session("RePricePPName")))
            End If
        Catch ex As Exception
            lblerror.Text = "chkDBIB_CheckedChanged: Error occurred in Processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                                sSelfPath, "chkDBIB_CheckedChanged", ErrorLevel.High)
        End Try

    End Sub

    Private Sub chkCS_CheckedChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles chkCS.CheckedChanged
        Try
            hdnBestStrike.Value = lblCSPrice.Text
            hdnBestProvider.Value = "CS"
            CheckUncheck(chkCS)
            ''<Nikhil M. on 22-Oct-2016: Added for Enabling the conrol for Hedge>
            If UCase(Request.QueryString("EXTLOD")) = "HEDGE" Then
                EnableDisableForOrderPoolData(Convert.ToString(Session("RePricePPName")))
            End If
        Catch ex As Exception
            lblerror.Text = "chkCS_CheckedChanged: Error occurred in Processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                                sSelfPath, "chkCS_CheckedChanged", ErrorLevel.High)
        End Try

    End Sub

    Private Sub chkHSBC_CheckedChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles chkHSBC.CheckedChanged
        Try
            hdnBestStrike.Value = lblHSBCPrice.Text
            hdnBestProvider.Value = "HSBC"
            CheckUncheck(chkHSBC)
            ''<Nikhil M. on 22-Oct-2016: Added for Enabling the conrol for Hedge>
            If UCase(Request.QueryString("EXTLOD")) = "HEDGE" Then
                EnableDisableForOrderPoolData(Convert.ToString(Session("RePricePPName")))
            End If
        Catch ex As Exception
            lblerror.Text = "chkHSBC_CheckedChanged: Error occurred in Processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                                sSelfPath, "chkHSBC_CheckedChanged", ErrorLevel.High)
        End Try

    End Sub

    Public Function CheckUncheck(ByVal tempCheckBox As CheckBox) As CheckBox
        Try
            Dim flagSHowHide As Boolean
            If tempCheckBox.Checked = True Then
                flagSHowHide = False
            Else
                flagSHowHide = True
            End If
            chkCITI.Checked = False
            chkJPM.Checked = False
            chkHSBC.Checked = False
            chkBNPP.Checked = False
            chkBAML.Checked = False
            chkUBS.Checked = False
            chkCS.Checked = False
            chkOCBC.Checked = False
            chkDBIB.Checked = False
            chkLEONTEQ.Checked = False
            chkCOMMERZ.Checked = False
            If flagSHowHide = True Then
                CheckBestPrice()
                tempCheckBox.Checked = False
            Else
                tempCheckBox.Checked = True
            End If
            GetCommentary_DRA()
            RestoreSolveAll()
            RestoreAll()
        Catch ex As Exception
            lblerror.Text = "CheckUncheck: Error occurred in Processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                                sSelfPath, "CheckUncheck", ErrorLevel.High)
        End Try

    End Function

    ''<End  | Nikhil M. on 17-Sep-2016: Added>
    
    
    

    ''' <summary>
    ''' Get the setup value from the session saved datatable as per user or entity or else return passed default value
    ''' </summary>
    ''' <param name="ControlName">Control display label or referential present on screen.</param>
    ''' <param name="DefaultValue">Default value to be returned if not value is found.</param>
    ''' <returns>String value for calling control name.</returns>
    ''' <remarks>'Mohit lalwani on 7-Sept-2016 for Personal Settings</remarks>
    Private Function getControlPersonalSetting(ByVal ControlName As String, ByVal DefaultValue As String) As String
        Dim dtGetLoginPP As DataTable
        Dim dtPersonalSetting As DataTable

        Dim dr1 As DataRow()
        Dim dr2 As DataRow()
        Try
            dtPersonalSetting = New DataTable("Personal Setting")
            dtPersonalSetting = CType(Session("dtPersonalSettings"), DataTable)
            If dtPersonalSetting.Rows.Count > 0 Then
                dr1 = dtPersonalSetting.Select("Control_Name ='" + ControlName.ToUpper + "' and Setting_Type ='USER' and Login_Id ='" + LoginInfoGV.Login_Info.LoginId + "'")
                dr2 = dtPersonalSetting.Select("Control_Name ='" + ControlName.ToUpper + "'  and Setting_Type ='ENTITY'")
                If dr1.Length > 0 Then
                    getControlPersonalSetting = dr1(0).Item("Default_Value").ToString
                ElseIf dr2.Length > 0 Then
                    getControlPersonalSetting = dr2(0).Item("Default_Value").ToString
                Else
                    getControlPersonalSetting = DefaultValue
                End If
            Else
                getControlPersonalSetting = DefaultValue
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    '/Mohit lalwani on 7-Sept-2016 for Personal Settings

 ''Added By nikhil M on 20Sep16  EQSCB-16
    Public Function SetDllBookingBranch() As Boolean
        ddlBookingBranchPopUpValue.Items.Add(New DropDownListItem("Hong Kong", "HK"))
        ddlBookingBranchPopUpValue.Items.Add(New DropDownListItem("Singapore", "SG"))
        ddlBookingBranchPopUpValue.SelectedIndex = 1
    End Function

    ''Added By nikhil M on 20Sep16  EQSCB-16
    Private Sub funAdd()
        Try

            Dim tempDt As DataTable
            tempDt = New DataTable("tempDt")
            If CType(Session("dtDRAFCNPreTradeAllocation"), DataTable) Is Nothing Then
            Else
                tempDt = CType(Session("dtDRAFCNPreTradeAllocation"), DataTable)
            End If


            Dim MaxRM_Allocation As Integer = 0
            MaxRM_Allocation = CInt(objReadConfig.ReadConfig(dsConfig, "EQC_Allocation_MaxAllowedRecords", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "3").Trim.ToUpper())
            If tempDt IsNot Nothing Then
                If tempDt.Rows.Count >= MaxRM_Allocation Then
                    lblerrorPopUp.Text = "Can not allocate order to more than " + MaxRM_Allocation.ToString + " records."
                    Exit Sub
                End If
            End If

            If tempDt.Rows.Count = 0 Then
                tempDt.Columns.Add("RM_Name", GetType(String))
                tempDt.Columns.Add("Account_Number", GetType(String))
                tempDt.Columns.Add("AlloNotional", GetType(String))
                tempDt.Columns.Add("Cust_ID", GetType(String))
                tempDt.Columns.Add("DocId", GetType(String))
                tempDt.Columns.Add("EPOF_OrderId", GetType(String))
                tempDt.Rows.InsertAt(tempDt.NewRow(), 0)
            Else
                tempDt.Rows.InsertAt(tempDt.NewRow(), tempDt.Rows.Count)
            End If

            Session.Add("dtDRAFCNPreTradeAllocation", tempDt)
            lblerrorPopUp.Text = ""
            chkUpfrontOverride.Checked = False
            chkUpfrontOverride.Visible = False

            If tempDt IsNot Nothing Then
                Dim chkedRows(MaxRM_Allocation + 1) As Integer
                Dim i As Integer = 0
                Dim iDr As Integer = 0
                For Each row As GridViewRow In grdRMData.Rows
                    If row.RowType = DataControlRowType.DataRow Then
                        Dim isChecked As Boolean = row.Cells(0).Controls.OfType(Of CheckBox)().FirstOrDefault().Checked
                        If isChecked Then
                            chkedRows(i) = iDr
                            i = i + 1
                        End If
                    End If
                    iDr = iDr + 1
                Next
                grdRMData.DataSource = tempDt
                grdRMData.DataBind()


                Dim k As Integer
                ''Dim count As Integer = CType(tempDt.Rows.Count, Integer)
                For k = 0 To tempDt.Rows.Count - 1
                    CType(grdRMData.Rows((k)).Cells(0).FindControl("CheckBox1"), CheckBox).Checked = True
                    OnCheckedChanged(CType(grdRMData.Rows((k)).Cells(0).FindControl("CheckBox1"), CheckBox), Nothing)
                    CType(grdRMData.Rows((k)).Cells(0).FindControl("ddlRMName"), RadDropDownList).SelectedText = tempDt.Rows(k).Item("RM_Name").ToString

                    ddl_OnSelectedIndexChanged(CType(grdRMData.Rows(k).Cells(0).FindControl("ddlRMName"), RadDropDownList), Nothing) 'Mohit Lalwani on 04-Nov-2016

                    CType(grdRMData.Rows((k)).FindControl("FindCustomer"), FinIQ_Fast_Find_Customer).setCustName = tempDt.Rows(k).Item("Account_Number").ToString
                    CType(grdRMData.Rows((k)).FindControl("FindCustomer"), FinIQ_Fast_Find_Customer).HiddenCustomerName = tempDt.Rows(k).Item("Account_Number").ToString
                    CType(grdRMData.Rows((k)).FindControl("FindCustomer"), FinIQ_Fast_Find_Customer).HiddenCustomerId = tempDt.Rows(k).Item("Cust_ID").ToString
                    CType(grdRMData.Rows((k)).FindControl("FindCustomer"), FinIQ_Fast_Find_Customer).HiddenDocId = tempDt.Rows(k).Item("DocId").ToString
                    'Select Case objReadConfig.ReadConfig(dsConfig, "EQC_ShowAllocationRMName", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper  ''Commented by AshwiniP on 13-Oct-2016
                    '    Case "Y", "YES"
                    ' End Select
                Next

            End If

            'fill_RMListAllocation()
        Catch ex As Exception
            ''lblError.Text = "Error occurred while allocating the notional."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                          sSelfPath, "funAdd", ErrorLevel.High)
            Throw ex
        End Try

    End Sub

    Protected Sub OnCheckedChanged(ByVal sender As Object, ByVal e As EventArgs)
        Dim isUpdateVisible As Boolean = False
        Dim chk As CheckBox = TryCast(sender, CheckBox)
        Dim tempDt As DataTable
        Try
            '' Dim maxAcclength As String = objReadConfig.ReadConfig(dsConfig, "EQC_PostTrade_AccountNumLength", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "10").Trim.ToUpper   ''Commented by AshwiniP on 13-Oct-2016
            tempDt = CType(Session("dtDRAFCNPreTradeAllocation"), DataTable)
            If chk.ID = "chkAll" Then
                For Each row As GridViewRow In grdRMData.Rows
                    If row.RowType = DataControlRowType.DataRow Then
                        row.Cells(0).Controls.OfType(Of CheckBox)().FirstOrDefault().Checked = chk.Checked
                    End If
                Next
            End If
            Dim chkAll As CheckBox = TryCast(grdRMData.HeaderRow.FindControl("chkAll"), CheckBox)
            chkAll.Checked = True
            Dim k As Integer = 0
            For Each row As GridViewRow In grdRMData.Rows
                If row.RowType = DataControlRowType.DataRow Then
                    If row.Cells(0).Controls.OfType(Of CheckBox)().FirstOrDefault().Checked = True Then
                        tempDt.Rows(k)("EPOF_OrderId") = "Check"
                    Else
                        tempDt.Rows(k)("EPOF_OrderId") = "Uncheck"
                    End If
                End If
                k += 1
            Next
            For Each row As GridViewRow In grdRMData.Rows
                If row.RowType = DataControlRowType.DataRow Then
                    Dim isChecked As Boolean = row.Cells(0).Controls.OfType(Of CheckBox)().FirstOrDefault().Checked

                    For i As Integer = 1 To row.Cells.Count - 1

                        row.Cells(i).Controls.OfType(Of Label)().FirstOrDefault().Visible = Not isChecked
                        If row.Cells(i).Controls.OfType(Of TextBox)().ToList().Count > 0 Then
                            row.Cells(i).Controls.OfType(Of TextBox)().FirstOrDefault().Visible = isChecked
                            row.Cells(i).Controls.OfType(Of TextBox)().FirstOrDefault().Attributes.Add("onkeypress", "KeysAllowedForNotional()")

                            ''<Nikhil M. on 23-Sep-2016: Commented>
                            'If row.Cells(i).Controls.OfType(Of TextBox)().FirstOrDefault().ID = "txtAccNo" Then
                            '    row.Cells(i).Controls.OfType(Of TextBox)().FirstOrDefault().Attributes.Add("MaxLength", maxAcclength) ''29dec2015
                            'End If
                        End If
                        If i = 1 Then
                            If row.Cells(i).Controls.OfType(Of RadDropDownList)().ToList().Count > 0 Then
                                row.Cells(i).Controls.OfType(Of RadDropDownList)().FirstOrDefault().Visible = isChecked
                                If row.Cells(i).Controls.OfType(Of Label)().FirstOrDefault().Text.Replace(" ", "") = "" Then
                                    row.Cells(i).Controls.OfType(Of RadDropDownList)().FirstOrDefault().SelectedIndex = 0
                                Else
                                    ''row.Cells(i).Controls.OfType(Of DropDownList)().FirstOrDefault().SelectedIndex = row.Cells(i).Controls.OfType(Of DropDownList)().FirstOrDefault().Items.IndexOf(row.Cells(i).Controls.OfType(Of DropDownList)().FirstOrDefault().Items.FindByText(row.Cells(i).Controls.OfType(Of Label)().FirstOrDefault().Text))
                                    row.Cells(i).Controls.OfType(Of RadDropDownList)().FirstOrDefault().SelectedIndex = row.Cells(i).Controls.OfType(Of RadDropDownList)().FirstOrDefault().FindItemByText(row.Cells(i).Controls.OfType(Of Label)().FirstOrDefault().Text).Index

                                End If
                            End If
                        End If

                        ''''<Nikhil M. on 26-Sep-2016: For CustPan>
                        If i = 2 Then
                            If row.Cells(i).Controls.OfType(Of RadDropDownList)().ToList().Count > 0 Then
                                row.Cells(i).Controls.OfType(Of RadDropDownList)().FirstOrDefault().Visible = isChecked
                                If row.Cells(i).Controls.OfType(Of Label)().FirstOrDefault().Text.Replace(" ", "") = "" Then
                                    row.Cells(i).Controls.OfType(Of RadDropDownList)().FirstOrDefault().SelectedIndex = 0
                                Else
                                    row.Cells(i).Controls.OfType(Of RadDropDownList)().FirstOrDefault().SelectedIndex = row.Cells(i).Controls.OfType(Of RadDropDownList)().FirstOrDefault().FindItemByText(row.Cells(i).Controls.OfType(Of Label)().FirstOrDefault().Text).Index
                                End If
                            End If
                        End If
                        If isChecked AndAlso Not isUpdateVisible Then
                            isUpdateVisible = True
                        End If
                        If Not isChecked Then
                            chkAll.Checked = False
                        End If
                    Next
                End If
            Next
            GetTotalRemainAlloLables()
            lblerrorPopUp.Text = ""
        Catch ex As Exception
            lblError.Text = "Error occurred in Processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
	sSelfPath, "OnCheckedChanged", ErrorLevel.High)
        End Try
    End Sub

    Protected Sub OnRowDataBound(ByVal sender As Object, ByVal e As GridViewRowEventArgs)
        Try

            If e.Row.RowType = DataControlRowType.DataRow Then

                Dim tempDt As DataTable
                tempDt = CType(Session("dtDRAFCNPreTradeAllocation"), DataTable)




                Dim rowDataBoundIndex As Integer = e.Row.RowIndex

                Dim ddlRM_Name As RadDropDownList = TryCast(e.Row.FindControl("ddlRMName"), RadDropDownList)

                Dim lblRM_Name As Label
                If Not IsNothing(TryCast(e.Row.FindControl("txtRM_Name"), Label)) Then
                    lblRM_Name = TryCast(e.Row.FindControl("txtRM_Name"), Label)
                Else
                    lblRM_Name.Text = ""
                End If
                With ddlRM_Name
                    .DataSource = Session("DRAFCN_DTRMList")
                    .DataTextField = "Host"
                    .DataValueField = "Rel_Manager_Name"
                    .DataBind()
                    .Items.Insert(0, "")
                End With
                ''<Nikhil M : 28Sep16 >
                If Not ddlRM_Name Is Nothing Then
                    ddlRM_Name.FindItemByText(lblRM_Name.Text).Selected = True
                End If

                ''<Nikhil M. on 26-Sep-2016: Added >
                Dim ddlCIFPAN As FinIQ_Fast_Find_Customer = TryCast(e.Row.FindControl("FindCustomer"), FinIQ_Fast_Find_Customer)

                Dim lblCIFPAN As Label
                If Not IsNothing(TryCast(e.Row.FindControl("lblCIFPAN"), Label)) Then
                    lblCIFPAN = TryCast(e.Row.FindControl("lblCIFPAN"), Label)
                Else
                    lblCIFPAN.Text = ""
                End If

                ''<Nikhil M : 28Sep16 >
                '       If lblRM_Name.Text <> "" Then
                '             Dim dtCIFPANTemp As DataTable
                '             dtCIFPANTemp = New DataTable("dtCIFPANTemp")
                '            SetDrpCIFPAN(LoginInfoGV.Login_Info.EntityID.ToString, ddlRM_Name.SelectedValue, dtCIFPANTemp)
                '            With ddlCIFPAN
                '               .DataTextField = "Name"
                '              .DataValueField = "CIF_PANId"
                '             .DataSource = dtCIFPANTemp
                '            .DataBind()
                '           .Items.Insert(0, "")
                '              End With
                '         Else
                '            With ddlCIFPAN
                '               .DataBind()
                '              .Items.Insert(0, "")
                '         End With


                If lblCIFPAN.Text <> "" Then
                    ddlCIFPAN.setCustName = lblCIFPAN.Text
                    ddlCIFPAN.HiddenCustomerId = tempDt.Rows(rowDataBoundIndex).Item("Cust_ID").ToString
                    ddlCIFPAN.HiddenDocId = tempDt.Rows(rowDataBoundIndex).Item("DocId").ToString
                End If
                '  End If
                '         If Not ddlCIFPAN Is Nothing Then
                '             ddlCIFPAN.FindItemByText(lblCIFPAN.Text).Selected = True
                '         End If
            End If
        Catch ex As Exception
            ''lblError.Text = "Error occurred in Processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                          sSelfPath, "OnRowDataBound", ErrorLevel.High)
        End Try
    End Sub

    Protected Sub ddl_OnSelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)
        Try
            Dim I As Integer
            Dim dtCIFPANTemp As DataTable
            I = DirectCast(CType(CType(CType(sender, RadDropDownList).Parent, DataControlFieldCell).Parent, GridViewRow), System.Web.UI.WebControls.GridViewRow).DataItemIndex

            Dim tempDt As DataTable
            tempDt = CType(Session("dtDRAFCNPreTradeAllocation"), DataTable)
            dtCIFPANTemp = New DataTable("dtCIFPANTemp")
            If CType(sender, RadDropDownList).ID = "ddlRMName" Then
                tempDt.Rows(I).Item("RM_Name") = CType(sender, RadDropDownList).SelectedItem.Text
                grdRMData.Rows(I).Cells(grdRMDataEnum.RM_Name).Controls.OfType(Of Label)().FirstOrDefault().Text = CType(sender, RadDropDownList).SelectedItem.Text
                '  SetDrpCIFPAN(LoginInfoGV.Login_Info.EntityID.ToString, CType(sender, RadDropDownList).SelectedItem.Text, dtCIFPANTemp)   'Removed by Mohit Lalwani on 05-Nov-2016
                'With grdRMData.Rows(I).Cells(grdRMDataEnum.Account_Number).Controls.OfType(Of RadDropDownList)().FirstOrDefault()
                '    .DataTextField = "Name"
                '    .DataValueField = "CIF_PANId"
                '    .DataSource = dtCIFPANTemp
                '    .DataBind()
                '    .Items.Insert(0, "")
                'End With
                '   CType(grdRMData.Rows(I).Cells(grdRMDataEnum.Account_Number).FindControl("ddlCIFPAN"), RadDropDownList).SelectedIndex = 0
                ' CType(grdRMData.Rows(I).FindControl("FindCustomer"), FinIQ_Fast_Find_Customer).Customer_Filter.ENTITY_LRC_SELECTED_RM
                'Added by Mohit Lalwani on 22-Oct-2016
                Dim FindCustomer As FinIQ_Fast_Find_Customer
                FindCustomer = CType(grdRMData.Rows(I).FindControl("FindCustomer"), FinIQ_Fast_Find_Customer)

                'Mohit Lalwani on 04-Nov-2016
                FindCustomer.setCustName = ""
                FindCustomer.HiddenCustomerName = ""
                FindCustomer.HiddenCustomerId = ""
                FindCustomer.HiddenDocId = ""
                '/Mohit Lalwani on 04-Nov-2016
                '/Added by Mohit Lalwani on 22-Oct-2016
            End If
            Session.Add("dtDRAFCNPreTradeAllocation", tempDt)
            Session.Add("dtCustomerCodes", dtCIFPANTemp)   '<RiddhiS. on 03-Oct-2016: To get Customer Segment>
        Catch ex As Exception
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
              sSelfPath, "ddl_OnSelectedIndexChanged", ErrorLevel.High)
        End Try
    End Sub

    Protected Sub ddlCIFPAN_onTextChanged(ByVal sender As Object, ByVal e As EventArgs)
        Dim I, cntCodes As Integer
        Dim tempDt As DataTable
        Dim dtCustomerCodes As DataTable
        tempDt = CType(Session("dtDRAFCNPreTradeAllocation"), DataTable)
        dtCustomerCodes = CType(Session("dtCustomerCodes"), DataTable)
        lblerrorPopUp.Text = ""
        Try
            ''<Start | Nikhil M. on 23-Sep-2016:Changed >
            If Not TypeOf sender Is TextBox Then
                I = DirectCast(CType(CType(CType(sender, RadDropDownList).Parent, DataControlFieldCell).Parent, GridViewRow), System.Web.UI.WebControls.GridViewRow).DataItemIndex

                If CType(sender, RadDropDownList).ID = "ddlCIFPAN" Then
                    If CType(sender, RadDropDownList).SelectedText.Trim = "" Then
                        lblerrorPopUp.Text = "Please Select code."
                        Exit Sub
                    End If
                    tempDt.Rows(I).Item("Account_Number") = CType(sender, RadDropDownList).SelectedItem.Text
                    grdRMData.Rows(I).Cells(grdRMDataEnum.Account_Number).Controls.OfType(Of Label)().FirstOrDefault().Text = CType(sender, RadDropDownList).SelectedItem.Text

                    ''<RiddhiS. on 10-Nov-2016: Commented>
                    ''After discussion with Milind K, Sanchita: Booking center dropdown is made editable and based on the selection customer's are filtered.
                    '<RiddhiS. on 03-Oct-2016: To change Booking Branch based on CIF of first row in Allocation grid>
                    ''Check first record and if it is a Retail customer then set Retail as booking center
                    'If I = 0 Then               ''To Change only according to first row
                    '    Dim drCustSegment As DataRow = dtCustomerCodes.Select("CIF_PANId = '" + CType(sender, RadDropDownList).SelectedItem.Text + "'")(0)
                    '    Dim sFirstCustSegment As String = drCustSegment.Item("Segment").ToString

                    '    If sFirstCustSegment.ToUpper = "RETAIL" Then
                    '        Dim sAvailableBKC As String()
                    '        For iBKC As Integer = 0 To ddlBookingBranchPopUpValue.Items.Count - 1
                    '            If ddlBookingBranchPopUpValue.Items.Item(iBKC).Value.ToUpper.Contains("RETAIL") Then
                    '                ddlBookingBranchPopUpValue.SelectedIndex = iBKC
                    '                Exit For
                    '            End If
                    '        Next
                    '    ElseIf sFirstCustSegment.ToUpper = "PVB" Then
                    '        Dim sAvailableBKC As String()
                    '        For iBKC As Integer = 0 To ddlBookingBranchPopUpValue.Items.Count - 1
                    '            If Not ddlBookingBranchPopUpValue.Items.Item(iBKC).Value.ToUpper.Contains("RETAIL") Then
                    '                ddlBookingBranchPopUpValue.SelectedIndex = iBKC
                    '                Exit For
                    '            End If
                    '        Next
                    '    End If


                    'For cntCodes = 0 To dtCustomerCodes.Rows.Count - 1
                    '    If dtCustomerCodes.Rows(cntCodes).Item("CIF_PANId").ToString = CType(sender, RadDropDownList).SelectedItem.Text Then
                    '        If dtCustomerCodes.Rows(cntCodes).Item("Segment").ToString.ToUpper = "RETAIL" Then
                    '            ddlBookingBranchPopUpValue.SelectedValue = "Retail"
                    '            ddlBookingBranchPopUpValue.SelectedText = "Singapore Retail"
                    '            Exit For
                    '        Else
                    '            ddlBookingBranchPopUpValue.SelectedValue = "SG"
                    '            ddlBookingBranchPopUpValue.SelectedText = "Singapore"
                    '        End If
                    '    End If
                    'Next
                    ' End If
                    '</RiddhiS. on 03-Oct-2016>

                End If
                ''<End | Nikhil M. on 23-Sep-2016:Changed >
            ElseIf CType(sender, TextBox).ID = "txtAlloNotional" Then
                I = DirectCast(CType(CType(CType(sender, TextBox).Parent, DataControlFieldCell).Parent, GridViewRow), System.Web.UI.WebControls.GridViewRow).DataItemIndex

                If Qty_Validate(CType(sender, TextBox).Text) = False Then
                    Exit Sub
                End If

                CType(sender, TextBox).Text = SetNumberFormat(FinIQApp_Number.ConvertFormattedAmountToNumber(CType(sender, TextBox).Text).ToString, 0)

                tempDt.Rows(I).Item(2) = CType(sender, TextBox).Text
                grdRMData.Rows(I).Cells(grdRMDataEnum.Notional).Controls.OfType(Of Label)().FirstOrDefault().Text = CType(sender, TextBox).Text
            End If
            Session.Add("dtDRAFCNPreTradeAllocation", tempDt)
            GetTotalRemainAlloLables()
        Catch ex As Exception
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
              sSelfPath, "ddlCIFPAN_onTextChanged", ErrorLevel.High)
        End Try
    End Sub
    Private Sub GetTotalRemainAlloLables()
        Try
            Dim TotalSum As Double
            TotalSum = 0
            For Each row As GridViewRow In grdRMData.Rows
                If row.Cells(3).Controls.OfType(Of TextBox)().FirstOrDefault().Text.Trim <> "" _
                And row.Cells(0).Controls.OfType(Of CheckBox)().FirstOrDefault().Checked Then
                    TotalSum = TotalSum + CDbl(row.Cells(3).Controls.OfType(Of TextBox)().FirstOrDefault().Text)
                End If
            Next
            lblTotalAmt.Visible = True
            lblTotalAmtVal.Visible = True
            lblTotalAmtVal.Text = lblNotionalPopUpValue.Text
            lblAlloAmt.Visible = True
            lblAlloAmtVal.Visible = True
            lblAlloAmtVal.Text = SetNumberFormat(FinIQApp_Number.ConvertFormattedAmountToNumber(CStr(TotalSum)).ToString, 0)
            lblRemainNotional.Visible = True
            lblRemainNotionalVal.Visible = True
            lblRemainNotionalVal.Text = SetNumberFormat(FinIQApp_Number.ConvertFormattedAmountToNumber(CStr(CDbl(lblTotalAmtVal.Text) - CDbl(lblAlloAmtVal.Text))).ToString, 0)
            lblRemainNotional.ForeColor = Color.Green
            lblRemainNotionalVal.ForeColor = Color.Green
            If CDbl(lblAlloAmtVal.Text) > CDbl(lblTotalAmtVal.Text) Then
                lblAlloAmt.ForeColor = Color.Red
                lblAlloAmtVal.ForeColor = Color.Red
            Else
                lblAlloAmt.ForeColor = Color.Black
                lblAlloAmtVal.ForeColor = Color.Black
            End If
            If ((CDbl(lblRemainNotionalVal.Text) > CDbl(lblTotalAmtVal.Text)) Or CDbl(lblRemainNotionalVal.Text) < 0) Then
                lblRemainNotional.ForeColor = Color.Red
                lblRemainNotionalVal.ForeColor = Color.Red
            End If
        Catch ex As Exception
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
             sSelfPath, "GetTotalRemainAlloLables", ErrorLevel.High)
        End Try
    End Sub
    Private Sub btnAddAllocation_ServerClick(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnAddAllocation.ServerClick
        Try
            grdRMData.Visible = True
            funAdd()

        Catch ex As Exception
            lblerror.Text = "Error occurred in Processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                          sSelfPath, "btnAddAllocation_ServerClick", ErrorLevel.High)
        End Try
    End Sub

    Public Function savePretradeAllocation(ByVal sRFQ As String) As StringBuilder
        Try
            Dim Xml As New StringBuilder

            If sRFQ = "" Or sRFQ = "&nbsp;" Or Val(sRFQ) < 0 Then
                lblerror.Text = "RFQ not valid."
                Return Xml.Append("")
            End If


            'Dim Xml_Update As New StringBuilder
            Xml.Append("<AllocationDetails>")
            'Xml_Update.Append("<AllocationDetails>")

            For Each row As GridViewRow In grdRMData.Rows
                If row.RowType = DataControlRowType.DataRow Then
                    Dim isChecked As Boolean = row.Cells(0).Controls.OfType(Of CheckBox)().FirstOrDefault().Checked
                    If isChecked And row.Cells(3).Controls.OfType(Of Label)().FirstOrDefault().Text.Trim <> "" Then
                        Xml.Append("<OrderDetails>")
                        ''Xml.Append("<EPOF_OrderPoolId>" & sRFQ + "1" & "</EPOF_OrderPoolId>")
                        Xml.Append("<EPOF_OrderPoolId>orderID</EPOF_OrderPoolId>")
                        Xml.Append("<EPOF_Created_By>" & LoginInfoGV.Login_Info.LoginId & "</EPOF_Created_By>")
                        Xml.Append("<EPOF_CashOrderQuantity>" & (row.Cells(3).Controls.OfType(Of TextBox)().FirstOrDefault().Text.Replace(",", "")) & "</EPOF_CashOrderQuantity>")
                        'Xml.Append("<EPOF_OrderInfo>" & CType((row.Cells(2).Controls.OfType(Of FinIQ_Fast_Find_Customer)().FirstOrDefault()), FinIQ_Fast_Find_Customer).HiddenCIFNo & "</EPOF_OrderInfo>") ''<Nikhil M. on 24-Sep-2016: Changed>
                        Xml.Append("<EPOF_OrderInfo>" & CType((row.Cells(2).Controls.OfType(Of FinIQ_Fast_Find_Customer)().FirstOrDefault()), FinIQ_Fast_Find_Customer).HiddenCustomerId & "</EPOF_OrderInfo>") ''<Nikhil M. on 24-Sep-2016: Changed>

                        Xml.Append("<EPOF_Allocation_RM>" & (row.Cells(1).Controls.OfType(Of RadDropDownList)().FirstOrDefault().SelectedValue) & "</EPOF_Allocation_RM>") ''<Nikhil M. on 26-Sep-2016: Changed>
                        Xml.Append("</OrderDetails>")
                    End If
                End If
            Next

            Xml.Append("</AllocationDetails>")
            'Xml_Update.Append("</AllocationDetails>")

            '' ''<Dilkhush 28Sep2016:- Commnted and return String from function to insert action after order placed i.e. in order placed sp>
            ''Select Case objELNRFQ.Web_Insert_PostOrderAllocation(Xml.ToString, Xml_Update.ToString, "A")
            ''    Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
            ''        Return True
            ''    Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
            ''        Return False
            ''End Select
            '' ''<Dilkhush 28Sep2016:- Commnted and return String from function to insert action after order placed i.e. in order placed sp>
            Return Xml
        Catch ex As Exception
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                          sSelfPath, "savePretradeAllocation", ErrorLevel.High)
            Throw ex
        End Try

    End Function

    Function chkDuplicateRecords() As Boolean
        Try
            Dim tempDt As DataTable
            tempDt = New DataTable("tempDt")
            Dim sDuplicateRec As String = ""
            Dim sDuplicateRec1 As String = "" ''Added by AshwiniP 22Sept2016
            Dim j As Integer = 0
            Dim x As Integer = 0
            tempDt = CType(Session("dtDRAFCNPreTradeAllocation"), DataTable)
            If Not tempDt Is Nothing Then
                If tempDt.Rows.Count = 0 Then
                    lblerrorPopUp.Text = "No records to insert."
                    Return False
                End If
            End If
            Dim duplicatesNo As IEnumerable(Of String)
            Dim duplicatesName As IEnumerable(Of String)

            '' chkUpfrontOverride.Visible = False
                For Each row As GridViewRow In grdRMData.Rows
                    If row.RowType = DataControlRowType.DataRow Then
                    If row.Cells(0).Controls.OfType(Of CheckBox)().FirstOrDefault().Checked And tempDt.Rows(j)("EPOF_OrderId").ToString().Trim().ToUpper() = "CHECK" Then

                        Dim RM_Name As String = ""
                        Dim RM_AccountNumber As String = ""

                        Dim cnt As Integer = 0

                        RM_Name = tempDt.Rows(j)("RM_Name").ToString().ToUpper()
                        RM_AccountNumber = tempDt.Rows(j)("Account_Number").ToString().ToUpper()
                        For i As Integer = 0 To tempDt.Rows.Count - 1
                            If RM_Name = tempDt.Rows(i)("RM_Name").ToString().ToUpper() And _
                                RM_AccountNumber = tempDt.Rows(i)("Account_Number").ToString().ToUpper() And _
                                tempDt.Rows(i)("EPOF_OrderId").ToString().ToUpper() = "CHECK" Then
                                cnt += 1
                    End If


                Next

                        If cnt > 1 Then
                            chkUpfrontOverride.Visible = False
                            chkUpfrontOverride.Checked = False
                            lblerrorPopUp.Text = "Above records contain duplicate entries."
                Return False
            End If
                    End If
                End If
                j += 1
                x += 1
            Next
            Return True


            'Select Case objReadConfig.ReadConfig(dsConfig, "EQC_ShowAllocationAccountNumber", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper
            '    Case "Y", "YES"
            '        duplicatesNo = tempDt.AsEnumerable().GroupBy(Function(i) i.Field(Of String)("Account_Number")).Where(Function(g) g.Count() > 1).Select(Function(g) g.Key)
            'End Select

            'Select Case objReadConfig.ReadConfig(dsConfig, "EQC_ShowAllocationRMName", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "NO").Trim.ToUpper
            '    Case "Y", "YES"
            '        duplicatesName = tempDt.AsEnumerable().GroupBy(Function(i) i.Field(Of String)("RM_Name")).Where(Function(g) g.Count() > 1).Select(Function(g) g.Key)
            'End Select

            ' ''AshwiniP on 22Sept2016
            'For Each dup In duplicatesNo
            '    sDuplicateRec1 = dup + "," + sDuplicateRec
            'Next
            ' ''/AshwiniP on 22Sept2016
            'For Each dup In duplicatesName
            '    sDuplicateRec = dup + "," + sDuplicateRec
            'Next
            'If sDuplicateRec.Replace(",", "") <> "" And sDuplicateRec1.Replace(",", "") <> "" Then ''Changed by AshwiniP on 22Sept2016
            '    sDuplicateRec = sDuplicateRec.Substring(0, sDuplicateRec.Length - 1)
            '    chkUpfrontOverride.Visible = False
            '    chkUpfrontOverride.Checked = False
            '    lblerrorPopUp.Text = "Above records contain duplicate entries."
            '    Return False
            'Else
            '    Return True
            'End If

        Catch ex As Exception
            Throw ex
        End Try
    End Function
    '<Rushikesh End>
    		    ''<Nikhil M. on 20-Sep-2016: Added to reset all cheakbox>
    Public Function ResetAllChkBox() As Boolean
        Try
            chkCITI.Checked = False
            chkJPM.Checked = False
            chkHSBC.Checked = False
            chkBNPP.Checked = False
            chkBAML.Checked = False
            chkUBS.Checked = False
            chkCS.Checked = False
            chkOCBC.Checked = False
            chkDBIB.Checked = False
            chkLEONTEQ.Checked = False
            chkCOMMERZ.Checked = False
        Catch ex As Exception
				Throw ex
        End Try

    End Function

    Private Sub chkOCBC_CheckedChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles chkOCBC.CheckedChanged
        Try
            hdnBestStrike.Value = lblOCBCPrice.Text
            hdnBestProvider.Value = "OCBC"
            CheckUncheck(chkOCBC)
        Catch ex As Exception
            Throw ex
        End Try
    End Sub


    Private Sub chkLEONTEQ_CheckedChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles chkLEONTEQ.CheckedChanged
        Try
            hdnBestStrike.Value = lblLEONTEQPrice.Text
            hdnBestProvider.Value = "LEONTEQ"
            CheckUncheck(chkLEONTEQ)
            ''<Nikhil M. on 22-Oct-2016: Added for Enabling the conrol for Hedge>
            If UCase(Request.QueryString("EXTLOD")) = "HEDGE" Then
                EnableDisableForOrderPoolData(Convert.ToString(Session("RePricePPName")))
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub chkCOMMERZ_CheckedChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles chkCOMMERZ.CheckedChanged
        Try
            hdnBestStrike.Value = lblCOMMERZPrice.Text
            hdnBestProvider.Value = "COMMERZ"
            CheckUncheck(chkCOMMERZ)
            ''<Nikhil M. on 22-Oct-2016: Added for Enabling the conrol for Hedge>
            If UCase(Request.QueryString("EXTLOD")) = "HEDGE" Then
                EnableDisableForOrderPoolData(Convert.ToString(Session("RePricePPName")))
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Sub
    ''Dilkhush 23sep2016 Added for filter best price RFQ else load all RFQ
    Private Sub chkExpandAllRFQ_CheckedChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles chkExpandAllRFQ.CheckedChanged
        Try
            fill_DRA_FCN_Grid()
            RestoreSolveAll()
            RestoreAll()
            ''<Nikhil M. on 22-Oct-2016: Added for Enabling the conrol for Hedge>
            If UCase(Request.QueryString("EXTLOD")) = "HEDGE" Then
                EnableDisableForOrderPoolData(Convert.ToString(Session("RePricePPName")))
            End If
        Catch ex As Exception
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "chkExpandAllRFQ_CheckedChanged", ErrorLevel.High)
        End Try
    End Sub
''Start | Chitralekha M on 26-Sep-16>
    Private Sub KYIR_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles KYIR.Click
        Dim filePath As String
        Dim fileName As String
        Try
            filePath = objReadConfig.ReadConfig(dsConfig, "EQC_ProductKYIRPath", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "C:\FinIQ\Product_Info\")
            Select Case tabContainer.ActiveTabIndex
                Case prdTab.DRA
                    fileName = "KYIR - DRA.pdf"
                Case prdTab.FCN
                    fileName = "KYIR - FCN.pdf"
            End Select
            filePath = filePath + fileName
            Response.ContentType = ContentType
            Response.AppendHeader("Content-Disposition", ("attachment; filename=" + fileName))
            Response.TransmitFile(filePath)
            Response.End()
        Catch ex As Exception
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "KYIR_Click", ErrorLevel.High)
        End Try
    End Sub
    ''End | Chitralekha M on 26-Sep-16>

    
      ''<Nikhil M. on 26-Sep-2016: Added>
    Public Function SetDrpCIFPAN(ByVal UserEntityId As String, ByVal RMName As String, ByRef dtCIFPANTemp As DataTable) As Boolean
        Dim dtPANCIF As DataTable
        Try
            dtPANCIF = New DataTable("Dummy")
            Select Case objELNRFQ.DB_Get_CIFPAN(UserEntityId, "", RMName, dtPANCIF)
                Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                    dtCIFPANTemp = dtPANCIF
                Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                    dtCIFPANTemp = dtPANCIF
                Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                    dtCIFPANTemp = dtPANCIF
            End Select
        Catch ex As Exception
            Throw ex
        End Try

    End Function

 '<RiddhiS. on 17-Sep-2016: For Document Generation>
    
     Private Sub btnBAMLDoc_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnBAMLDoc.Click
        Dim hashRFQID As Hashtable
        Dim hashPPId As Hashtable
        Dim strBAMLID As String
        Try
            hashPPId = New Hashtable
            hashRFQID = New Hashtable
            hashRFQID = CType(Session("Hash_Values"), Hashtable)
            hashPPId = CType(Session("PP_IdTable"), Hashtable)

            If hashRFQID Is Nothing Then                                 ''SinglePricing
                strBAMLID = Convert.ToString(Session("Quote_ID"))
            Else                                                         ''PriceAll
                strBAMLID = CStr(hashRFQID(hashPPId("BAML")))
            End If

            'Generate_DRAFCN(strBAMLID)  '<RiddhiS. on 09-Oct-2016: To open KYIR on button click>
            KYIR_Click(sender, e)

        Catch ex As Exception
            lblerror.Text = "Error occurred on Document load event."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnBAMLDoc_Click", ErrorLevel.High)
            Throw ex
        End Try
    End Sub

    Private Sub btnBNPPDoc_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnBNPPDoc.Click
        Dim hashRFQID As Hashtable
        Dim hashPPId As Hashtable
        Dim strBNPPID As String
        Try
            hashPPId = New Hashtable
            hashRFQID = New Hashtable
            hashRFQID = CType(Session("Hash_Values"), Hashtable)
            hashPPId = CType(Session("PP_IdTable"), Hashtable)

            If hashRFQID Is Nothing Then                                 ''SinglePricing
                strBNPPID = Convert.ToString(Session("Quote_ID"))
            Else                                                         ''PriceAll
                strBNPPID = CStr(hashRFQID(hashPPId("BNPP")))
            End If

            'Generate_DRAFCN(strBNPPID)  '<RiddhiS. on 09-Oct-2016: To open KYIR on button click>
            KYIR_Click(sender, e)

        Catch ex As Exception
            lblerror.Text = "Error occurred on Document load event."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnBNPPDoc_Click", ErrorLevel.High)
        End Try
    End Sub

    Private Sub btnCITIDoc_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnCITIDoc.Click
        Dim hashRFQID As Hashtable
        Dim hashPPId As Hashtable
        Dim strCITIID As String
        Try
            hashPPId = New Hashtable
            hashRFQID = New Hashtable
            hashRFQID = CType(Session("Hash_Values"), Hashtable)
            hashPPId = CType(Session("PP_IdTable"), Hashtable)

            If hashRFQID Is Nothing Then                                 ''SinglePricing
                strCITIID = Convert.ToString(Session("Quote_ID"))
            Else                                                         ''PriceAll
                strCITIID = CStr(hashRFQID(hashPPId("CITI")))
            End If

            'Generate_DRAFCN(strCITIID)      '<RiddhiS. on 09-Oct-2016: To open KYIR on button click>
            KYIR_Click(sender, e)

        Catch ex As Exception
            lblerror.Text = "Error occurred on Document load event."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnCITIDoc_Click", ErrorLevel.High)
        End Try
    End Sub

    Private Sub btnCOMMERZDoc_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnCOMMERZDoc.Click
        Dim hashRFQID As Hashtable
        Dim hashPPId As Hashtable
        Dim strCOMMERZID As String
        Try
            hashPPId = New Hashtable
            hashRFQID = New Hashtable
            hashRFQID = CType(Session("Hash_Values"), Hashtable)
            hashPPId = CType(Session("PP_IdTable"), Hashtable)

            If hashRFQID Is Nothing Then                                 ''SinglePricing
                strCOMMERZID = Convert.ToString(Session("Quote_ID"))
            Else                                                         ''PriceAll
                strCOMMERZID = CStr(hashRFQID(hashPPId("COMMERZ")))
            End If

            'Generate_DRAFCN(strCOMMERZID)   '<RiddhiS. on 09-Oct-2016: To open KYIR on button click>
            KYIR_Click(sender, e)

        Catch ex As Exception
            lblerror.Text = "Error occurred on Document load event."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnCOMMERZDoc_Click", ErrorLevel.High)
        End Try
    End Sub

    Private Sub btnCSDoc_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnCSDoc.Click
        Dim hashRFQID As Hashtable
        Dim hashPPId As Hashtable
        Dim strCSID As String
        Try
            hashPPId = New Hashtable
            hashRFQID = New Hashtable
            hashRFQID = CType(Session("Hash_Values"), Hashtable)
            hashPPId = CType(Session("PP_IdTable"), Hashtable)

            If hashRFQID Is Nothing Then                                 ''SinglePricing
                strCSID = Convert.ToString(Session("Quote_ID"))
            Else                                                         ''PriceAll
                strCSID = CStr(hashRFQID(hashPPId("CS")))
            End If

            'Generate_DRAFCN(strCSID)        '<RiddhiS. on 09-Oct-2016: To open KYIR on button click>
            KYIR_Click(sender, e)

        Catch ex As Exception
            lblerror.Text = "Error occurred on Document load event."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnCSDoc_Click", ErrorLevel.High)
        End Try
    End Sub

    Private Sub btnDBIBDoc_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnDBIBDoc.Click
        Dim hashRFQID As Hashtable
        Dim hashPPId As Hashtable
        Dim strDBIBID As String
        Try
            hashPPId = New Hashtable
            hashRFQID = New Hashtable
            hashRFQID = CType(Session("Hash_Values"), Hashtable)
            hashPPId = CType(Session("PP_IdTable"), Hashtable)

            If hashRFQID Is Nothing Then                                 ''SinglePricing
                strDBIBID = Convert.ToString(Session("Quote_ID"))
            Else                                                         ''PriceAll
                strDBIBID = CStr(hashRFQID(hashPPId("DBIB")))
            End If

            'Generate_DRAFCN(strDBIBID)      '<RiddhiS. on 09-Oct-2016: To open KYIR on button click>
            KYIR_Click(sender, e)

        Catch ex As Exception
            lblerror.Text = "Error occurred on Document load event."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnDBIBDoc_Click", ErrorLevel.High)
        End Try
    End Sub

    Private Sub btnHSBCDoc_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnHSBCDoc.Click
        Dim hashRFQID As Hashtable
        Dim hashPPId As Hashtable
        Dim strHSBCID As String
        Try
            hashPPId = New Hashtable
            hashRFQID = New Hashtable
            hashRFQID = CType(Session("Hash_Values"), Hashtable)
            hashPPId = CType(Session("PP_IdTable"), Hashtable)

            If hashRFQID Is Nothing Then                                 ''SinglePricing
                strHSBCID = Convert.ToString(Session("Quote_ID"))
            Else                                                         ''PriceAll
                strHSBCID = CStr(hashRFQID(hashPPId("HSBC")))
            End If

            'Generate_DRAFCN(strHSBCID)      '<RiddhiS. on 09-Oct-2016: To open KYIR on button click>
            KYIR_Click(sender, e)

        Catch ex As Exception
            lblerror.Text = "Error occurred on Document load event."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnHSBCDoc_Click", ErrorLevel.High)
        End Try
    End Sub

    Private Sub btnJPMDoc_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnJPMDoc.Click
        Dim hashRFQID As Hashtable
        Dim hashPPId As Hashtable
        Dim strJPMID As String
        Try
            hashPPId = New Hashtable
            hashRFQID = New Hashtable
            hashRFQID = CType(Session("Hash_Values"), Hashtable)
            hashPPId = CType(Session("PP_IdTable"), Hashtable)

            If hashRFQID Is Nothing Then                                 ''SinglePricing
                strJPMID = Convert.ToString(Session("Quote_ID"))
            Else                                                         ''PriceAll
                strJPMID = CStr(hashRFQID(hashPPId("JPM")))
            End If

            'Generate_DRAFCN(strJPMID)   '<RiddhiS. on 09-Oct-2016: To open KYIR on button click>
            KYIR_Click(sender, e)

        Catch ex As Exception
            lblerror.Text = "Error occurred on Document load event."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnJPMDoc_Click", ErrorLevel.High)
        End Try
    End Sub

    Private Sub btnLEONTEQDoc_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnLEONTEQDoc.Click
        Dim hashRFQID As Hashtable
        Dim hashPPId As Hashtable
        Dim strLEONTEQID As String
        Try
            hashPPId = New Hashtable
            hashRFQID = New Hashtable
            hashRFQID = CType(Session("Hash_Values"), Hashtable)
            hashPPId = CType(Session("PP_IdTable"), Hashtable)

            If hashRFQID Is Nothing Then                                 ''SinglePricing
                strLEONTEQID = Convert.ToString(Session("Quote_ID"))
            Else                                                         ''PriceAll
                strLEONTEQID = CStr(hashRFQID(hashPPId("LEONTEQ")))
            End If

            'Generate_DRAFCN(strLEONTEQID)   '<RiddhiS. on 09-Oct-2016: To open KYIR on button click>
            KYIR_Click(sender, e)

        Catch ex As Exception
            lblerror.Text = "Error occurred on Document load event."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnLEONTEQDoc_Click", ErrorLevel.High)
        End Try
    End Sub

    Private Sub btnOCBCDoc_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnOCBCDoc.Click
        Dim hashRFQID As Hashtable
        Dim hashPPId As Hashtable
        Dim strOCBCID As String
        Try
            hashPPId = New Hashtable
            hashRFQID = New Hashtable
            hashRFQID = CType(Session("Hash_Values"), Hashtable)
            hashPPId = CType(Session("PP_IdTable"), Hashtable)

            If hashRFQID Is Nothing Then                                 ''SinglePricing
                strOCBCID = Convert.ToString(Session("Quote_ID"))
            Else                                                         ''PriceAll
                strOCBCID = CStr(hashRFQID(hashPPId("OCBC")))
            End If

            'Generate_DRAFCN(strOCBCID)  '<RiddhiS. on 09-Oct-2016: To open KYIR on button click>
            KYIR_Click(sender, e)

        Catch ex As Exception
            lblerror.Text = "Error occurred on Document load event."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnOCBCDoc_Click", ErrorLevel.High)
        End Try
    End Sub

    Private Sub btnUBSDoc_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnUBSDoc.Click
        Dim hashRFQID As Hashtable
        Dim hashPPId As Hashtable
        Dim strUBSID As String
        Try
            hashPPId = New Hashtable
            hashRFQID = New Hashtable
            hashRFQID = CType(Session("Hash_Values"), Hashtable)
            hashPPId = CType(Session("PP_IdTable"), Hashtable)


            If hashRFQID Is Nothing Then                                 ''SinglePricing
                strUBSID = Convert.ToString(Session("Quote_ID"))
            Else                                                         ''PriceAll
                strUBSID = CStr(hashRFQID(hashPPId("UBS")))
            End If

            'Generate_DRAFCN(strUBSID)   '<RiddhiS. on 09-Oct-2016: To open KYIR on button click>
            KYIR_Click(sender, e)

        Catch ex As Exception
            lblerror.Text = "Error occurred on Document load event."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnUBSDoc_Click", ErrorLevel.High)
        End Try
    End Sub

    ''<Chitralekha M on 28-Sept-2016>
    Public Sub getFlag(ByVal Share As String, Optional ByRef sFlag As String = "")
        Dim sShareFlag As String
        Try
            Dim dt As DataTable
            sShareFlag = ""
            If Share.Trim = "" Then
                sFlag = ""
            Else
                If (Not IsNothing(CType(Session("Share_Value"), DataTable)) AndAlso CType(Session("Share_Value"), DataTable).Rows.Count > 0) Then
                    sShareFlag = CType(Session("Share_Value"), DataTable).Select("Code = '" + Share.Trim + "'")(0)("Flag").ToString
                    'lblAdvisoryFlagVal.Text = sShareFlag
                    sFlag = sShareFlag
                Else
                    dt = New DataTable("Dummy")
                    Select Case objELNRFQ.DB_UnderlyingRiskRatingShare(Share, dt)
                        Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful

                            sFlag = dt.Rows(0)(1).ToString
                            'If dt.Rows(0)(1).ToString = "Y" Then
                            '    lblAdvisoryFlagVal.ForeColor = Color.Green
                            '    lblAdvisoryFlagVal.Text = "Yes"

                            'Else
                            '    lblAdvisoryFlagVal.ForeColor = Color.Red
                            '    lblAdvisoryFlagVal.Text = "No"
                            'End If
                        Case Web_ELNRFQ.Database_Transaction_Response.Db_No_Data
                            lblAdvisoryFlagVal.ForeColor = Color.Red
                            lblAdvisoryFlagVal.Text = "No"
                        Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                            lblAdvisoryFlagVal.ForeColor = Color.Red
                            lblAdvisoryFlagVal.Text = "No"
                    End Select

                End If
            End If
        Catch ex As Exception
            lblerror.Text = "getFlag:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "getFlag", ErrorLevel.High)
            Throw ex
        End Try
    End Sub
    ''</Chitralekha M on 28-Sept-2016>



    'Added by Mohit Lalwani on 30-sept-2016 for customer control

    Public Sub CustomerSelected(ByVal Customer_Info As Fast_Customer_Info)
        Dim I As Integer
        Dim tempDt As DataTable
        Dim dtCustomerCodes As DataTable
        tempDt = CType(Session("dtDRAFCNPreTradeAllocation"), DataTable)
        dtCustomerCodes = CType(Session("dtCustomerCodes"), DataTable)
        lblerrorPopUp.Text = ""
        Try
            I = CInt(Customer_Info.ItemIndex)
            tempDt.Rows(I).Item("Account_Number") = CType(grdRMData.Rows(I).FindControl("FindCustomer"), FinIQ_Fast_Find_Customer).GetCustName
            tempDt.Rows(I).Item("Cust_ID") = CType(grdRMData.Rows(I).FindControl("FindCustomer"), FinIQ_Fast_Find_Customer).HiddenCustomerId  'Customer_Info.CustomerCIFNo
            tempDt.Rows(I).Item("DocId") = CType(grdRMData.Rows(I).FindControl("FindCustomer"), FinIQ_Fast_Find_Customer).HiddenDocId
            grdRMData.Rows(I).Cells(grdRMDataEnum.Account_Number).Controls.OfType(Of Label)().FirstOrDefault().Text = Customer_Info.CustomerName      'Customer_Info.CustomerName

            Session.Add("dtDRAFCNPreTradeAllocation", tempDt)

            ''<RiddhiS. on 10-Nov-2016: Commented>
            ''After discussion with Milind K, Sanchita: Booking center dropdown is made editable and based on the selection customer's are filtered
            '<AvinashG on 09-Oct-2016: Removing temporary drop down and using customer control itself>
            'If I = 0 Then               ''To Change only according to first row
            '    Dim sFirstCustName As String

            '    sFirstCustName = CType(grdRMData.Rows(I).FindControl("FindCustomer"), FinIQ_Fast_Find_Customer).GetCustName

            '    If sFirstCustName.ToUpper.Contains("TSO") Then
            '        Dim sAvailableBKC As String()
            '        For iBKC As Integer = 0 To ddlBookingBranchPopUpValue.Items.Count - 1
            '            If ddlBookingBranchPopUpValue.Items.Item(iBKC).Value.ToUpper.Contains("RETAIL") Then
            '                ddlBookingBranchPopUpValue.SelectedIndex = iBKC
            '                Exit For
            '            End If
            '        Next
            '    Else
            '        Dim sAvailableBKC As String()
            '        For iBKC As Integer = 0 To ddlBookingBranchPopUpValue.Items.Count - 1
            '            If Not ddlBookingBranchPopUpValue.Items.Item(iBKC).Value.ToUpper.Contains("RETAIL") Then
            '                ddlBookingBranchPopUpValue.SelectedIndex = iBKC
            '                Exit For
            '            End If
            '        Next
            '    End If
            'End If

            '' '' '' ''<RiddhiS. on 03-Oct-2016: To change Booking Branch based on CIF of first row in Allocation grid>
            ' '' '' '' ''Check first record and if it is a Retail customer then set Retail as booking center
            ' '' '' ''If I = 0 Then               ''To Change only according to first row
            ' '' '' ''    ' Dim drCustSegment As DataRow = dtCustomerCodes.Select("CIF_PANId = '" + CType(sender, RadDropDownList).SelectedItem.Text + "'")(0)
            ' '' '' ''    Dim drCustSegment As DataRow = dtCustomerCodes.Select("CIF_PANId = '" + CType(grdRMData.Rows(I).FindControl("FindCustomer"), FinIQ_Fast_Find_Customer).HiddenCIFNo + "'")(0)

            ' '' '' ''    Dim sFirstCustSegment As String = drCustSegment.Item("Segment").ToString

            ' '' '' ''    If sFirstCustSegment.ToUpper = "RETAIL" Then
            ' '' '' ''        Dim sAvailableBKC As String()
            ' '' '' ''        For iBKC As Integer = 0 To ddlBookingBranchPopUpValue.Items.Count - 1
            ' '' '' ''            If ddlBookingBranchPopUpValue.Items.Item(iBKC).Value.ToUpper.Contains("RETAIL") Then
            ' '' '' ''                ddlBookingBranchPopUpValue.SelectedIndex = iBKC
            ' '' '' ''                Exit For
            ' '' '' ''            End If
            ' '' '' ''        Next
            ' '' '' ''    ElseIf sFirstCustSegment.ToUpper = "PVB" Then
            ' '' '' ''        Dim sAvailableBKC As String()
            ' '' '' ''        For iBKC As Integer = 0 To ddlBookingBranchPopUpValue.Items.Count - 1
            ' '' '' ''            If Not ddlBookingBranchPopUpValue.Items.Item(iBKC).Value.ToUpper.Contains("RETAIL") Then
            ' '' '' ''                ddlBookingBranchPopUpValue.SelectedIndex = iBKC
            ' '' '' ''                Exit For
            ' '' '' ''            End If
            ' '' '' ''        Next
            ' '' '' ''    End If


            ' '' '' ''    'For cntCodes = 0 To dtCustomerCodes.Rows.Count - 1
            ' '' '' ''    '    If dtCustomerCodes.Rows(cntCodes).Item("CIF_PANId").ToString = CType(sender, RadDropDownList).SelectedItem.Text Then
            ' '' '' ''    '        If dtCustomerCodes.Rows(cntCodes).Item("Segment").ToString.ToUpper = "RETAIL" Then
            ' '' '' ''    '            ddlBookingBranchPopUpValue.SelectedValue = "Retail"
            ' '' '' ''    '            ddlBookingBranchPopUpValue.SelectedText = "Singapore Retail"
            ' '' '' ''    '            Exit For
            ' '' '' ''    '        Else
            ' '' '' ''    '            ddlBookingBranchPopUpValue.SelectedValue = "SG"
            ' '' '' ''    '            ddlBookingBranchPopUpValue.SelectedText = "Singapore"
            ' '' '' ''    '        End If
            ' '' '' ''    '    End If
            ' '' '' ''    'Next
            ' '' '' ''End If
            '' '' '' ''</RiddhiS. on 03-Oct-2016>



            GetTotalRemainAlloLables()
        Catch ex As Exception
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
              sSelfPath, "CustomerSelected", ErrorLevel.High)
        End Try

    End Sub

    '/Added by Mohit Lalwani on 30-sept-2016 for customer control

    ''' <summary>
    ''' 14Oct2016:-Dilkhush to rest on value change
    ''' </summary>
    ''' <param name="sender"></param>
    ''' <param name="e"></param>
    ''' <remarks></remarks>
    Private Sub ddlKOType_SelectedIndexChanged(ByVal sender As Object, ByVal e As Telerik.Web.UI.DropDownListEventArgs) Handles ddlKOType.SelectedIndexChanged
        Try
            lblerror.Text = ""
            clearFields()
            If ddlKOType.SelectedValue = "NONE" Then
                txtKOLevel.Text = "0.00"
                txtKOLevel.Enabled = False
            End If
            ResetAll()
            GetCommentary_DRA()

        Catch ex As Exception
            lblerror.Text = "ddlKOType_SelectedIndexChanged:Error occurred in processing."
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "ddlKOType_SelectedIndexChanged", ErrorLevel.High)
        End Try
    End Sub




    Private Sub btnSaveSettings_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnSaveSettings.Click
        Dim o_strXMLNote_DefaultValues As String
        Dim DefaultSetting_Level As String
        Dim ApplicationID As String
        Try
            If Not IsNothing(Request.QueryString("PrdToLoad")) Then
                If UCase(Request.QueryString("PrdToLoad")) = "DRA" Then
                    ApplicationID = "DRA_DealEntry"
                Else
                    ApplicationID = "FCN_DealEntry"
                End If
            Else
                ApplicationID = "FCN_DealEntry"
            End If
            If Write_PersonalSettings_TOXML(o_strXMLNote_DefaultValues) = True Then
                Select Case objELNRFQ.Web_Insert_DRAFCN_DefaultSettings(CStr(o_strXMLNote_DefaultValues), CStr(LoginInfoGV.Login_Info.EntityID), LoginInfoGV.Login_Info.LoginId, ApplicationID, objReadConfig.ReadConfig(dsConfig, "EQC_DefaultSetting_Level", "ELN", CStr(LoginInfoGV.Login_Info.EntityID), "ENTITY").Trim.ToUpper, LoginInfoGV.Login_Info.LoginId)
                    Case Web_ELNRFQ.Database_Transaction_Response.Db_Successful
                        lblError_DefaultSettings.Text = "Personal settings saved successfully!"
                        lblError_DefaultSettings.ForeColor = Color.Blue
                    Case Web_ELNRFQ.Database_Transaction_Response.DB_Unsuccessful
                        lblError_DefaultSettings.Text = "Error occured in saving personal settings."
                        lblError_DefaultSettings.ForeColor = Color.Red
                End Select
            End If
        Catch ex As Exception
            lblError_DefaultSettings.Text = "Error occured in saving personal settings."
            lblError_DefaultSettings.ForeColor = Color.Red
            LogException(LoginInfoGV.Login_Info.LoginId, "Exception:" + ex.Message.ToString, LogType.FnqError, ex, _
                         sSelfPath, "btnSaveSettings_Click", ErrorLevel.High)
        End Try

    End Sub

End Class
